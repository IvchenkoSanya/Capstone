[
  {
    "query": "CSS",
    "llm_version": "gpt_4",
    "language": "English",
    "course_content": {
      "course_name": "CSS Tutorial",
      "lessons": [
        {
          "title": "CSS",
          "topics": []
        },
        {
          "title": "Introduction",
          "topics": []
        },
        {
          "title": "Syntax and Selectors",
          "topics": []
        },
        {
          "title": "How to...",
          "topics": []
        },
        {
          "title": "Colors",
          "topics": []
        },
        {
          "title": "Backgrounds",
          "topics": []
        },
        {
          "title": "Borders",
          "topics": []
        },
        {
          "title": "Margins",
          "topics": []
        },
        {
          "title": "Padding",
          "topics": []
        },
        {
          "title": "Height and Width",
          "topics": []
        },
        {
          "title": "Box Model",
          "topics": []
        },
        {
          "title": "Outline",
          "topics": []
        },
        {
          "title": "Text",
          "topics": []
        },
        {
          "title": "Fonts",
          "topics": []
        },
        {
          "title": "Icons",
          "topics": []
        },
        {
          "title": "Links",
          "topics": []
        },
        {
          "title": "Lists",
          "topics": []
        },
        {
          "title": "Tables",
          "topics": []
        },
        {
          "title": "Display",
          "topics": []
        },
        {
          "title": "Width and max-width",
          "topics": []
        },
        {
          "title": "The position Property",
          "topics": []
        },
        {
          "title": "Overflow",
          "topics": []
        },
        {
          "title": "Float and clear",
          "topics": []
        },
        {
          "title": "display: inline-block",
          "topics": []
        },
        {
          "title": "Horizontal & Vertical Align",
          "topics": []
        },
        {
          "title": "Combinators",
          "topics": []
        },
        {
          "title": "Pseudo-classes",
          "topics": []
        },
        {
          "title": "Pseudo-elements",
          "topics": []
        },
        {
          "title": "Opacity / Transparency",
          "topics": []
        },
        {
          "title": "Navigation Bar",
          "topics": []
        },
        {
          "title": "Dropdowns",
          "topics": []
        },
        {
          "title": "Image Gallery",
          "topics": []
        },
        {
          "title": "Image Sprites",
          "topics": []
        },
        {
          "title": "Attribute Selectors",
          "topics": []
        },
        {
          "title": "Forms",
          "topics": []
        },
        {
          "title": "Counters",
          "topics": []
        },
        {
          "title": "Website Layout",
          "topics": []
        },
        {
          "title": "Units",
          "topics": []
        },
        {
          "title": "Specificity",
          "topics": []
        },
        {
          "title": "Rounded Corners",
          "topics": []
        },
        {
          "title": "Border Images",
          "topics": []
        },
        {
          "title": "Multiple Backgrounds",
          "topics": []
        },
        {
          "title": "Colors",
          "topics": []
        },
        {
          "title": "Gradients",
          "topics": []
        },
        {
          "title": "Shadow Effects",
          "topics": []
        },
        {
          "title": "Text Effects",
          "topics": []
        },
        {
          "title": "Web Fonts",
          "topics": []
        },
        {
          "title": "2D Transforms",
          "topics": []
        },
        {
          "title": "3D Transforms",
          "topics": []
        },
        {
          "title": "Transitions",
          "topics": []
        },
        {
          "title": "Animations",
          "topics": []
        },
        {
          "title": "Tooltip",
          "topics": []
        },
        {
          "title": "Styling Images",
          "topics": []
        },
        {
          "title": "The object-fit Property",
          "topics": []
        }
      ],
      "content": [
        {
          "CSS": {
            "content": "<p>\r\n\tCSS<br />\r\n\t[[! | https://www.w3schools.com/css/]]</p>"
          }
        },
        {
          "Introduction": {
            "content": "<h2>\r\n\tWhat is CSS?</h2>\r\n<ul>\r\n\t<li>\r\n\t\tCSS stands for Cascading Style Sheets</li>\r\n\t<li>\r\n\t\tCSS describes how HTML elements are to be displayed on screen, paper, or in other media</li>\r\n\t<li>\r\n\t\tCSS saves a lot of work. It can control the layout of multiple web pages all at once</li>\r\n\t<li>\r\n\t\tExternal stylesheets are stored in CSS files</li>\r\n</ul>\r\n<h2>\r\n\tWhy Use CSS?</h2>\r\n<p>\r\n\tCSS is used to define styles for your web pages, including the design, layout and variations in display for different devices and screen sizes.&nbsp;</p>\r\n<h2>\r\n\tCSS Solved a Big Problem</h2>\r\n<p>\r\n\tHTML was NEVER intended to contain tags for formatting a web page!</p>\r\n<p>\r\n\tHTML was created to describe the content of a web page, like:</p>\r\n<p>\r\n\t&lt;h1&gt;This is a heading&lt;/h1&gt;</p>\r\n<p>\r\n\t&lt;p&gt;This is a paragraph.&lt;/p&gt;</p>\r\n<p>\r\n\tWhen tags like &lt;font&gt;, and color attributes were added to the HTML 3.2 specification, it started a nightmare for web developers. Development of large websites, where fonts and color information were added to every single page, became a long and expensive process.</p>\r\n<p>\r\n\tTo solve this problem, the World Wide Web Consortium (W3C) created CSS.</p>\r\n<p>\r\n\tCSS removed the style formatting from the HTML page!</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tIf you don&#39;t know what HTML is, we suggest that you read our [[ link | html]]HTML Tutorial[[ endl ]].</p>\r\n</blockquote>\r\n<h2>\r\n\tCSS Saves a Lot of Work!</h2>\r\n<p>\r\n\tThe style definitions are normally saved in external .css files.</p>\r\n<p>\r\n\tWith an external stylesheet file, you can change the look of an entire website by changing just one file!</p>"
          }
        },
        {
          "Syntax and Selectors": {
            "content": "<h2>\r\n\tCSS Syntax</h2>\r\n<p>\r\n\tA CSS rule-set consists of a selector and a declaration block:</p>\r\n<p>\r\n\t[[ image(css-tutorial/selector.gif, center) ]]</p>\r\n<p>\r\n\tThe selector points to the HTML element you want to style.</p>\r\n<p>\r\n\tThe declaration block contains one or more declarations separated by semicolons.</p>\r\n<p>\r\n\tEach declaration includes a CSS property name and a value, separated by a colon.</p>\r\n<p>\r\n\tA CSS declaration always ends with a semicolon, and declaration blocks are surrounded by curly braces.</p>\r\n<p>\r\n\tIn the following example all &lt;p&gt; elements will be center-aligned, with a red text color:</p>\r\n<pre>\r\n<code>p {\r\n  color: red;\r\n  text-align: center;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Selectors</h2>\r\n<p>\r\n\tCSS selectors are used to &quot;find&quot; (or select) HTML elements based on their element name, id, class, attribute, and more.</p>\r\n<h2>\r\n\tThe element Selector</h2>\r\n<p>\r\n\tThe element selector selects elements based on the element name.</p>\r\n<p>\r\n\tYou can select all &lt;p&gt; elements on a page like this (in this case, all &lt;p&gt; elements will be center-aligned, with a red text color):</p>\r\n<pre>\r\n<code>p {\r\n  text-align: center;\r\n  color: red;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe id Selector</h2>\r\n<p>\r\n\tThe id selector uses the id attribute of an HTML element to select a specific element.</p>\r\n<p>\r\n\tThe id of an element should be unique within a page, so the id selector is used to select one unique element!</p>\r\n<p>\r\n\tTo select an element with a specific id, write a hash (#) character, followed by the id of the element.</p>\r\n<p>\r\n\tThe style rule below will be applied to the HTML element with id=&quot;para1&quot;:</p>\r\n<pre>\r\n<code>#para1 {\r\n  text-align: center;\r\n  color: red;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: An id name cannot start with a number!</p>\r\n</blockquote>\r\n<h2>\r\n\tThe class Selector</h2>\r\n<p>\r\n\tThe class selector selects elements with a specific class attribute.</p>\r\n<p>\r\n\tTo select elements with a specific class, write a period (.) character, followed by the name of the class.</p>\r\n<p>\r\n\tIn the example below, all HTML elements with class=&quot;center&quot; will be red and center-aligned:</p>\r\n<pre>\r\n<code>.center {\r\n  text-align: center;\r\n  color: red;\r\n}\r\n</code></pre>\r\n<p>\r\n\tYou can also specify that only specific HTML elements should be affected by a class.</p>\r\n<p>\r\n\tIn the example below, only &lt;p&gt; elements with class=&quot;center&quot; will be center-aligned:</p>\r\n<pre>\r\n<code>p.center {\r\n  text-align: center;\r\n  color: red;\r\n}\r\n</code></pre>\r\n<p>\r\n\tHTML elements can also refer to more than one class.</p>\r\n<p>\r\n\tIn the example below, the &lt;p&gt; element will be styled according to class=&quot;center&quot; and to class=&quot;large&quot;:</p>\r\n<pre>\r\n<code>&lt;p class=&quot;center large&quot;&gt;This paragraph refers to two classes.&lt;/p&gt;\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: A class name cannot start with a number!</p>\r\n</blockquote>\r\n<h2>\r\n\tGrouping Selectors</h2>\r\n<p>\r\n\tIf you have elements with the same style definitions, like this:</p>\r\n<pre>\r\n<code>h1 {\r\n  text-align: center;\r\n  color: red;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: red;\r\n}\r\n\r\np {\r\n  text-align: center;\r\n  color: red;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIt will be better to group the selectors, to minimize the code.</p>\r\n<p>\r\n\tTo group selectors, separate each selector with a comma.</p>\r\n<p>\r\n\tIn the example below we have grouped the selectors from the code above:</p>\r\n<pre>\r\n<code>h1, h2, p {\r\n  text-align: center;\r\n  color: red;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Comments</h2>\r\n<p>\r\n\tComments are used to explain the code, and may help when you edit the source code at a later date.</p>\r\n<p>\r\n\tComments are ignored by browsers.</p>\r\n<p>\r\n\tA CSS comment starts with /* and ends with */. Comments can also span multiple lines:</p>\r\n<pre>\r\n<code>p {\r\n  color: red;\r\n  /* This is a single-line comment */\r\n  text-align: center;\r\n}\r\n\r\n/* This is\r\na multi-line\r\ncomment */\r\n</code></pre>"
          }
        },
        {
          "How to...": {
            "content": "<p>\r\n\tWhen a browser reads a style sheet, it will format the HTML document according to the information in the style sheet.</p>\r\n<h2>\r\n\tThree Ways to Insert CSS</h2>\r\n<p>\r\n\tThere are three ways of inserting a style sheet:</p>\r\n<ul>\r\n\t<li>\r\n\t\tExternal style sheet</li>\r\n\t<li>\r\n\t\tInternal style sheet</li>\r\n\t<li>\r\n\t\tInline style</li>\r\n</ul>\r\n<h2>\r\n\tExternal Style Sheet</h2>\r\n<p>\r\n\tWith an external style sheet, you can change the look of an entire website by changing just one file!</p>\r\n<p>\r\n\tEach page must include a reference to the external style sheet file inside the &lt;link&gt; element. The &lt;link&gt; element goes inside the &lt;head&gt; section:</p>\r\n<pre>\r\n<code>&lt;head&gt;\r\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;\r\n&lt;/head&gt;\r\n</code></pre>\r\n<p>\r\n\tAn external style sheet can be written in any text editor. The file should not contain any html tags. The style sheet file must be saved with a .css extension.</p>\r\n<p>\r\n\tHere is how the &quot;mystyle.css&quot; looks:</p>\r\n<pre>\r\n<code>body {\r\n  background-color: lightblue;\r\n}\r\n\r\nh1 {\r\n  color: navy;\r\n  margin-left: 20px;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Do not add a space between the property value and the unit (such as <code>margin-left: 20 px;</code>). The correct way is: <code>margin-left: 20px;</code></p>\r\n</blockquote>\r\n<h2>\r\n\tInternal Style Sheet</h2>\r\n<p>\r\n\tAn internal style sheet may be used if one single page has a unique style.</p>\r\n<p>\r\n\tInternal styles are defined within the &lt;style&gt; element, inside the &lt;head&gt; section of an HTML page:</p>\r\n<pre>\r\n<code>&lt;head&gt;\r\n&lt;style&gt;\r\nbody {\r\n  background-color: linen;\r\n}\r\n\r\nh1 {\r\n  color: maroon;\r\n  margin-left: 40px;\r\n} \r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n</code></pre>\r\n<h2>\r\n\tInline Styles</h2>\r\n<p>\r\n\tAn inline style may be used to apply a unique style for a single element.</p>\r\n<p>\r\n\tTo use inline styles, add the style attribute to the relevant element. The style attribute can contain any CSS property.</p>\r\n<p>\r\n\tThe example below shows how to change the color and the left margin of a &lt;h1&gt; element:</p>\r\n<pre>\r\n<code>&lt;h1 style=&quot;color:blue;margin-left:30px;&quot;&gt;This is a heading&lt;/h1&gt;\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: An inline style loses many of the advantages of a style sheet (by mixing content with presentation). Use this method sparingly.</p>\r\n</blockquote>\r\n<h2>\r\n\tMultiple Style Sheets</h2>\r\n<p>\r\n\tIf some properties have been defined for the same selector (element) in different style sheets, the value from the last read style sheet will be used.&nbsp;</p>\r\n<p>\r\n\tAssume that an external style sheet has the following style for the &lt;h1&gt; element:</p>\r\n<pre>\r\n<code>h1 {\r\n  color: navy;\r\n}\r\n</code></pre>\r\n<p>\r\n\tthen, assume that an internal style sheet also has the following style for the &lt;h1&gt; element:</p>\r\n<pre>\r\n<code>h1 {\r\n  color: orange;    \r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the internal style is defined after the link to the external style sheet, the &lt;h1&gt; elements will be &quot;orange&quot;:</p>\r\n<pre>\r\n<code>&lt;head&gt;\r\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;\r\n&lt;style&gt;\r\nh1 {\r\n  color: orange;\r\n}\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n</code></pre>\r\n<p>\r\n\tHowever, if the internal style is defined before the link to the external style sheet, the &lt;h1&gt; elements will be &quot;navy&quot;:</p>\r\n<pre>\r\n<code>&lt;head&gt;\r\n&lt;style&gt;\r\nh1 {\r\n  color: orange;\r\n}\r\n&lt;/style&gt;\r\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;\r\n&lt;/head&gt;\r\n</code></pre>\r\n<h2>\r\n\tCascading Order</h2>\r\n<p>\r\n\tWhat style will be used when there is more than one style specified for an HTML element?</p>\r\n<p>\r\n\tAll the styles in a page will &quot;cascade&quot; into a new &quot;virtual&quot; style sheet by the following rules, where number one has the highest priority:</p>\r\n<ol>\r\n\t<li>\r\n\t\tInline style (inside an HTML element)</li>\r\n\t<li>\r\n\t\tExternal and internal style sheets (in the head section)</li>\r\n\t<li>\r\n\t\tBrowser default</li>\r\n</ol>\r\n<p>\r\n\tSo, an inline style has the highest priority, and will override external and internal styles and browser defaults.</p>"
          }
        },
        {
          "Colors": {
            "content": "<p>\r\n\tColors are specified using predefined color names, or RGB, HEX, HSL, RGBA, HSLA values.</p>\r\n<h2>\r\n\tColor Names</h2>\r\n<p>\r\n\tIn HTML, a color can be specified by using a color name.</p>\r\n<p>\r\n\tHTML supports <a href=\"https://www.w3schools.com/colors/colors_names.asp\" target=\"_blank\">140 standard color names</a>.</p>\r\n<h2>\r\n\tBackground Color</h2>\r\n<p>\r\n\tYou can set the background color for HTML elements:</p>\r\n<pre>\r\n<code>&lt;h1 style=&quot;background-color:DodgerBlue;&quot;&gt;Hello World&lt;/h1&gt;\r\n&lt;p style=&quot;background-color:Tomato;&quot;&gt;Lorem ipsum...&lt;/p&gt;</code></pre>\r\n<h2>\r\n\tText Color</h2>\r\n<p>\r\n\tYou can set the color of text:</p>\r\n<pre>\r\n<code>&lt;h1 style=&quot;color:Tomato;&quot;&gt;Hello World&lt;/h1&gt;\r\n&lt;p style=&quot;color:DodgerBlue;&quot;&gt;Lorem ipsum...&lt;/p&gt;\r\n&lt;p style=&quot;color:MediumSeaGreen;&quot;&gt;Ut wisi enim...&lt;/p&gt;\r\n</code></pre>\r\n<h2>\r\n\tBorder Color</h2>\r\n<p>\r\n\tYou can set the color of borders:</p>\r\n<pre>\r\n<code>&lt;h1 style=&quot;border:2px solid Tomato;&quot;&gt;Hello World&lt;/h1&gt;\r\n&lt;h1 style=&quot;border:2px solid DodgerBlue;&quot;&gt;Hello World&lt;/h1&gt;\r\n&lt;h1 style=&quot;border:2px solid Violet;&quot;&gt;Hello World&lt;/h1&gt;\r\n</code></pre>\r\n<h2>\r\n\tColor Values</h2>\r\n<p>\r\n\tIn HTML, colors can also be specified using RGB values, HEX values, HSL values, RGBA values, and HSLA values:</p>\r\n<p>\r\n\tSame as color name &quot;Tomato&quot;:</p>\r\n<p>\r\n\t<code>rgb(255, 99, 71)<span _fck_bookmark=\"1\" style=\"display: none;\">&nbsp;</span></code></p>\r\n<p>\r\n\t<code>#ff6347<span _fck_bookmark=\"1\" style=\"display: none;\">&nbsp;</span></code></p>\r\n<p>\r\n\t<code>hsl(9, 100%, 64%)<span _fck_bookmark=\"1\" style=\"display: none;\">&nbsp;</span></code></p>\r\n<p>\r\n\tSame as color name &quot;Tomato&quot;, but 50% transparent:</p>\r\n<p>\r\n\t<code>rgba(255, 99, 71, 0.5)<span _fck_bookmark=\"1\" style=\"display: none;\">&nbsp;</span></code></p>\r\n<p>\r\n\t<code>hsla(9, 100%, 64%, 0.5)</code></p>\r\n<pre>\r\n<code>&lt;h1 style=&quot;background-color:rgb(255, 99, 71);&quot;&gt;...&lt;/h1&gt;\r\n&lt;h1 style=&quot;background-color:#ff6347;&quot;&gt;...&lt;/h1&gt;\r\n&lt;h1 style=&quot;background-color:hsl(9, 100%, 64%);&quot;&gt;...&lt;/h1&gt;\r\n\r\n&lt;h1 style=&quot;background-color:rgba(255, 99, 71, 0.5);&quot;&gt;...&lt;/h1&gt;\r\n&lt;h1 style=&quot;background-color:hsla(9, 100%, 64%, 0.5);&quot;&gt;...&lt;/h1&gt;\r\n</code></pre>\r\n<h2>\r\n\tRGB Value</h2>\r\n<p>\r\n\tIn HTML, a color can be specified as an RGB value, using this formula:</p>\r\n<p>\r\n\t<code>rgb(red, green, blue)</code></p>\r\n<p>\r\n\tEach parameter (red, green, and blue) defines the intensity of the color between 0 and 255.</p>\r\n<p>\r\n\tFor example, rgb(255, 0, 0) is displayed as red, because red is set to its highest value (255) and the others are set to 0.</p>\r\n<p>\r\n\tTo display the color black, all color parameters must be set to 0, like this: rgb(0, 0, 0).</p>\r\n<p>\r\n\tTo display the color white, all color parameters must be set to 255, like this: rgb(255, 255, 255).</p>\r\n<h2>\r\n\tHEX Value</h2>\r\n<p>\r\n\tIn HTML, a color can be specified using a hexadecimal value in the form:</p>\r\n<p>\r\n\t<code>#rrggbb</code></p>\r\n<p>\r\n\tWhere rr (red), gg (green) and bb (blue) are hexadecimal values between 00 and ff (same as decimal 0-255).</p>\r\n<p>\r\n\tFor example, #ff0000 is displayed as red, because red is set to its highest value (ff) and the others are set to the lowest value (00).</p>\r\n<h2>\r\n\tHSL Value</h2>\r\n<p>\r\n\tIn HTML, a color can be specified using hue, saturation, and lightness (HSL) in the form:</p>\r\n<p>\r\n\t<code>hsl(hue, saturation, lightness)</code></p>\r\n<p>\r\n\tHue is a degree on the color wheel from 0 to 360. 0 is red, 120 is green, and 240 is blue.</p>\r\n<p>\r\n\tSaturation is a percentage value, 0% means a shade of gray, and 100% is the full color.</p>\r\n<p>\r\n\tLightness is also a percentage, 0% is black, 50% is neither light or dark, 100% is white.</p>\r\n<h3>\r\n\tSaturation</h3>\r\n<p>\r\n\tSaturation can be described as the intensity of a color.</p>\r\n<p>\r\n\t100% is pure color, no shades of gray</p>\r\n<p>\r\n\t50% is 50% gray, but you can still see the color.</p>\r\n<p>\r\n\t0% is completely gray, you can no longer see the color.</p>\r\n<h3>\r\n\tLightness</h3>\r\n<p>\r\n\tThe lightness of a color can be described as how much light you want to give the color, where 0% means no light (black), 50% means 50% light (neither dark nor light) 100% means full lightness (white).</p>\r\n<p>\r\n\tShades of gray are often defined by setting the hue and saturation to 0, and adjust the lightness from 0% to 100% to get darker/lighter shades.</p>\r\n<h2>\r\n\tRGBA Value</h2>\r\n<p>\r\n\tRGBA color values are an extension of RGB color values with an alpha channel - which specifies the opacity for a color.</p>\r\n<p>\r\n\tAn RGBA color value is specified with:</p>\r\n<p>\r\n\t<code>rgba(red, green, blue, alpha)</code></p>\r\n<p>\r\n\tThe alpha parameter is a number between 0.0 (fully transparent) and 1.0 (not transparent at all).</p>\r\n<h2>\r\n\tHSLA Value</h2>\r\n<p>\r\n\tHSLA color values are an extension of HSL color values with an alpha channel - which specifies the opacity for a color.</p>\r\n<p>\r\n\tAn HSLA color value is specified with:</p>\r\n<p>\r\n\t<code>hsla(hue, saturation, lightness, alpha)</code></p>\r\n<p>\r\n\tThe alpha parameter is a number between 0.0 (fully transparent) and 1.0 (not transparent at all).</p>"
          }
        },
        {
          "Backgrounds": {
            "content": "<p>\r\n\tThe CSS background properties are used to define the background effects for elements.</p>\r\n<p>\r\n\tCSS background properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\tbackground-color</li>\r\n\t<li>\r\n\t\tbackground-image</li>\r\n\t<li>\r\n\t\tbackground-repeat</li>\r\n\t<li>\r\n\t\tbackground-attachment</li>\r\n\t<li>\r\n\t\tbackground-position</li>\r\n</ul>\r\n<h2>\r\n\tBackground Color</h2>\r\n<p>\r\n\tThe <code>background-color</code> property specifies the background color of an element.</p>\r\n<p>\r\n\tThe background color of a page is set like this:</p>\r\n<pre>\r\n<code>body {\r\n  background-color: lightblue;\r\n}\r\n</code></pre>\r\n<p>\r\n\tWith CSS, a color is most often specified by:</p>\r\n<ul>\r\n\t<li>\r\n\t\ta valid color name - like &quot;red&quot;</li>\r\n\t<li>\r\n\t\ta HEX value - like &quot;#ff0000&quot;</li>\r\n\t<li>\r\n\t\tan RGB value - like &quot;rgb(255,0,0)&quot;</li>\r\n</ul>\r\n<p>\r\n\tLook at <a href=\"/cssref/css_colors_legal.asp\" target=\"_blank\">CSS Color Values</a> for a complete list of possible color values.</p>\r\n<p>\r\n\tIn the example below, the &lt;h1&gt;, &lt;p&gt;, and &lt;div&gt; elements have different background colors:</p>\r\n<pre>\r\n<code>h1 {\r\n  background-color: green;\r\n}\r\n\r\ndiv {\r\n  background-color: lightblue;\r\n}\r\n\r\np {\r\n  background-color: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tBackground Image</h2>\r\n<p>\r\n\tThe <code>background-image</code> property specifies an image to use as the background of an element.</p>\r\n<p>\r\n\tBy default, the image is repeated so it covers the entire element.</p>\r\n<p>\r\n\tThe background image for a page can be set like this:</p>\r\n<pre>\r\n<code>body {\r\n  background-image: url(&quot;paper.gif&quot;);\r\n}\r\n</code></pre>\r\n<p>\r\n\tBelow is an example of a bad combination of text and background image. The text is hardly readable:</p>\r\n<pre>\r\n<code>body {\r\n  background-image: url(&quot;bgdesert.jpg&quot;);\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: When using a background image, use an image that does not disturb the text.</p>\r\n</blockquote>\r\n<h2>\r\n\tBackground Image - Repeat Horizontally or Vertically</h2>\r\n<p>\r\n\tBy default, the <code>background-image</code> property repeats an image both horizontally and vertically.</p>\r\n<p>\r\n\tSome images should be repeated only horizontally or vertically, or they will look strange, like this:</p>\r\n<pre>\r\n<code>body {\r\n  background-image: url(&quot;gradient_bg.png&quot;);\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the image above is repeated only horizontally (<code>background-repeat: repeat-x;</code>), the background will look better:</p>\r\n<pre>\r\n<code>body {\r\n  background-image: url(&quot;gradient_bg.png&quot;);\r\n  background-repeat: repeat-x;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: To repeat an image vertically, set <code>background-repeat: repeat-y;</code></p>\r\n</blockquote>\r\n<h2>\r\n\tBackground Image - Set position and no-repeat</h2>\r\n<p>\r\n\tShowing the background image only once is also specified by the <code>background-repeat</code> property:</p>\r\n<pre>\r\n<code>body {\r\n  background-image: url(&quot;img_tree.png&quot;);\r\n  background-repeat: no-repeat;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIn the example above, the background image is shown in the same place as the text. We want to change the position of the image, so that it does not disturb the text too much.</p>\r\n<p>\r\n\tThe position of the image is specified by the <code>background-position</code> property:</p>\r\n<pre>\r\n<code>body {\r\n  background-image: url(&quot;img_tree.png&quot;);\r\n  background-repeat: no-repeat;\r\n  background-position: right top;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tBackground Image - Fixed position</h2>\r\n<p>\r\n\tTo specify that the background image should be fixed (will not scroll with the rest of the page), use the <code>background-attachment</code> property:</p>\r\n<pre>\r\n<code>body {\r\n  background-image: url(&quot;img_tree.png&quot;);\r\n  background-repeat: no-repeat;\r\n  background-position: right top;\r\n  background-attachment: fixed;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tBackground - Shorthand property</h2>\r\n<p>\r\n\tTo shorten the code, it is also possible to specify all the background properties in one single property. This is called a shorthand property.</p>\r\n<p>\r\n\tThe shorthand property for background is <code>background</code>:</p>\r\n<pre>\r\n<code>body {\r\n  background: #ffffff url(&quot;img_tree.png&quot;) no-repeat right top;\r\n}\r\n</code></pre>\r\n<p>\r\n\tWhen using the shorthand property the order of the property values is:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>background-color</code></li>\r\n\t<li>\r\n\t\t<code>background-image</code></li>\r\n\t<li>\r\n\t\t<code>background-repeat</code></li>\r\n\t<li>\r\n\t\t<code>background-attachment</code></li>\r\n\t<li>\r\n\t\t<code>background-position</code></li>\r\n</ul>\r\n<p>\r\n\tIt does not matter if one of the property values is missing, as long as the other ones are in this order.</p>\r\n<h2>\r\n\tAll CSS Background Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/css3_pr_background.asp\" target=\"_blank\">background</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the background properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/pr_background-attachment.asp\" target=\"_blank\">background-attachment</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSets whether a background image is fixed or scrolls with the rest of the page</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/css3_pr_background-clip.asp\" target=\"_blank\">background-clip</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the painting area of the background</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/pr_background-color.asp\" target=\"_blank\">background-color</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the background color of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/pr_background-image.asp\" target=\"_blank\">background-image</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the background image for an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/css3_pr_background-origin.asp\" target=\"_blank\">background-origin</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies where the background image(s) is/are positioned</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/pr_background-position.asp\" target=\"_blank\">background-position</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the starting position of a background image</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/pr_background-repeat.asp\" target=\"_blank\">background-repeat</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSets how a background image will be repeated</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<a href=\"/cssref/css3_pr_background-size.asp\" target=\"_blank\">background-size</a></td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the size of the background image(s)</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Borders": {
            "content": "<h2>\r\n\tCSS Border Properties</h2>\r\n<p>\r\n\tThe CSS <code>border</code> properties allow you to specify the style, width, and color of an element&#39;s border.</p>\r\n<h2>\r\n\tBorder Style</h2>\r\n<p>\r\n\tThe <code>border-style</code> property specifies what kind of border to display.</p>\r\n<p>\r\n\tThe following values are allowed:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>dotted</code> - Defines a dotted border</li>\r\n\t<li>\r\n\t\t<code>dashed</code> - Defines a dashed border</li>\r\n\t<li>\r\n\t\t<code>solid</code> - Defines a solid border</li>\r\n\t<li>\r\n\t\t<code>double</code> - Defines a double border</li>\r\n\t<li>\r\n\t\t<code>groove</code> - Defines a 3D grooved border. The effect depends on the border-color value</li>\r\n\t<li>\r\n\t\t<code>ridge</code> - Defines a 3D ridged border. The effect depends on the border-color value</li>\r\n\t<li>\r\n\t\t<code>inset</code> - Defines a 3D inset border. The effect depends on the border-color value</li>\r\n\t<li>\r\n\t\t<code>outset</code> - Defines a 3D outset border. The effect depends on the border-color value</li>\r\n\t<li>\r\n\t\t<code>none</code> - Defines no border</li>\r\n\t<li>\r\n\t\t<code>hidden</code> - Defines a hidden border</li>\r\n</ul>\r\n<p>\r\n\tThe <code>border-style</code> property can have from one to four values (for the top border, right border, bottom border, and the left border).</p>\r\n<pre>\r\n<code>p.dotted {border-style: dotted;}\r\np.dashed {border-style: dashed;}\r\np.solid {border-style: solid;}\r\np.double {border-style: double;}\r\np.groove {border-style: groove;}\r\np.ridge {border-style: ridge;}\r\np.inset {border-style: inset;}\r\np.outset {border-style: outset;}\r\np.none {border-style: none;}\r\np.hidden {border-style: hidden;}\r\np.mix {border-style: dotted dashed solid double;}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: None of the OTHER CSS border properties described below will have ANY effect unless the <code>border-style</code> property is set!</p>\r\n</blockquote>\r\n<h2>\r\n\tBorder Width</h2>\r\n<p>\r\n\tThe <code>border-width</code> property specifies the width of the four borders.</p>\r\n<p>\r\n\tThe width can be set as a specific size (in px, pt, cm, em, etc) or by using one of the three pre-defined values: thin, medium, or thick.</p>\r\n<p>\r\n\tThe <code>border-width</code> property can have from one to four values (for the top border, right border, bottom border, and the left border).</p>\r\n<pre>\r\n<code>p.one {\r\n  border-style: solid;\r\n  border-width: 5px;\r\n}\r\n\r\np.two {\r\n  border-style: solid;\r\n  border-width: medium;\r\n}\r\n\r\np.three {\r\n  border-style: solid;\r\n  border-width: 2px 10px 4px 20px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tBorder Color</h2>\r\n<p>\r\n\tThe <code>border-color</code> property is used to set the color of the four borders.</p>\r\n<p>\r\n\tThe color can be set by:</p>\r\n<ul>\r\n\t<li>\r\n\t\tname - specify a color name, like &quot;red&quot;</li>\r\n\t<li>\r\n\t\tHex - specify a hex value, like &quot;#ff0000&quot;</li>\r\n\t<li>\r\n\t\tRGB - specify a RGB value, like &quot;rgb(255,0,0)&quot;</li>\r\n\t<li>\r\n\t\ttransparent</li>\r\n</ul>\r\n<p>\r\n\tThe <code>border-color</code> property can have from one to four values (for the top border, right border, bottom border, and the left border).&nbsp;</p>\r\n<p>\r\n\tIf <code>border-color</code> is not set, it inherits the color of the element.</p>\r\n<pre>\r\n<code>p.one {\r\n  border-style: solid;\r\n  border-color: red;\r\n}\r\n\r\np.two {\r\n  border-style: solid;\r\n  border-color: green;\r\n}\r\n\r\np.three {\r\n  border-style: solid;\r\n  border-color: red green blue yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tBorder - Individual Sides</h2>\r\n<p>\r\n\tFrom the examples above you have seen that it is possible to specify a different border for each side.</p>\r\n<p>\r\n\tIn CSS, there are also properties for specifying each of the borders (top, right, bottom, and left):</p>\r\n<pre>\r\n<code>p {\r\n  border-top-style: dotted;\r\n  border-right-style: solid;\r\n  border-bottom-style: dotted;\r\n  border-left-style: solid;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe example above gives the same result as this:</p>\r\n<pre>\r\n<code>p {\r\n  border-style: dotted solid;\r\n}\r\n</code></pre>\r\n<p>\r\n\tSo, here is how it works:</p>\r\n<p>\r\n\tIf the <code>border-style</code> property has four values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tborder-style: dotted solid double dashed;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop border is dotted</li>\r\n\t\t\t<li>\r\n\t\t\t\tright border is solid</li>\r\n\t\t\t<li>\r\n\t\t\t\tbottom border is double</li>\r\n\t\t\t<li>\r\n\t\t\t\tleft border is dashed</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<p>\r\n\tIf the <code>border-style</code> property has three values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tborder-style: dotted solid double;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop border is dotted</li>\r\n\t\t\t<li>\r\n\t\t\t\tright and left borders are solid</li>\r\n\t\t\t<li>\r\n\t\t\t\tbottom border is double</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<p>\r\n\tIf the <code>border-style</code> property has two values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tborder-style: dotted solid;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop and bottom borders are dotted</li>\r\n\t\t\t<li>\r\n\t\t\t\tright and left borders are solid</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<p>\r\n\tIf the <code>border-style</code> property has one value:</p>\r\n<ul>\r\n\t<li>\r\n\t\tborder-style: dotted;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\tall four borders are dotted</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<p>\r\n\tThe <code>border-style</code> property is used in the example above. However, it also works with <code>border-width</code> and <code>border-color</code>.</p>\r\n<h2>\r\n\tBorder - Shorthand Property</h2>\r\n<p>\r\n\tAs you can see from the examples above, there are many properties to consider when dealing with borders.</p>\r\n<p>\r\n\tTo shorten the code, it is also possible to specify all the individual border properties in one property.</p>\r\n<p>\r\n\tThe <code>border</code> property is a shorthand property for the following individual border properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>border-width</code></li>\r\n\t<li>\r\n\t\t<code>border-style</code> (required)</li>\r\n\t<li>\r\n\t\t<code>border-color</code></li>\r\n</ul>\r\n<pre>\r\n<code>p {\r\n  border: 5px solid red;\r\n}\r\n</code></pre>\r\n<p>\r\n\tYou can also specify all the individual border properties for just one side:</p>\r\n<h3>\r\n\tLeft Border</h3>\r\n<pre>\r\n<code>p {\r\n  border-left: 6px solid red;\r\n  background-color: lightgrey;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tBottom Border</h3>\r\n<pre>\r\n<code>p {\r\n  border-bottom: 6px solid red;\r\n  background-color: lightgrey;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tRounded Borders</h2>\r\n<p>\r\n\tThe <code>border-radius</code> property is used to add rounded borders to an element.</p>\r\n<pre>\r\n<code>p {\r\n  border: 2px solid red;\r\n  border-radius: 5px;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The border-radius property is not supported in IE8 and earlier versions.</p>\r\n</blockquote>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_border-top\" target=\"_blank\">All the top border properties in one declaration</a><br />\r\n\tThis example demonstrates a shorthand property for setting all of the properties for the top border in one declaration.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_border-bottom-style\" target=\"_blank\">Set the style of the bottom border</a><br />\r\n\tThis example demonstrates how to set the style of the bottom border.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_border-left-width\" target=\"_blank\">Set the width of the left border</a><br />\r\n\tThis example demonstrates how to set the width of the left border.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_border-color\" target=\"_blank\">Set the color of the four borders</a><br />\r\n\tThis example demonstrates how to set the color of the four borders. It can have from one to four colors.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_border-right-color\" target=\"_blank\">Set the color of the right border</a><br />\r\n\tThis example demonstrates how to set the color of the right border.</p>\r\n<h2>\r\n\tAll CSS Border Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the border properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-bottom</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the bottom border properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-bottom-color</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the color of the bottom border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-bottom-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the style of the bottom border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-bottom-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the width of the bottom border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-color</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the color of the four borders</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-left</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the left border properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-left-color</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the color of the left border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-left-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the style of the left border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-left-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the width of the left border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-radius</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the four border-*-radius properties for rounded corners</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-right</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the right border properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-right-color</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the color of the right border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-right-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the style of the right border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-right-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the width of the right border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the style of the four borders</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-top</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the top border properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-top-color</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the color of the top border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-top-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the style of the top border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-top-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the width of the top border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the width of the four borders</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Margins": {
            "content": "<h2>\r\n\tCSS Margins</h2>\r\n<p>\r\n\tThe CSS <code>margin</code> properties are used to create space around elements, outside of any defined borders.</p>\r\n<p>\r\n\tWith CSS, you have full control over the margins. There are properties for setting the margin for each side of an element (top, right, bottom, and left).</p>\r\n<h2>\r\n\tMargin - Individual Sides</h2>\r\n<p>\r\n\tCSS has properties for specifying the margin for each side of an element:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>margin-top</code></li>\r\n\t<li>\r\n\t\t<code>margin-right</code></li>\r\n\t<li>\r\n\t\t<code>margin-bottom</code></li>\r\n\t<li>\r\n\t\t<code>margin-left</code></li>\r\n</ul>\r\n<p>\r\n\tAll the margin properties can have the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tauto - the browser calculates the margin</li>\r\n\t<li>\r\n\t\tlength - specifies a margin in px, pt, cm, etc.</li>\r\n\t<li>\r\n\t\t% - specifies a margin in % of the width of the containing element</li>\r\n\t<li>\r\n\t\tinherit - specifies that the margin should be inherited from the parent element</li>\r\n</ul>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Negative values are allowed.</p>\r\n</blockquote>\r\n<p>\r\n\tThe following example sets different margins for all four sides of a &lt;p&gt; element:</p>\r\n<pre>\r\n<code>p {\r\n  margin-top: 100px;\r\n  margin-bottom: 100px;\r\n  margin-right: 150px;\r\n  margin-left: 80px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMargin - Shorthand Property</h2>\r\n<p>\r\n\tTo shorten the code, it is possible to specify all the margin properties in one property.</p>\r\n<p>\r\n\tThe <code>margin</code> property is a shorthand property for the following individual margin properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>margin-top</code></li>\r\n\t<li>\r\n\t\t<code>margin-right</code></li>\r\n\t<li>\r\n\t\t<code>margin-bottom</code></li>\r\n\t<li>\r\n\t\t<code>margin-left</code></li>\r\n</ul>\r\n<p>\r\n\tSo, here is how it works:</p>\r\n<p>\r\n\tIf the <code>margin</code> property has four values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tmargin: 25px 50px 75px 100px;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop margin is 25px</li>\r\n\t\t\t<li>\r\n\t\t\t\tright margin is 50px</li>\r\n\t\t\t<li>\r\n\t\t\t\tbottom margin is 75px</li>\r\n\t\t\t<li>\r\n\t\t\t\tleft margin is 100px</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<pre>\r\n<code>p {\r\n  margin: 25px 50px 75px 100px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the <code>margin</code> property has three values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tmargin: 25px 50px 75px;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop margin is 25px</li>\r\n\t\t\t<li>\r\n\t\t\t\tright and left margins are 50px</li>\r\n\t\t\t<li>\r\n\t\t\t\tbottom margin is 75px</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<pre>\r\n<code>p {\r\n  margin: 25px 50px 75px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the <code>margin</code> property has two values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tmargin: 25px 50px;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop and bottom margins are 25px</li>\r\n\t\t\t<li>\r\n\t\t\t\tright and left margins are 50px</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<pre>\r\n<code>p {\r\n  margin: 25px 50px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the <code>margin</code> property has one value:</p>\r\n<ul>\r\n\t<li>\r\n\t\tmargin: 25px;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\tall four margins are 25px</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<pre>\r\n<code>p {\r\n  margin: 25px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe auto Value</h2>\r\n<p>\r\n\tYou can set the margin property to <code>auto</code> to horizontally center the element within its container.</p>\r\n<p>\r\n\tThe element will then take up the specified width, and the remaining space will be split equally between the left and right margins:</p>\r\n<pre>\r\n<code>div {\r\n  width: 300px;\r\n  margin: auto;\r\n  border: 1px solid red;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe inherit Value</h2>\r\n<p>\r\n\tThis example lets the left margin of the &lt;p class=&quot;ex1&quot;&gt; element be inherited from the parent element (&lt;div&gt;):</p>\r\n<pre>\r\n<code>div {\r\n  border: 1px solid red;\r\n  margin-left: 100px;\r\n}\r\n\r\np.ex1 {\r\n  margin-left: inherit;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMargin Collapse</h2>\r\n<p>\r\n\tTop and bottom margins of elements are sometimes collapsed into a single margin that is equal to the largest of the two margins.</p>\r\n<p>\r\n\tThis does not happen on left and right margins! Only top and bottom margins!</p>\r\n<p>\r\n\tLook at the following example:</p>\r\n<pre>\r\n<code>h1 {\r\n  margin: 0 0 50px 0;\r\n}\r\n\r\nh2 {\r\n  margin: 20px 0 0 0;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIn the example above, the &lt;h1&gt; element has a bottom margin of 50px and the &lt;h2&gt; element has a top margin set to 20px.</p>\r\n<p>\r\n\tCommon sense would seem to suggest that the vertical margin between the &lt;h1&gt; and the &lt;h2&gt; would be a total of 70px (50px + 20px). But due to margin collapse, the actual margin ends up being 50px.</p>\r\n<h2>\r\n\tAll CSS Margin Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmargin</td>\r\n\t\t\t<td>\r\n\t\t\t\tA shorthand property for setting the margin properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmargin-bottom</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the bottom margin of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmargin-left</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the left margin of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmargin-right</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the right margin of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmargin-top</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the top margin of an element</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Padding": {
            "content": "<h2>\r\n\tCSS Padding</h2>\r\n<p>\r\n\tThe CSS <code>padding</code> properties are used to generate space around an element&#39;s content, inside of any defined borders.</p>\r\n<p>\r\n\tWith CSS, you have full control over the padding. There are properties for setting the padding for each side of an element (top, right, bottom, and left).</p>\r\n<h2>\r\n\tPadding - Individual Sides</h2>\r\n<p>\r\n\tCSS has properties for specifying the padding for each side of an element:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>padding-top</code></li>\r\n\t<li>\r\n\t\t<code>padding-right</code></li>\r\n\t<li>\r\n\t\t<code>padding-bottom</code></li>\r\n\t<li>\r\n\t\t<code>padding-left</code></li>\r\n</ul>\r\n<p>\r\n\tAll the padding properties can have the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tlength - specifies a padding in px, pt, cm, etc.</li>\r\n\t<li>\r\n\t\t% - specifies a padding in % of the width of the containing element</li>\r\n\t<li>\r\n\t\tinherit - specifies that the padding should be inherited from the parent element</li>\r\n</ul>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Negative values are not allowed.</p>\r\n</blockquote>\r\n<p>\r\n\tThe following example sets different padding for all four sides of a &lt;div&gt; element:&nbsp;</p>\r\n<pre>\r\n<code>div {\r\n  padding-top: 50px;\r\n  padding-right: 30px;\r\n  padding-bottom: 50px;\r\n  padding-left: 80px;\r\n}</code></pre>\r\n<h2>\r\n\tPadding - Shorthand Property</h2>\r\n<p>\r\n\tTo shorten the code, it is possible to specify all the padding properties in one property.</p>\r\n<p>\r\n\tThe <code>padding</code> property is a shorthand property for the following individual padding properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>padding-top</code></li>\r\n\t<li>\r\n\t\t<code>padding-right</code></li>\r\n\t<li>\r\n\t\t<code>padding-bottom</code></li>\r\n\t<li>\r\n\t\t<code>padding-left</code></li>\r\n</ul>\r\n<p>\r\n\tSo, here is how it works:</p>\r\n<p>\r\n\tIf the <code>padding</code> property has four values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tpadding: 25px 50px 75px 100px;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop padding is 25px</li>\r\n\t\t\t<li>\r\n\t\t\t\tright padding is 50px</li>\r\n\t\t\t<li>\r\n\t\t\t\tbottom padding is 75px</li>\r\n\t\t\t<li>\r\n\t\t\t\tleft padding is 100px</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<pre>\r\n<code>div {\r\n  padding: 25px 50px 75px 100px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the <code>padding</code> property has three values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tpadding: 25px 50px 75px;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop padding is 25px</li>\r\n\t\t\t<li>\r\n\t\t\t\tright and left paddings are 50px</li>\r\n\t\t\t<li>\r\n\t\t\t\tbottom padding is 75px</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<pre>\r\n<code>div {\r\n  padding: 25px 50px 75px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the <code>padding</code> property has two values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tpadding: 25px 50px;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\ttop and bottom paddings are 25px</li>\r\n\t\t\t<li>\r\n\t\t\t\tright and left paddings are 50px</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<pre>\r\n<code>div {\r\n  padding: 25px 50px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the <code>padding</code> property has one value:</p>\r\n<ul>\r\n\t<li>\r\n\t\tpadding: 25px;\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\tall four paddings are 25px</li>\r\n\t\t</ul>\r\n\t</li>\r\n</ul>\r\n<pre>\r\n<code>div {\r\n  padding: 25px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tPadding and Element Width</h2>\r\n<p>\r\n\tThe CSS <code>width</code> property specifies the width of the element&#39;s content area. The content area is the portion inside the padding, border, and margin of an element (<a href=\"css_boxmodel.asp\" target=\"_blank\">the box model</a>).</p>\r\n<p>\r\n\tSo, if an element has a specified width, the padding added to that element will be added to the total width of the element. This is often an undesirable result.</p>\r\n<p>\r\n\tIn the following example, the &lt;div&gt; element is given a width of 300px. However, the actual rendered width of the &lt;div&gt; element will be 350px (300px + 25px of left padding + 25px of right padding):</p>\r\n<pre>\r\n<code>div {\r\n  width: 300px;\r\n  padding: 25px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tTo keep the width at 300px, no matter the amount of padding, you can use the <code> box-sizing</code> property. This causes the element to maintain its width; if you increase the padding, the available content space will decrease. Here is an example:</p>\r\n<pre>\r\n<code>div {\r\n  width: 300px;\r\n  padding: 25px;\r\n  box-sizing: border-box;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_padding-left\" target=\"_blank\">Set the left padding</a><br />\r\n\tThis example demonstrates how to set the left padding of a &lt;p&gt; element.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_padding-right\" target=\"_blank\">Set the right padding</a><br />\r\n\tThis example demonstrates how to set the right padding of a &lt;p&gt; element.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_padding-top\" target=\"_blank\">Set the top padding</a><br />\r\n\tThis example demonstrates how to set the top padding of a &lt;p&gt; element.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_padding-bottom\" target=\"_blank\">Set the bottom padding</a><br />\r\n\tThis example demonstrates how to set the bottom padding of a &lt;p&gt; element.</p>\r\n<h2>\r\n\tAll CSS Padding Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tpadding</td>\r\n\t\t\t<td>\r\n\t\t\t\tA shorthand property for setting all the padding properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tpadding-bottom</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the bottom padding of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tpadding-left</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the left padding of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tpadding-right</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the right padding of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tpadding-top</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the top padding of an element</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Height and Width": {
            "content": "<h2>\r\n\tSetting height and width</h2>\r\n<p>\r\n\tThe <code>height</code> and <code>width</code> properties are used to set the height and width of an element.</p>\r\n<p>\r\n\tThe <code>height</code> and <code>width</code> can be set to auto (this is default. Means that the browser calculates the height and width), or be specified in length values, like px, cm, etc., or in percent (%) of the containing block.</p>\r\n<pre>\r\n<code>div {\r\n  height: 200px;\r\n  width: 50%;\r\n  background-color: powderblue;\r\n}</code></pre>\r\n<pre>\r\n<code>div {\r\n  height: 100px;\r\n  width: 500px;\r\n  background-color: powderblue;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The <code>height</code> and <code>width</code> properties do not include padding, borders, or margins; they set the height/width of the area inside the padding, border, and margin of the element!</p>\r\n</blockquote>\r\n<h2>\r\n\tSetting max-width</h2>\r\n<p>\r\n\tThe <code>max-width</code> property is used to set the maximum width of an element.</p>\r\n<p>\r\n\tThe <code>max-width</code> can be specified in length values, like px, cm, etc., or in percent (%) of the containing block, or set to none (this is default. Means that there is no maximum width).</p>\r\n<p>\r\n\tThe problem with the <code>&lt;div&gt;</code> above occurs when the browser window is smaller than the width of the element (500px). The browser then adds a horizontal scrollbar to the page.</p>\r\n<p>\r\n\tUsing <code>max-width</code> instead, in this situation, will improve the browser&#39;s handling of small windows.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Drag the browser window to smaller than 500px wide, to see the difference between the two divs!</p>\r\n</blockquote>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The value of the <code>max-width</code> property overrides <code>width</code>.</p>\r\n</blockquote>\r\n<p>\r\n\tThe following example shows a <code>&lt;div&gt;</code> element with a height of 100 pixels and a max-width of 500 pixels:</p>\r\n<pre>\r\n<code>div {\r\n  max-width: 500px;\r\n  height: 100px;\r\n  background-color: powderblue;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTry it Yourself - Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_dim_height\" target=\"_blank\">Set the height and width of elements</a><br />\r\n\tThis example demonstrates how to set the height and width of different elements.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_dim_height_percent\" target=\"_blank\">Set the height and width of an image using percent</a><br />\r\n\tThis example demonstrates how to set the height and width of an image using a percent value.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_dim_max-width\" target=\"_blank\">Set min-width and max-width of an element</a><br />\r\n\tThis example demonstrates how to set a minimum width and a maximum width of an element using a pixel value.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_dim_max-height\" target=\"_blank\">Set min-height and max-height of an element</a><br />\r\n\tThis example demonstrates how to set a minimum height and a maximum height of an element using a pixel value.</p>\r\n<h2>\r\n\tAll CSS Dimension Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\theight</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the height of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmax-height</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the maximum height of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmax-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the maximum width of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmin-height</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the minimum height of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmin-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the minimum width of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\twidth</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the width of an element</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Box Model": {
            "content": "<h2>\r\n\tThe CSS Box Model</h2>\r\n<p>\r\n\tAll HTML elements can be considered as boxes. In CSS, the term &quot;box model&quot; is used when talking about design and layout.</p>\r\n<p>\r\n\tThe CSS box model is essentially a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content.&nbsp;</p>\r\n<p>\r\n\tExplanation of the different parts:</p>\r\n<ul>\r\n\t<li>\r\n\t\tContent - The content of the box, where text and images appear</li>\r\n\t<li>\r\n\t\tPadding - Clears an area around the content. The padding is transparent</li>\r\n\t<li>\r\n\t\tBorder - A border that goes around the padding and content</li>\r\n\t<li>\r\n\t\tMargin - Clears an area outside the border. The margin is transparent</li>\r\n</ul>\r\n<p>\r\n\tThe box model allows us to add a border around elements, and to define space between elements.&nbsp;</p>\r\n<pre>\r\n<code>div {\r\n  width: 300px;\r\n  border: 15px solid green;\r\n  padding: 50px;\r\n  margin: 20px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tWidth and Height of an Element</h2>\r\n<p>\r\n\tIn order to set the width and height of an element correctly in all browsers, you need to know how the box model works.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tImportant: When you set the width and height properties of an element with CSS, you just set the width and height of the content area. To calculate the full size of an element, you must also add padding, borders and margins.</p>\r\n</blockquote>\r\n<p>\r\n\tAssume we want to style a &lt;div&gt; element to have a total width of 350px:</p>\r\n<pre>\r\n<code>div {\r\n  width: 320px;\r\n  padding: 10px;\r\n  border: 5px solid gray;\r\n  margin: 0; \r\n}\r\n</code></pre>\r\n<p>\r\n\tHere is the calculation:</p>\r\n<pre>\r\n<code>320px (width)\r\n+ 20px (left + right padding)\r\n+ 10px (left + right border)\r\n+ 0px (left + right margin)\r\n= 350px\r\n</code></pre>\r\n<p>\r\n\tThe total width of an element should be calculated like this:</p>\r\n<p>\r\n\tTotal element width = width + left padding + right padding + left border + right border + left margin + right margin</p>\r\n<p>\r\n\tThe total height of an element should be calculated like this:</p>\r\n<p>\r\n\tTotal element height = height + top padding + bottom padding + top border + bottom border + top margin + bottom margin</p>"
          }
        },
        {
          "Outline": {
            "content": "<h2>\r\n\tCSS Outline</h2>\r\n<p>\r\n\tAn outline is a line that is drawn around elements, OUTSIDE the borders, to make the element &quot;stand out&quot;.</p>\r\n<p>\r\n\tCSS has the following outline properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>outline-style</code></li>\r\n\t<li>\r\n\t\t<code>outline-color</code></li>\r\n\t<li>\r\n\t\t<code>outline-width</code></li>\r\n\t<li>\r\n\t\t<code>outline-offset</code></li>\r\n\t<li>\r\n\t\t<code>outline</code></li>\r\n</ul>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Outline differs from borders! Unlike border, the outline is drawn outside the element&#39;s border, and may overlap other content. Also, the outline is NOT a part of the element&#39;s dimensions; the element&#39;s total width and height is not affected by the width of the outline.</p>\r\n</blockquote>\r\n<h2>\r\n\tOutline Style</h2>\r\n<p>\r\n\tThe <code>outline-style</code> property specifies the style of the outline, and can have one of the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>dotted</code> - Defines a dotted outline</li>\r\n\t<li>\r\n\t\t<code>dashed</code> - Defines a dashed outline</li>\r\n\t<li>\r\n\t\t<code>solid</code> - Defines a solid outline</li>\r\n\t<li>\r\n\t\t<code>double</code> - Defines a double outline</li>\r\n\t<li>\r\n\t\t<code>groove</code> - Defines a 3D grooved outline</li>\r\n\t<li>\r\n\t\t<code>ridge</code> - Defines a 3D ridged outline</li>\r\n\t<li>\r\n\t\t<code>inset</code> - Defines a 3D inset outline</li>\r\n\t<li>\r\n\t\t<code>outset</code> - Defines a 3D outset outline</li>\r\n\t<li>\r\n\t\t<code>none</code> - Defines no outline</li>\r\n\t<li>\r\n\t\t<code>hidden</code> - Defines a hidden outline</li>\r\n</ul>\r\n<pre>\r\n<code>p.dotted {outline-style: dotted;}\r\np.dashed {outline-style: dashed;}\r\np.solid {outline-style: solid;}\r\np.double {outline-style: double;}\r\np.groove {outline-style: groove;}\r\np.ridge {outline-style: ridge;}\r\np.inset {outline-style: inset;}\r\np.outset {outline-style: outset;}</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: None of the other outline properties will have any effect, unless the <code>outline-style</code> property is set!</p>\r\n</blockquote>\r\n<h2>\r\n\tOutline Color</h2>\r\n<p>\r\n\tThe <code>outline-color</code> property is used to set the color of the outline.</p>\r\n<p>\r\n\tThe color can be set by:</p>\r\n<ul>\r\n\t<li>\r\n\t\tname - specify a color name, like &quot;red&quot;</li>\r\n\t<li>\r\n\t\tRGB - specify a RGB value, like &quot;rgb(255,0,0)&quot;</li>\r\n\t<li>\r\n\t\tHex - specify a hex value, like &quot;#ff0000&quot;</li>\r\n\t<li>\r\n\t\tinvert - performs a color inversion (which ensures that the outline is visible, regardless of color background)</li>\r\n</ul>\r\n<p>\r\n\tThe following example shows some different outlines with different colors. Also notice that these elements also have a thin black border inside the outline:</p>\r\n<pre>\r\n<code>p.ex1 {\r\n  border: 1px solid black;\r\n  outline-style: solid;\r\n  outline-color: red;\r\n}\r\n\r\np.ex2 {\r\n  border: 1px solid black;\r\n  outline-style: double;\r\n  outline-color: green;\r\n}\r\n\r\np.ex3 {\r\n  border: 1px solid black;\r\n  outline-style: outset;\r\n  outline-color: yellow;\r\n}</code></pre>\r\n<p>\r\n\tThe following example uses <code>outline-color: invert</code>, which performs a color inversion. This ensures that the outline is visible, regardless of color background:</p>\r\n<pre>\r\n<code>p.ex1 {\r\n  border: 1px solid yellow;\r\n  outline-style: solid;\r\n  outline-color: invert;\r\n}</code></pre>\r\n<h2>\r\n\tOutline Width</h2>\r\n<p>\r\n\tThe <code>outline-width</code> property specifies the width of the outline, and can have one of the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tthin (typically 1px)</li>\r\n\t<li>\r\n\t\tmedium (typically 3px)</li>\r\n\t<li>\r\n\t\tthick (typically 5px)</li>\r\n\t<li>\r\n\t\tA specific size (in px, pt, cm, em, etc)</li>\r\n</ul>\r\n<p>\r\n\tThe following example shows some outlines with different widths:</p>\r\n<pre>\r\n<code>p.ex1 {\r\n  border: 1px solid black;\r\n  outline-style: solid;\r\n  outline-color: red;\r\n  outline-width: thin;\r\n}\r\n\r\np.ex2 {\r\n  border: 1px solid black;\r\n  outline-style: solid;\r\n  outline-color: red;\r\n  outline-width: medium;\r\n}\r\n\r\np.ex3 {\r\n  border: 1px solid black;\r\n  outline-style: solid;\r\n  outline-color: red;\r\n  outline-width: thick;\r\n}\r\n\r\np.ex4 {\r\n  border: 1px solid black;\r\n  outline-style: solid;\r\n  outline-color: red;\r\n  outline-width: 4px;\r\n}</code></pre>\r\n<h2>\r\n\tOutline - Shorthand property</h2>\r\n<p>\r\n\tThe <code>outline</code> property is a shorthand property for setting the following individual outline properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>outline-width</code></li>\r\n\t<li>\r\n\t\t<code>outline-style</code> (required)</li>\r\n\t<li>\r\n\t\t<code>outline-color</code></li>\r\n</ul>\r\n<p>\r\n\tThe <code>outline</code> property is specified as one, two, or three values from the list above. The order of the values does not matter.</p>\r\n<p>\r\n\tThe following example shows some outlines specified with the shorthand <code>outline</code> property:</p>\r\n<pre>\r\n<code>p.ex1 {outline: dashed;}\r\np.ex2 {outline: dotted red;}\r\np.ex3 {outline: 5px solid yellow;}\r\np.ex4 {outline: thick ridge pink;}</code></pre>\r\n<h2>\r\n\tOutline Offset</h2>\r\n<p>\r\n\tThe <code>outline-offset</code> property adds space between an outline and the edge/border of an element. The space between an element and its outline is transparent.</p>\r\n<p>\r\n\tThe following example specifies an outline 15px outside the border edge:</p>\r\n<pre>\r\n<code>p {\r\n  margin: 30px;\r\n  border: 1px solid black;\r\n  outline: 1px solid red;\r\n  outline-offset: 15px;\r\n}</code></pre>\r\n<p>\r\n\tThe following example shows that the space between an element and its outline is transparent:</p>\r\n<pre>\r\n<code>p {\r\n  margin: 30px;\r\n  background: yellow;\r\n  border: 1px solid black;\r\n  outline: 1px solid red;\r\n  outline-offset: 15px;\r\n}</code></pre>\r\n<h2>\r\n\tAll CSS Outline Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toutline</td>\r\n\t\t\t<td>\r\n\t\t\t\tA shorthand property for setting outline-width, outline-style, and outline-color in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toutline-color</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the color of an outline</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toutline-offset</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the space between an outline and the edge or border of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toutline-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the style of an outline</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toutline-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the width of an outline</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Text": {
            "content": "<h2>\r\n\tText Color</h2>\r\n<p>\r\n\tThe <code>color</code> property is used to set the color of the text. The color is specified by:</p>\r\n<ul>\r\n\t<li>\r\n\t\ta color name - like &quot;red&quot;</li>\r\n\t<li>\r\n\t\ta HEX value - like &quot;#ff0000&quot;</li>\r\n\t<li>\r\n\t\tan RGB value - like &quot;rgb(255,0,0)&quot;</li>\r\n</ul>\r\n<p>\r\n\tLook at <a href=\"/cssref/css_colors_legal.asp\" target=\"_blank\">CSS Color Values</a> for a complete list of possible color values.</p>\r\n<p>\r\n\tThe default text color for a page is defined in the body selector.</p>\r\n<pre>\r\n<code>body {\r\n  color: blue;\r\n}\r\n\r\nh1 {\r\n  color: green;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: For W3C compliant CSS: If you define the <code>color</code> property, you must also define the <code>background-color</code>.</p>\r\n</blockquote>\r\n<h2>\r\n\tText Alignment</h2>\r\n<p>\r\n\tThe <code>text-align</code> property is used to set the horizontal alignment of a text.</p>\r\n<p>\r\n\tA text can be left or right aligned, centered, or justified.</p>\r\n<p>\r\n\tThe following example shows center aligned, and left and right aligned text (left alignment is default if text direction is left-to-right, and right alignment is default if text direction is right-to-left):</p>\r\n<pre>\r\n<code>h1 {\r\n  text-align: center;\r\n}\r\n\r\nh2 {\r\n  text-align: left;\r\n}\r\n\r\nh3 {\r\n  text-align: right;\r\n}\r\n</code></pre>\r\n<p>\r\n\tWhen the <code>text-align</code> property is set to &quot;justify&quot;, each line is stretched so that every line has equal width, and the left and right margins are straight (like in magazines and newspapers):</p>\r\n<pre>\r\n<code>div {\r\n  text-align: justify;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tText Decoration</h2>\r\n<p>\r\n\tThe <code>text-decoration</code> property is used to set or remove decorations from text.</p>\r\n<p>\r\n\tThe value <code>text-decoration: none;</code> is often used to remove underlines from links:</p>\r\n<pre>\r\n<code>a {\r\n  text-decoration: none;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe other <code>text-decoration</code> values are used to decorate text:</p>\r\n<pre>\r\n<code>h1 {\r\n  text-decoration: overline;\r\n}\r\n\r\nh2 {\r\n  text-decoration: line-through;\r\n}\r\n\r\nh3 {\r\n  text-decoration: underline;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: It is not recommended to underline text that is not a link, as this often confuses the reader.</p>\r\n</blockquote>\r\n<h2>\r\n\tText Transformation</h2>\r\n<p>\r\n\tThe <code>text-transform</code> property is used to specify uppercase and lowercase letters in a text.</p>\r\n<p>\r\n\tIt can be used to turn everything into uppercase or lowercase letters, or capitalize the first letter of each word:</p>\r\n<pre>\r\n<code>p.uppercase {\r\n  text-transform: uppercase;\r\n}\r\n\r\np.lowercase {\r\n  text-transform: lowercase;\r\n}\r\n\r\np.capitalize {\r\n  text-transform: capitalize;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tText Indentation</h2>\r\n<p>\r\n\tThe <code>text-indent</code> property is used to specify the indentation of the first line of a text:</p>\r\n<pre>\r\n<code>p {\r\n  text-indent: 50px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tLetter Spacing</h2>\r\n<p>\r\n\tThe <code>letter-spacing</code> property is used to specify the space between the characters in a text.</p>\r\n<p>\r\n\tThe following example demonstrates how to increase or decrease the space between characters:</p>\r\n<pre>\r\n<code>h1 {\r\n  letter-spacing: 3px;\r\n}\r\n\r\nh2 {\r\n  letter-spacing: -3px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tLine Height</h2>\r\n<p>\r\n\tThe <code>line-height</code> property is used to specify the space between lines:</p>\r\n<pre>\r\n<code>p.small {\r\n  line-height: 0.8;\r\n}\r\n\r\np.big {\r\n  line-height: 1.8;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tText Direction</h2>\r\n<p>\r\n\tThe <code>direction</code> property is used to change the text direction of an element:</p>\r\n<pre>\r\n<code>p {\r\n  direction: rtl;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tWord Spacing</h2>\r\n<p>\r\n\tThe <code>word-spacing</code> property is used to specify the space between the words in a text.</p>\r\n<p>\r\n\tThe following example demonstrates how to increase or decrease the space between words:&nbsp;</p>\r\n<pre>\r\n<code>h1 {\r\n  word-spacing: 10px;\r\n}\r\n\r\nh2 {\r\n  word-spacing: -5px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tText Shadow</h2>\r\n<p>\r\n\tThe <code>text-shadow</code> property adds shadow to text.</p>\r\n<p>\r\n\tThe following example specifies the position of the horizontal shadow (3px), the position of the vertical shadow (2px) and the color of the shadow (red):</p>\r\n<pre>\r\n<code>h1 {\r\n  text-shadow: 3px 2px red;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_text_white-space\" target=\"_blank\">Disable text wrapping inside an element</a><br />\r\n\tThis example demonstrates how to disable text wrapping inside an element.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_vertical-align\" target=\"_blank\">Vertical alignment of an image</a><br />\r\n\tThis example demonstrates how to set the vertical align of an image in a text.</p>\r\n<p>\r\n\tTip: <a href=\"css_font.asp\" target=\"_blank\">Go to our CSS Fonts</a> chapter to learn about how to change fonts, text size and the style of a text.</p>\r\n<h2>\r\n\tAll CSS Text Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tcolor</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the color of text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tdirection</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the text direction/writing direction</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tletter-spacing</td>\r\n\t\t\t<td>\r\n\t\t\t\tIncreases or decreases the space between characters in a text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tline-height</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the line height</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-align</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the horizontal alignment of text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-decoration</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the decoration added to text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-indent</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the indentation of the first line in a text-block</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-shadow</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the shadow effect added to text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-transform</td>\r\n\t\t\t<td>\r\n\t\t\t\tControls the capitalization of text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-overflow</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how overflowed content that is not displayed should be signaled to the user</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tunicode-bidi</td>\r\n\t\t\t<td>\r\n\t\t\t\tUsed together with the <a href=\"/cssref/pr_text_direction.asp\" target=\"_blank\">direction</a> property to set or return whether the text should be overridden to support multiple languages in the same document</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvertical-align</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the vertical alignment of an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\twhite-space</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how white-space inside an element is handled</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tword-spacing</td>\r\n\t\t\t<td>\r\n\t\t\t\tIncreases or decreases the space between words in a text</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Fonts": {
            "content": "<p>\r\n\tThe CSS font properties define the font family, boldness, size, and the style of a text.</p>\r\n<h2>\r\n\tDifference Between Serif and Sans-serif Fonts</h2>\r\n<p>\r\n\t[[ image(css-tutorial/serif.gif, center) ]]</p>\r\n<h2>\r\n\tCSS Font Families</h2>\r\n<p>\r\n\tIn CSS, there are two types of font family names:</p>\r\n<ul>\r\n\t<li>\r\n\t\tgeneric family - a group of font families with a similar look (like &quot;Serif&quot; or &quot;Monospace&quot;)</li>\r\n\t<li>\r\n\t\tfont family - a specific font family (like &quot;Times New Roman&quot; or &quot;Arial&quot;)</li>\r\n</ul>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tGeneric family</th>\r\n\t\t\t<th>\r\n\t\t\t\tFont family</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tSerif</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Times New Roman</span><br />\r\n\t\t\t\t<span>Georgia</span></td>\r\n\t\t\t<td>\r\n\t\t\t\tSerif fonts have small lines at the ends on some characters</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tSans-serif</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Arial</span><br />\r\n\t\t\t\t<span>Verdana</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t&quot;Sans&quot; means without - these fonts do not have the lines at the ends of characters</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tMonospace</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Courier New</span><br />\r\n\t\t\t\t<span>Lucida Console</span></td>\r\n\t\t\t<td>\r\n\t\t\t\tAll monospace characters have the same width</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: On computer screens, sans-serif fonts are considered easier to read than serif fonts.</p>\r\n</blockquote>\r\n<h2>\r\n\tFont Family</h2>\r\n<p>\r\n\tThe font family of a text is set with the <code>font-family</code> property.</p>\r\n<p>\r\n\tThe <code>font-family</code> property should hold several font names as a &quot;fallback&quot; system. If the browser does not support the first font, it tries the next font, and so on.</p>\r\n<p>\r\n\tStart with the font you want, and end with a generic family, to let the browser pick a similar font in the generic family, if no other fonts are available.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: If the name of a font family is more than one word, it must be in quotation marks, like: &quot;Times New Roman&quot;.</p>\r\n</blockquote>\r\n<p>\r\n\tMore than one font family is specified in a comma-separated list:</p>\r\n<pre>\r\n<code>p {\r\n  font-family: &quot;Times New Roman&quot;, Times, serif;\r\n}\r\n</code></pre>\r\n<p>\r\n\tFor commonly used font combinations, look at our <a href=\"/cssref/css_websafe_fonts.asp\" target=\"_blank\">Web Safe Font Combinations</a>.</p>\r\n<h2>\r\n\tFont Style</h2>\r\n<p>\r\n\tThe <code>font-style</code> property is mostly used to specify italic text.</p>\r\n<p>\r\n\tThis property has three values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tnormal - The text is shown normally</li>\r\n\t<li>\r\n\t\titalic - The text is shown in italics</li>\r\n\t<li>\r\n\t\toblique - The text is &quot;leaning&quot; (oblique is very similar to italic, but less supported)</li>\r\n</ul>\r\n<pre>\r\n<code>p.normal {\r\n  font-style: normal;\r\n}\r\n\r\np.italic {\r\n  font-style: italic;\r\n}\r\n\r\np.oblique {\r\n  font-style: oblique;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tFont Size</h2>\r\n<p>\r\n\tThe <code>font-size</code> property sets the size of the text.</p>\r\n<p>\r\n\tBeing able to manage the text size is important in web design. However, you should not use font size adjustments to make paragraphs look like headings, or headings look like paragraphs.</p>\r\n<p>\r\n\tAlways use the proper HTML tags, like &lt;h1&gt; - &lt;h6&gt; for headings and &lt;p&gt; for paragraphs.</p>\r\n<p>\r\n\tThe font-size value can be an absolute, or relative size.</p>\r\n<p>\r\n\tAbsolute size:</p>\r\n<ul>\r\n\t<li>\r\n\t\tSets the text to a specified size</li>\r\n\t<li>\r\n\t\tDoes not allow a user to change the text size in all browsers (bad for accessibility reasons)</li>\r\n\t<li>\r\n\t\tAbsolute size is useful when the physical size of the output is known</li>\r\n</ul>\r\n<p>\r\n\tRelative size:</p>\r\n<ul>\r\n\t<li>\r\n\t\tSets the size relative to surrounding elements</li>\r\n\t<li>\r\n\t\tAllows a user to change the text size in browsers</li>\r\n</ul>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: If you do not specify a font size, the default size for normal text, like paragraphs, is 16px (16px=1em).</p>\r\n</blockquote>\r\n<h2>\r\n\tSet Font Size With Pixels</h2>\r\n<p>\r\n\tSetting the text size with pixels gives you full control over the text size:</p>\r\n<pre>\r\n<code>h1 {\r\n  font-size: 40px;\r\n}\r\n\r\nh2 {\r\n  font-size: 30px;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: If you use pixels, you can still use the zoom tool to resize the entire page.</p>\r\n</blockquote>\r\n<h2>\r\n\tSet Font Size With Em</h2>\r\n<p>\r\n\tTo allow users to resize the text (in the browser menu), many developers use em instead of pixels.</p>\r\n<p>\r\n\tThe em size unit is recommended by the W3C.</p>\r\n<p>\r\n\t1em is equal to the current font size. The default text size in browsers is 16px. So, the default size of 1em is 16px.</p>\r\n<p>\r\n\tThe size can be calculated from pixels to em using this formula: pixels/16=em</p>\r\n<pre>\r\n<code>h1 {\r\n  font-size: 2.5em; /* 40px/16=2.5em */\r\n}\r\n\r\nh2 {\r\n  font-size: 1.875em; /* 30px/16=1.875em */\r\n}\r\n\r\np {\r\n  font-size: 0.875em; /* 14px/16=0.875em */\r\n}\r\n</code></pre>\r\n<p>\r\n\tIn the example above, the text size in em is the same as the previous example in pixels. However, with the em size, it is possible to adjust the text size in all browsers.</p>\r\n<p>\r\n\tUnfortunately, there is still a problem with older versions of IE. The text becomes larger than it should when made larger, and smaller than it should when made smaller.</p>\r\n<h2>\r\n\tUse a Combination of Percent and Em</h2>\r\n<p>\r\n\tThe solution that works in all browsers, is to set a default font-size in percent for the &lt;body&gt; element:</p>\r\n<pre>\r\n<code>body {\r\n  font-size: 100%;\r\n}\r\n\r\nh1 {\r\n  font-size: 2.5em;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.875em;\r\n}\r\n\r\np {\r\n  font-size: 0.875em;\r\n}\r\n</code></pre>\r\n<p>\r\n\tOur code now works great! It shows the same text size in all browsers, and allows all browsers to zoom or resize the text!</p>\r\n<h2>\r\n\tFont Weight</h2>\r\n<p>\r\n\tThe <code>font-weight</code> property specifies the weight of a font:</p>\r\n<pre>\r\n<code>p.normal {\r\n  font-weight: normal;\r\n}\r\n\r\np.thick {\r\n  font-weight: bold;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tResponsive Font Size</h2>\r\n<p>\r\n\tThe text size can be set with a <code>vw</code> unit, which means the &quot;viewport width&quot;.</p>\r\n<pre>\r\n<code>&lt;h1 style=&quot;font-size:10vw&quot;&gt;Hello World&lt;/h1&gt;\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tViewport is the browser window size. 1vw = 1% of viewport width. If the viewport is 50cm wide, 1vw is 0.5cm.</p>\r\n</blockquote>\r\n<h2>\r\n\tFont Variant</h2>\r\n<p>\r\n\tThe <code>font-variant</code> property specifies whether or not a text should be displayed in a small-caps font.</p>\r\n<p>\r\n\tIn a small-caps font, all lowercase letters are converted to uppercase letters. However, the converted uppercase letters appears in a smaller font size than the original uppercase letters in the text.</p>\r\n<pre>\r\n<code>p.normal {\r\n  font-variant: normal;\r\n}\r\n\r\np.small {\r\n  font-variant: small-caps;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_font\" target=\"_blank\">All the font properties in one declaration</a><br />\r\n\tThis example demonstrates how to use the shorthand property for setting all of the font properties in one declaration.</p>\r\n<h2>\r\n\tAll CSS Font Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the font properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-family</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the font family for text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-size</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the font size of text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the font style for text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-variant</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies whether or not a text should be displayed in a small-caps font</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-weight</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the weight of a font</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Icons": {
            "content": "<h2>\r\n\tHow To Add Icons</h2>\r\n<p>\r\n\tThe simplest way to add an icon to your HTML page, is with an icon library, such as Font Awesome.</p>\r\n<p>\r\n\tAdd the name of the specified icon class to any inline HTML element (like <code>&lt;i&gt;</code> or <code>&lt;span&gt;</code>).</p>\r\n<p>\r\n\tAll the icons in the icon libraries below, are scalable vectors that can be customized with CSS (size, color, shadow, etc.)</p>\r\n<h2>\r\n\tFont Awesome Icons</h2>\r\n<p>\r\n\tTo use the Font Awesome icons, add the following line inside the <code>&lt;head&gt;</code> section of your HTML page:</p>\r\n<p>\r\n\t<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.7.0/css/all.css&quot; integrity=&quot;sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ&quot; crossorigin=&quot;anonymous&quot;&gt;</code></p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: No downloading or installation is required!</p>\r\n</blockquote>\r\n<pre>\r\n<code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.7.0/css/all.css&quot; integrity=&quot;sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ&quot; crossorigin=&quot;anonymous&quot;&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;i class=&quot;fas fa-cloud&quot;&gt;&lt;/i&gt;\r\n&lt;i class=&quot;fas fa-heart&quot;&gt;&lt;/i&gt;\r\n&lt;i class=&quot;fas fa-car&quot;&gt;&lt;/i&gt;\r\n&lt;i class=&quot;fas fa-file&quot;&gt;&lt;/i&gt;\r\n&lt;i class=&quot;fas fa-bars&quot;&gt;&lt;/i&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tFor a complete reference of all Font Awesome icons, visit our <a href=\"/icons/icons_reference.asp\" target=\"_blank\">Icon Reference</a>.</p>\r\n</blockquote>\r\n<h2>\r\n\tBootstrap Icons</h2>\r\n<p>\r\n\tTo use the Bootstrap glyphicons, add the following line inside the <code>&lt;head&gt;</code> section of your HTML page:</p>\r\n<p>\r\n\t<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&gt;</code></p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: No downloading or installation is required!</p>\r\n</blockquote>\r\n<pre>\r\n<code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;i class=&quot;glyphicon glyphicon-cloud&quot;&gt;&lt;/i&gt;\r\n&lt;i class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/i&gt;\r\n&lt;i class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/i&gt;\r\n&lt;i class=&quot;glyphicon glyphicon-envelope&quot;&gt;&lt;/i&gt;\r\n&lt;i class=&quot;glyphicon glyphicon-thumbs-up&quot;&gt;&lt;/i&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\r\n<h2>\r\n\tGoogle Icons</h2>\r\n<p>\r\n\tTo use the Google icons, add the following line inside the <code>&lt;head&gt;</code> section of your HTML page:</p>\r\n<p>\r\n\t<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot;&gt;</code></p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: No downloading or installation is required!</p>\r\n</blockquote>\r\n<pre>\r\n<code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot;&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;i class=&quot;material-icons&quot;&gt;cloud&lt;/i&gt;\r\n&lt;i class=&quot;material-icons&quot;&gt;favorite&lt;/i&gt;\r\n&lt;i class=&quot;material-icons&quot;&gt;attachment&lt;/i&gt;\r\n&lt;i class=&quot;material-icons&quot;&gt;computer&lt;/i&gt;\r\n&lt;i class=&quot;material-icons&quot;&gt;traffic&lt;/i&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\r\n<p>\r\n\tFor a complete list of all icons, visit our <a href=\"/icons/default.asp\" target=\"_blank\">Icon Tutorial</a>.</p>"
          }
        },
        {
          "Links": {
            "content": "<p>\r\n\tWith CSS, links can be styled in different ways.</p>\r\n<h2>\r\n\tStyling Links</h2>\r\n<p>\r\n\tLinks can be styled with any CSS property (e.g. <code>color</code>, <code>font-family</code>, <code>background</code>, etc.).</p>\r\n<pre>\r\n<code>a {\r\n  color: hotpink;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIn addition, links can be styled differently depending on what state they are in.</p>\r\n<p>\r\n\tThe four links states are:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>a:link</code> - a normal, unvisited link</li>\r\n\t<li>\r\n\t\t<code>a:visited</code> - a link the user has visited</li>\r\n\t<li>\r\n\t\t<code>a:hover</code> - a link when the user mouses over it</li>\r\n\t<li>\r\n\t\t<code>a:active</code> - a link the moment it is clicked</li>\r\n</ul>\r\n<pre>\r\n<code>/* unvisited link */\r\na:link {\r\n  color: red;\r\n}\r\n\r\n/* visited link */\r\na:visited {\r\n  color: green;\r\n}\r\n\r\n/* mouse over link */\r\na:hover {\r\n  color: hotpink;\r\n}\r\n\r\n/* selected link */\r\na:active {\r\n  color: blue;\r\n}\r\n</code></pre>\r\n<p>\r\n\tWhen setting the style for several link states, there are some order rules:</p>\r\n<ul>\r\n\t<li>\r\n\t\ta:hover MUST come after a:link and a:visited</li>\r\n\t<li>\r\n\t\ta:active MUST come after a:hover</li>\r\n</ul>\r\n<h2>\r\n\tText Decoration</h2>\r\n<p>\r\n\tThe <code>text-decoration</code> property is mostly used to remove underlines from links:</p>\r\n<pre>\r\n<code>a:link {\r\n  text-decoration: none;\r\n}\r\n\r\na:visited {\r\n  text-decoration: none;\r\n}\r\n\r\na:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\na:active {\r\n  text-decoration: underline;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tBackground Color</h2>\r\n<p>\r\n\tThe <code>background-color</code> property can be used to specify a background color for links:</p>\r\n<pre>\r\n<code>a:link {\r\n  background-color: yellow;\r\n}\r\n\r\na:visited {\r\n  background-color: cyan;\r\n}\r\n\r\na:hover {\r\n  background-color: lightgreen;\r\n}\r\n\r\na:active {\r\n  background-color: hotpink;\r\n} \r\n</code></pre>\r\n<h2>\r\n\tAdvanced - Link Buttons</h2>\r\n<p>\r\n\tThis example demonstrates a more advanced example where we combine several CSS properties to display links as boxes/buttons:</p>\r\n<pre>\r\n<code>a:link, a:visited {\r\n  background-color: #f44336;\r\n  color: white;\r\n  padding: 14px 25px;\r\n  text-align: center; \r\n  text-decoration: none;\r\n  display: inline-block;\r\n}\r\n\r\na:hover, a:active {\r\n  background-color: red;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_link2\" target=\"_blank\">Add different styles to hyperlinks</a><br />\r\n\tThis example demonstrates how to add other styles to hyperlinks.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_link_advanced2\" target=\"_blank\">Advanced - Create a link button with borders</a><br />\r\n\tAnother example of how to create link boxes/buttons.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_cursor\" target=\"_blank\">Change the cursor</a><br />\r\n\tThe cursor property specifies the type of cursor to display. This example demonstrates the different types of cursors (can be useful for links).</p>"
          }
        },
        {
          "Lists": {
            "content": "<h2>\r\n\tHTML Lists and CSS List Properties</h2>\r\n<p>\r\n\tIn HTML, there are two main types of lists:</p>\r\n<ul>\r\n\t<li>\r\n\t\tunordered lists (&lt;ul&gt;) - the list items are marked with bullets</li>\r\n\t<li>\r\n\t\tordered lists (&lt;ol&gt;) - the list items are marked with numbers or letters</li>\r\n</ul>\r\n<p>\r\n\tThe CSS list properties allow you to:</p>\r\n<ul>\r\n\t<li>\r\n\t\tSet different list item markers for ordered lists</li>\r\n\t<li>\r\n\t\tSet different list item markers for unordered lists</li>\r\n\t<li>\r\n\t\tSet an image as the list item marker</li>\r\n\t<li>\r\n\t\tAdd background colors to lists and list items</li>\r\n</ul>\r\n<h2>\r\n\tDifferent List Item Markers</h2>\r\n<p>\r\n\tThe <code>list-style-type</code> property specifies the type of list item marker.</p>\r\n<p>\r\n\tThe following example shows some of the available list item markers:</p>\r\n<pre>\r\n<code>ul.a {\r\n  list-style-type: circle;\r\n}\r\n\r\nul.b {\r\n  list-style-type: square;\r\n}\r\n\r\nol.c {\r\n  list-style-type: upper-roman;\r\n}\r\n\r\nol.d {\r\n  list-style-type: lower-alpha;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Some of the values are for unordered lists, and some for ordered lists.</p>\r\n</blockquote>\r\n<h2>\r\n\tAn Image as The List Item Marker</h2>\r\n<p>\r\n\tThe <code>list-style-image</code> property specifies an image as the list item marker:</p>\r\n<pre>\r\n<code>ul {\r\n  list-style-image: url(&#39;sqpurple.gif&#39;);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tPosition The List Item Markers</h2>\r\n<p>\r\n\tThe <code>list-style-position</code> property specifies the position of the list-item markers (bullet points).</p>\r\n<p>\r\n\t&quot;list-style-position: outside;&quot; means that the bullet points will be outside the list item. The start of each line of a list item will be aligned vertically. This is default:</p>\r\n<ul>\r\n\t<li>\r\n\t\tCoffee - <span> A brewed drink prepared from roasted coffee beans...</span></li>\r\n\t<li>\r\n\t\tTea</li>\r\n\t<li>\r\n\t\tCoca-cola</li>\r\n</ul>\r\n<p>\r\n\t&quot;list-style-position: inside;&quot; means that the bullet points will be inside the list item. As it is part of the list item, it will be part of the text and push the text at the start:</p>\r\n<ul>\r\n\t<li>\r\n\t\tCoffee - <span> A brewed drink prepared from roasted coffee beans...</span></li>\r\n\t<li>\r\n\t\tTea</li>\r\n\t<li>\r\n\t\tCoca-cola</li>\r\n</ul>\r\n<pre>\r\n<code>ul.a {\r\n  list-style-position: outside;\r\n}\r\n\r\nul.b {\r\n  list-style-position: inside;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tRemove Default Settings</h2>\r\n<p>\r\n\tThe <code>list-style-type:none</code> property can also be used to remove the markers/bullets. Note that the list also has default margin and padding. To remove this, add <code>margin:0</code> and <code>padding:0</code> to &lt;ul&gt; or &lt;ol&gt;:</p>\r\n<pre>\r\n<code>ul {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tList - Shorthand property</h2>\r\n<p>\r\n\tThe <code>list-style</code> property is a shorthand property. It is used to set all the list properties in one declaration:</p>\r\n<pre>\r\n<code>ul {\r\n  list-style: square inside url(&quot;sqpurple.gif&quot;);\r\n}\r\n</code></pre>\r\n<p>\r\n\tWhen using the shorthand property, the order of the property values are:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>list-style-type</code> (if a list-style-image is specified, the value of this property will be displayed if the image for some reason cannot be displayed)</li>\r\n\t<li>\r\n\t\t<code>list-style-position</code> (specifies whether the list-item markers should appear inside or outside the content flow)</li>\r\n\t<li>\r\n\t\t<code>list-style-image</code> (specifies an image as the list item marker)</li>\r\n</ul>\r\n<p>\r\n\tIf one of the property values above are missing, the default value for the missing property will be inserted, if any.</p>\r\n<h2>\r\n\tStyling List With Colors</h2>\r\n<p>\r\n\tWe can also style lists with colors, to make them look a little more interesting.</p>\r\n<p>\r\n\tAnything added to the &lt;ol&gt; or &lt;ul&gt; tag, affects the entire list, while properties added to the &lt;li&gt; tag will affect the individual list items:</p>\r\n<pre>\r\n<code>ol {\r\n  background: #ff9999;\r\n  padding: 20px;\r\n}\r\n\r\nul {\r\n  background: #3399ff;\r\n  padding: 20px;\r\n}\r\n\r\nol li {\r\n  background: #ffe5e5;\r\n  padding: 5px;\r\n  margin-left: 35px;\r\n}\r\n\r\nul li {\r\n  background: #cce5ff;\r\n  margin: 5px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_list-style-red-border\" target=\"_blank\">Customized list with a red left border</a><br />\r\n\tThis example demonstrates how to create a list with a red left border.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_list-style-border\" target=\"_blank\">Full-width bordered list</a><br />\r\n\tThis example demonstrates how to create a bordered list without bullets.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_list-style-type_all\" target=\"_blank\">All the different list-item markers for lists</a><br />\r\n\tThis example demonstrates all the different list-item markers in CSS.</p>\r\n<h2>\r\n\tAll CSS List Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tlist-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the properties for a list in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tlist-style-image</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies an image as the list-item marker</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tlist-style-position</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the position of the list-item markers (bullet points)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tlist-style-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the type of list-item marker</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Tables": {
            "content": "<p>\r\n\tThe look of an HTML table can be greatly improved with CSS:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tCompany</th>\r\n\t\t\t<th>\r\n\t\t\t\tContact</th>\r\n\t\t\t<th>\r\n\t\t\t\tCountry</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tAlfreds Futterkiste</td>\r\n\t\t\t<td>\r\n\t\t\t\tMaria Anders</td>\r\n\t\t\t<td>\r\n\t\t\t\tGermany</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tBerglunds snabbk&ouml;p</td>\r\n\t\t\t<td>\r\n\t\t\t\tChristina Berglund</td>\r\n\t\t\t<td>\r\n\t\t\t\tSweden</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tCentro comercial Moctezuma</td>\r\n\t\t\t<td>\r\n\t\t\t\tFrancisco Chang</td>\r\n\t\t\t<td>\r\n\t\t\t\tMexico</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tErnst Handel</td>\r\n\t\t\t<td>\r\n\t\t\t\tRoland Mendel</td>\r\n\t\t\t<td>\r\n\t\t\t\tAustria</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tIsland Trading</td>\r\n\t\t\t<td>\r\n\t\t\t\tHelen Bennett</td>\r\n\t\t\t<td>\r\n\t\t\t\tUK</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tK&ouml;niglich Essen</td>\r\n\t\t\t<td>\r\n\t\t\t\tPhilip Cramer</td>\r\n\t\t\t<td>\r\n\t\t\t\tGermany</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tLaughing Bacchus Winecellars</td>\r\n\t\t\t<td>\r\n\t\t\t\tYoshi Tannamuri</td>\r\n\t\t\t<td>\r\n\t\t\t\tCanada</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tMagazzini Alimentari Riuniti</td>\r\n\t\t\t<td>\r\n\t\t\t\tGiovanni Rovelli</td>\r\n\t\t\t<td>\r\n\t\t\t\tItaly</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tTable Borders</h2>\r\n<p>\r\n\tTo specify table borders in CSS, use the <code>border</code> property.</p>\r\n<p>\r\n\tThe example below specifies a black border for &lt;table&gt;, &lt;th&gt;, and &lt;td&gt; elements:</p>\r\n<pre>\r\n<code>table, th, td {\r\n  border: 1px solid black;\r\n}\r\n</code></pre>\r\n<p>\r\n\tNotice that the table in the example above has double borders. This is because both the table and the &lt;th&gt; and &lt;td&gt; elements have separate borders.</p>\r\n<h2>\r\n\tCollapse Table Borders</h2>\r\n<p>\r\n\tThe <code>border-collapse</code> property sets whether the table borders should be collapsed into a single border:</p>\r\n<pre>\r\n<code>table {\r\n  border-collapse: collapse;\r\n}\r\n\r\ntable, th, td {\r\n  border: 1px solid black;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf you only want a border around the table, only specify the <code>border</code> property for &lt;table&gt;:</p>\r\n<pre>\r\n<code>table {\r\n  border: 1px solid black;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTable Width and Height</h2>\r\n<p>\r\n\tWidth and height of a table are defined by the <code>width</code> and <code>height</code> properties.</p>\r\n<p>\r\n\tThe example below sets the width of the table to 100%, and the height of the &lt;th&gt; elements to 50px:</p>\r\n<pre>\r\n<code>table {\r\n  width: 100%;\r\n}\r\n\r\nth {\r\n  height: 50px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tHorizontal Alignment</h2>\r\n<p>\r\n\tThe <code>text-align</code> property sets the horizontal alignment (like left, right, or center) of the content in &lt;th&gt; or &lt;td&gt;.</p>\r\n<p>\r\n\tBy default, the content of &lt;th&gt; elements are center-aligned and the content of &lt;td&gt; elements are left-aligned.</p>\r\n<p>\r\n\tThe following example left-aligns the text in &lt;th&gt; elements:</p>\r\n<pre>\r\n<code>th {\r\n  text-align: left;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tVertical Alignment</h2>\r\n<p>\r\n\tThe <code>vertical-align</code> property sets the vertical alignment (like top, bottom, or middle) of the content in &lt;th&gt; or &lt;td&gt;.</p>\r\n<p>\r\n\tBy default, the vertical alignment of the content in a table is middle (for both &lt;th&gt; and &lt;td&gt; elements).</p>\r\n<p>\r\n\tThe following example sets the vertical text alignment to bottom for &lt;td&gt; elements:</p>\r\n<pre>\r\n<code>td {\r\n  height: 50px;\r\n  vertical-align: bottom;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTable Padding</h2>\r\n<p>\r\n\tTo control the space between the border and the content in a table, use the <code>padding</code> property on &lt;td&gt; and &lt;th&gt; elements:</p>\r\n<pre>\r\n<code>th, td {\r\n  padding: 15px;\r\n  text-align: left;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tHorizontal Dividers</h2>\r\n<p>\r\n\tAdd the <code>border-bottom</code> property to &lt;th&gt; and &lt;td&gt; for horizontal dividers:</p>\r\n<pre>\r\n<code>th, td {\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tHoverable Table</h2>\r\n<p>\r\n\tUse the <code>:hover</code> selector on &lt;tr&gt; to highlight table rows on mouse over:</p>\r\n<pre>\r\n<code>tr:hover {background-color: #f5f5f5;}\r\n</code></pre>\r\n<h2>\r\n\tStriped Tables</h2>\r\n<p>\r\n\tFor zebra-striped tables, use the <code>nth-child()</code> selector and add a <code>background-color</code> to all even (or odd) table rows:</p>\r\n<pre>\r\n<code>tr:nth-child(even) {background-color: #f2f2f2;}\r\n</code></pre>\r\n<h2>\r\n\tTable Color</h2>\r\n<p>\r\n\tThe example below specifies the background color and text color of &lt;th&gt; elements:</p>\r\n<pre>\r\n<code>th {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tResponsive Table</h2>\r\n<p>\r\n\tA responsive table will display a horizontal scroll bar if the screen is too small to display the full content:</p>\r\n<p>\r\n\tAdd a container element (like &lt;div&gt;) with <code>overflow-x:auto</code> around the &lt;table&gt; element to make it responsive:</p>\r\n<pre>\r\n<code>&lt;div style=&quot;overflow-x:auto;&quot;&gt;\r\n\r\n&lt;table&gt;\r\n... table content ...\r\n&lt;/table&gt;\r\n\r\n&lt;/div&gt;\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: In OS X Lion (on Mac), scrollbars are hidden by default and only shown when being used (even though &quot;overflow:scroll&quot; is set).</p>\r\n</blockquote>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_table_fancy\" target=\"_blank\">Make a fancy table</a><br />\r\n\tThis example demonstrates how to create a fancy table.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_table_caption-side\" target=\"_blank\">Set the position of the table caption</a><br />\r\n\tThis example demonstrates how to position the table caption.</p>\r\n<h2>\r\n\tCSS Table Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets all the border properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-collapse</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies whether or not table borders should be collapsed</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-spacing</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the distance between the borders of adjacent cells</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tcaption-side</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the placement of a table caption</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tempty-cells</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies whether or not to display borders and background on empty cells in a table</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttable-layout</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the layout algorithm to be used for a table</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Display": {
            "content": "<p>\r\n\tThe <code>display</code> property is the most important CSS property for controlling layout.</p>\r\n<h2>\r\n\tThe display Property</h2>\r\n<p>\r\n\tThe <code>display</code> property specifies if/how an element is displayed.</p>\r\n<p>\r\n\tEvery HTML element has a default display value depending on what type of element it is. The default display value for most elements is <code>block</code> or <code>inline</code>.</p>\r\n<h2>\r\n\tBlock-level Elements</h2>\r\n<p>\r\n\tA block-level element always starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).</p>\r\n<p>\r\n\tExamples of block-level elements:</p>\r\n<ul>\r\n\t<li>\r\n\t\t&lt;div&gt;</li>\r\n\t<li>\r\n\t\t&lt;h1&gt; - &lt;h6&gt;</li>\r\n\t<li>\r\n\t\t&lt;p&gt;</li>\r\n\t<li>\r\n\t\t&lt;form&gt;</li>\r\n\t<li>\r\n\t\t&lt;header&gt;</li>\r\n\t<li>\r\n\t\t&lt;footer&gt;</li>\r\n\t<li>\r\n\t\t&lt;section&gt;</li>\r\n</ul>\r\n<hr />\r\n<h2>\r\n\tInline Elements</h2>\r\n<p>\r\n\tAn inline element does not start on a new line and only takes up as much width as necessary.</p>\r\n<p>\r\n\tExamples of inline elements:</p>\r\n<ul>\r\n\t<li>\r\n\t\t&lt;span&gt;</li>\r\n\t<li>\r\n\t\t&lt;a&gt;</li>\r\n\t<li>\r\n\t\t&lt;img&gt;</li>\r\n</ul>\r\n<hr />\r\n<h2>\r\n\tDisplay: none;</h2>\r\n<p>\r\n\t<code>display: none;</code> is commonly used with JavaScript to hide and show elements without deleting and recreating them. Take a look at our last example on this page if you want to know how this can be achieved.</p>\r\n<p>\r\n\tThe <code>&lt;script&gt;</code> element uses <code>display: none;</code> as default.&nbsp;</p>\r\n<h2>\r\n\tOverride The Default Display Value</h2>\r\n<p>\r\n\tAs mentioned, every element has a default display value. However, you can override this.</p>\r\n<p>\r\n\tChanging an inline element to a block element, or vice versa, can be useful for making the page look a specific way, and still follow the web standards.</p>\r\n<p>\r\n\tA common example is making inline <code>&lt;li&gt;</code> elements for horizontal menus:</p>\r\n<pre>\r\n<code>li {\r\n  display: inline;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Setting the display property of an element only changes how the element is displayed, NOT what kind of element it is. So, an inline element with <code>display: block;</code> is not allowed to have other block elements inside it.</p>\r\n</blockquote>\r\n<p>\r\n\tThe following example displays &lt;span&gt; elements as block elements:</p>\r\n<pre>\r\n<code>span {\r\n  display: block;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example displays &lt;a&gt; elements as block elements:</p>\r\n<pre>\r\n<code>a {\r\n  display: block;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tHide an Element - display:none or visibility:hidden?</h2>\r\n<p>\r\n\tHiding an element can be done by setting the <code>display</code> property to <code>none</code>. The element will be hidden, and the page will be displayed as if the element is not there:</p>\r\n<pre>\r\n<code>h1.hidden {\r\n  display: none;\r\n}\r\n</code></pre>\r\n<p>\r\n\t<code>visibility:hidden;</code> also hides an element.</p>\r\n<p>\r\n\tHowever, the element will still take up the same space as before. The element will be hidden, but still affect the layout:</p>\r\n<pre>\r\n<code>h1.hidden {\r\n  visibility: hidden;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_display\" target=\"_blank\">Differences between display: none; and visibility: hidden;</a><br />\r\n\tThis example demonstrates display: none; versus visibility: hidden;</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_display_js\" target=\"_blank\">Using CSS together with JavaScript to show content</a><br />\r\n\tThis example demonstrates how to use CSS and JavaScript to show an element on click.</p>\r\n<h2>\r\n\tCSS Display/Visibility Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tdisplay</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how an element should be displayed</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvisibility</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies whether or not an element should be visible</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Width and max-width": {
            "content": "<h2>\r\n\tUsing width, max-width and margin: auto;</h2>\r\n<p>\r\n\tAs mentioned in the previous chapter; a block-level element always takes up the full width available (stretches out to the left and right as far as it can).</p>\r\n<p>\r\n\tSetting the <code>width</code> of a block-level element will prevent it from stretching out to the edges of its container. Then, you can set the margins to auto, to horizontally center the element within its container. The element will take up the specified width, and the remaining space will be split equally between the two margins.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The problem with the <code>&lt;div&gt;</code> above occurs when the browser window is smaller than the width of the element. The browser then adds a horizontal scrollbar to the page.</p>\r\n</blockquote>\r\n<p>\r\n\tUsing <code>max-width</code> instead, in this situation, will improve the browser&#39;s handling of small windows. This is important when making a site usable on small devices.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Resize the browser window to less than 500px wide, to see the difference between the two divs!</p>\r\n</blockquote>\r\n<p>\r\n\tHere is an example of the two divs above:</p>\r\n<pre>\r\n<code>div.ex1 {\r\n  width: 500px;\r\n  margin: auto;\r\n  border: 3px solid #73AD21;\r\n}\r\n\r\ndiv.ex2 {\r\n  max-width: 500px;\r\n  margin: auto;\r\n  border: 3px solid #73AD21;\r\n}\r\n\r\n</code></pre>"
          }
        },
        {
          "The position Property": {
            "content": "<p>\r\n\tThe <code>position</code> property specifies the type of positioning method used for an element (static, relative, fixed, absolute or sticky).</p>\r\n<h2>\r\n\tThe position Property</h2>\r\n<p>\r\n\tThe <code>position</code> property specifies the type of positioning method used for an element.</p>\r\n<p>\r\n\tThere are five different position values:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>static</code></li>\r\n\t<li>\r\n\t\t<code>relative</code></li>\r\n\t<li>\r\n\t\t<code>fixed</code></li>\r\n\t<li>\r\n\t\t<code>absolute</code></li>\r\n\t<li>\r\n\t\t<code>sticky</code></li>\r\n</ul>\r\n<p>\r\n\tElements are then positioned using the top, bottom, left, and right properties. However, these properties will not work unless the <code>position</code> property is set first. They also work differently depending on the position value.</p>\r\n<h2>\r\n\tposition: static;</h2>\r\n<p>\r\n\tHTML elements are positioned static by default.</p>\r\n<p>\r\n\tStatic positioned elements are not affected by the top, bottom, left, and right properties.</p>\r\n<p>\r\n\tAn element with <code>position: static;</code> is not positioned in any special way; it is always positioned according to the normal flow of the page:</p>\r\n<p>\r\n\tHere is the CSS that is used:</p>\r\n<pre>\r\n<code>div.static {\r\n  position: static;\r\n  border: 3px solid #73AD21;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tposition: relative;</h2>\r\n<p>\r\n\tAn element with <code>position: relative;</code> is positioned relative to its normal position.</p>\r\n<p>\r\n\tSetting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position. Other content will not be adjusted to fit into any gap left by the element.</p>\r\n<p>\r\n\tHere is the CSS that is used:</p>\r\n<pre>\r\n<code>div.relative {\r\n  position: relative;\r\n  left: 30px;\r\n  border: 3px solid #73AD21;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tposition: fixed;</h2>\r\n<p>\r\n\tAn element with <code>position: fixed;</code> is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.</p>\r\n<p>\r\n\tA fixed element does not leave a gap in the page where it would normally have been located.</p>\r\n<p>\r\n\tNotice the fixed element in the lower-right corner of the page. Here is the CSS that is used:</p>\r\n<pre>\r\n<code>div.fixed {\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 300px;\r\n  border: 3px solid #73AD21;\r\n}</code></pre>\r\n<h2>\r\n\tposition: absolute;</h2>\r\n<p>\r\n\tAn element with <code>position: absolute;</code> is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).</p>\r\n<p>\r\n\tHowever; if an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: A &quot;positioned&quot; element is one whose position is anything except <code>static</code>.</p>\r\n</blockquote>\r\n<p>\r\n\tHere is the CSS that is used:</p>\r\n<pre>\r\n<code>div.relative {\r\n  position: relative;\r\n  width: 400px;\r\n  height: 200px;\r\n  border: 3px solid #73AD21;\r\n} \r\n\r\ndiv.absolute {\r\n  position: absolute;\r\n  top: 80px;\r\n  right: 0;\r\n  width: 200px;\r\n  height: 100px;\r\n  border: 3px solid #73AD21;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tposition: sticky;</h2>\r\n<p>\r\n\tAn element with <code>position: sticky;</code> is positioned based on the user&#39;s scroll position.</p>\r\n<p>\r\n\tA sticky element toggles between <code>relative</code> and <code>fixed</code>, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it &quot;sticks&quot; in place (like position:fixed).</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Internet Explorer, Edge 15 and earlier versions do not support sticky positioning. Safari requires a -webkit- prefix (see example below). You must also specify at least one of <code>top</code>, <code>right</code>, <code>bottom</code> or <code>left</code> for sticky positioning to work.</p>\r\n</blockquote>\r\n<p>\r\n\tIn this example, the sticky element sticks to the top of the page (<code>top: 0</code>), when you reach its scroll position.</p>\r\n<pre>\r\n<code>div.sticky {\r\n  position: -webkit-sticky; /* Safari */\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: green;\r\n  border: 2px solid #4CAF50;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tOverlapping Elements</h2>\r\n<p>\r\n\tWhen elements are positioned, they can overlap other elements.</p>\r\n<p>\r\n\tThe <code>z-index</code> property specifies the stack order of an element (which element should be placed in front of, or behind, the others).</p>\r\n<p>\r\n\tAn element can have a positive or negative stack order:</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: If two positioned elements overlap without a <code>z-index</code> specified, the element positioned last in the HTML code will be shown on top.</p>\r\n</blockquote>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_clip\" target=\"_blank\">Set the shape of an element</a><br />\r\n\tThis example demonstrates how to set the shape of an element. The element is clipped into this shape, and displayed.</p>\r\n<h2>\r\n\tAll CSS Positioning Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbottom</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the bottom margin edge for a positioned box</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tclip</td>\r\n\t\t\t<td>\r\n\t\t\t\tClips an absolutely positioned element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tleft</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the left margin edge for a positioned box</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tposition</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the type of positioning for an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tright</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the right margin edge for a positioned box</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttop</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the top margin edge for a positioned box</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tz-index</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets the stack order of an element</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Overflow": {
            "content": "<p>\r\n\tThe CSS <code>overflow</code> property controls what happens to content that is too big to fit into an area.</p>\r\n<h2>\r\n\tCSS Overflow</h2>\r\n<p>\r\n\tThe <code>overflow</code> property specifies whether to clip the content or to add scrollbars when the content of an element is too big to fit in the specified area.</p>\r\n<p>\r\n\tThe <code>overflow</code> property has the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>visible</code> - Default. The overflow is not clipped. The content renders outside the element&#39;s box</li>\r\n\t<li>\r\n\t\t<code>hidden</code> - The overflow is clipped, and the rest of the content will be invisible</li>\r\n\t<li>\r\n\t\t<code>scroll</code> - The overflow is clipped, and a scrollbar is added to see the rest of the content</li>\r\n\t<li>\r\n\t\t<code>auto</code> - Similar to <code>scroll</code>, but it adds scrollbars only when necessary</li>\r\n</ul>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The <code>overflow</code> property only works for block elements with a specified height.</p>\r\n</blockquote>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: In OS X Lion (on Mac), scrollbars are hidden by default and only shown when being used (even though &quot;overflow:scroll&quot; is set).</p>\r\n</blockquote>\r\n<h2>\r\n\toverflow: visible</h2>\r\n<p>\r\n\tBy default, the overflow is <code>visible</code>, meaning that it is not clipped and it renders outside the element&#39;s box.</p>\r\n<pre>\r\n<code>div {\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: #eee;\r\n  overflow: visible;\r\n}</code></pre>\r\n<h2>\r\n\toverflow: hidden</h2>\r\n<p>\r\n\tWith the <code>hidden</code> value, the overflow is clipped, and the rest of the content is hidden.</p>\r\n<pre>\r\n<code>div {\r\n  overflow: hidden;\r\n}</code></pre>\r\n<h2>\r\n\toverflow: scroll</h2>\r\n<p>\r\n\tSetting the value to <code>scroll</code>, the overflow is clipped and a scrollbar is added to scroll inside the box. Note that this will add a scrollbar both horizontally and vertically (even if you do not need it).</p>\r\n<pre>\r\n<code>div {\r\n  overflow: scroll;\r\n}</code></pre>\r\n<h2>\r\n\toverflow: auto</h2>\r\n<p>\r\n\tThe <code>auto</code> value is similar to <code>scroll</code>, but it adds scrollbars only when necessary.</p>\r\n<pre>\r\n<code>div {\r\n  overflow: auto;\r\n}</code></pre>\r\n<h2>\r\n\toverflow-x and overflow-y</h2>\r\n<p>\r\n\tThe <code>overflow-x</code> and <code>overflow-y</code> properties specifies whether to change the overflow of content just horizontally or vertically (or both):</p>\r\n<p>\r\n\t<code>overflow-x</code> specifies what to do with the left/right edges of the content.<br />\r\n\t<code>overflow-y</code> specifies what to do with the top/bottom edges of the content.</p>\r\n<pre>\r\n<code>div {\r\n  overflow-x: hidden; /* Hide horizontal scrollbar */\r\n  overflow-y: scroll; /* Add vertical scrollbar */\r\n}</code></pre>\r\n<h2>\r\n\tAll CSS Overflow Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toverflow</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies what happens if content overflows an element&#39;s box</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toverflow-x</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies what to do with the left/right edges of the content if it overflows the element&#39;s content area</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toverflow-y</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies what to do with the top/bottom edges of the content if it overflows the element&#39;s content area</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Float and clear": {
            "content": "<p>\r\n\tThe CSS <code>float</code> property specifies how an element should float.</p>\r\n<p>\r\n\tThe CSS <code>clear</code> property specifies what elements can float beside the cleared element and on which side.</p>\r\n<h2>\r\n\tThe float Property</h2>\r\n<p>\r\n\tThe <code>float</code> property is used for positioning and formatting content e.g. let an image float left to the text in a container.</p>\r\n<p>\r\n\tThe <code>float</code> property can have one of the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tleft - The element floats to the left of its container</li>\r\n\t<li>\r\n\t\tright- The element floats to the right of its container</li>\r\n\t<li>\r\n\t\tnone - The element does not float (will be displayed just where it occurs in the text). This is default</li>\r\n\t<li>\r\n\t\tinherit - The element inherits the float value of its parent</li>\r\n</ul>\r\n<p>\r\n\tIn its simplest use, the <code>float</code> property can be used to wrap text around images.</p>\r\n<h2>\r\n\tExample - float: right;</h2>\r\n<p>\r\n\tThe following example specifies that an image should float to the right in a text:</p>\r\n<pre>\r\n<code>img {\r\n  float: right;\r\n}</code></pre>\r\n<h2>\r\n\tExample - float: left;</h2>\r\n<p>\r\n\tThe following example specifies that an image should float to the left in a text:</p>\r\n<pre>\r\n<code>img {\r\n  float: left;\r\n}</code></pre>\r\n<h2>\r\n\tExample - No float</h2>\r\n<p>\r\n\tIn the following example the image will be displayed just where it occurs in the text (float: none;):</p>\r\n<pre>\r\n<code>img {\r\n  float: none;\r\n}</code></pre>\r\n<h2>\r\n\tThe clear Property</h2>\r\n<p>\r\n\tThe <code>clear</code> property specifies what elements can float beside the cleared element and on which side.</p>\r\n<p>\r\n\tThe <code>clear</code> property can have one of the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tnone - Allows floating elements on both sides. This is default</li>\r\n\t<li>\r\n\t\tleft - No floating elements allowed on the left side</li>\r\n\t<li>\r\n\t\tright- No floating elements allowed on the right side</li>\r\n\t<li>\r\n\t\tboth - No floating elements allowed on either the left or the right side</li>\r\n\t<li>\r\n\t\tinherit - The element inherits the clear value of its parent</li>\r\n</ul>\r\n<p>\r\n\tThe most common way to use the <code>clear</code> property is after you have used a <code>float</code> property on an element.</p>\r\n<p>\r\n\tWhen clearing floats, you should match the clear to the float: If an element is floated to the left, then you should clear to the left. Your floated element will continue to float, but the cleared element will appear below it on the web page.</p>\r\n<p>\r\n\tThe following example clears the float to the left. Means that no floating elements are allowed on the left side (of the div):</p>\r\n<pre>\r\n<code>div {\r\n  clear: left;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe clearfix Hack</h2>\r\n<p>\r\n\tIf an element is taller than the element containing it, and it is floated, it will &quot;overflow&quot; outside of its container.</p>\r\n<p>\r\n\tThen we can add <code>overflow: auto;</code> to the containing element to fix this problem:</p>\r\n<pre>\r\n<code>.clearfix {\r\n  overflow: auto;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe <code>overflow: auto</code> clearfix works well as long as you are able to keep control of your margins and padding (else you might see scrollbars). The new, modern clearfix hack however, is safer to use, and the following code is used for most webpages:</p>\r\n<pre>\r\n<code>.clearfix::after {\r\n  content: &quot;&quot;;\r\n  clear: both;\r\n  display: table;\r\n}\r\n</code></pre>\r\n<p>\r\n\tYou will learn more about the <code>::after</code> pseudo-element in a later chapter.</p>\r\n<h2>\r\n\tGrid of Boxes / Equal Width Boxes</h2>\r\n<p>\r\n\tWith the <code>float</code> property, it is easy to float boxes of content side by side:</p>\r\n<pre>\r\n<code>* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.box {\r\n  float: left;\r\n  width: 33.33%; /* three boxes (use 25% for four, and 50% for two, etc) */\r\n  padding: 50px; /* if you want space between the images */\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tWhat is box-sizing?</p>\r\n\t<p>\r\n\t\tYou can easily create three floating boxes side by side. However, when you add something that enlarges the width of each box (e.g. padding or borders), the box will break. The <code>box-sizing</code> property allows us to include the padding and border in the box&#39;s total width (and height), making sure that the padding stays inside of the box and that it does not break.</p>\r\n\t<p>\r\n\t\tYou can read more about the box-sizing property in our <a href=\"css3_box-sizing.asp\" target=\"_blank\">CSS Box Sizing Chapter</a>.</p>\r\n</blockquote>\r\n<h2>\r\n\tImages Side By Side</h2>\r\n<p>\r\n\tThe grid of boxes can also be used to display images side by side:</p>\r\n<pre>\r\n<code>.img-container {\r\n  float: left;\r\n  width: 33.33%; /* three containers (use 25% for four, and 50% for two, etc) */\r\n  padding: 5px; /* if you want space between the images */\r\n}\r\n</code></pre>\r\n<h2>\r\n\tEqual Height Boxes</h2>\r\n<p>\r\n\tIn the previous example, you learned how to float boxes side by side with an equal width. However, it is not easy to create floating boxes with equal heights. A quick fix however, is to set a fixed height, like in the example below:</p>\r\n<pre>\r\n<code>.box {\r\n  height: 500px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tHowever, this is not very flexible. It is ok if you can guarantee that the boxes will always have the same amount of content in them. But many times, the content is not the same. If you try the example above on a mobile phone, you will see that the second box&#39;s content will be displayed outside of the box. This is where CSS3 Flexbox comes in handy - as it can automatically stretch boxes to be as long as the longest box.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tThe only problem with Flexbox is that it does not work in Internet Explorer 10 or earlier versions. You can read more about the Flexbox Layout Module in our <a href=\"css3_flexbox.asp\" target=\"_blank\">CSS Flexbox Chapter</a>.</p>\r\n</blockquote>\r\n<h2>\r\n\tNavigation Menu</h2>\r\n<p>\r\n\tUse <code>float</code> with a list of hyperlinks to create a horizontal menu.</p>\r\n<h2>\r\n\tWeb Layout Example</h2>\r\n<p>\r\n\tIt is also common to do entire web layouts using the <code>float</code> property:</p>\r\n<pre>\r\n<code>.header, .footer {\r\n  background-color: grey;\r\n  color: white;\r\n  padding: 15px;\r\n}\r\n\r\n.column {\r\n  float: left;\r\n  padding: 15px;\r\n}\r\n\r\n.clearfix::after {\r\n  content: &quot;&quot;;\r\n  clear: both;\r\n  display: table;\r\n}\r\n\r\n.menu {\r\n  width: 25%;\r\n}\r\n\r\n.content {\r\n  width: 75%;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_float2\" target=\"_blank\">An image with border and margins that floats to the right in a paragraph</a><br />\r\n\tLet an image float to the right in a paragraph. Add border and margins to the image.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_float3\" target=\"_blank\">An image with a caption that floats to the right</a><br />\r\n\tLet an image with a caption float to the right.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_float4\" target=\"_blank\">Let the first letter of a paragraph float to the left</a><br />\r\n\tLet the first letter of a paragraph float to the left and style the letter.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_layout_webpage\" target=\"_blank\">Creating a website with float</a><br />\r\n\tUse float to create a homepage with a navbar, header, footer, left content and main content.</p>\r\n<hr />\r\n<h2>\r\n\tAll CSS Float Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbox-sizing</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines how the width and height of an element are calculated: should they include padding and borders, or not</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tclear</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies what elements can float beside the cleared element and on which side</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfloat</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how an element should float</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toverflow</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies what happens if content overflows an element&#39;s box</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toverflow-x</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies what to do with the left/right edges of the content if it overflows the element&#39;s content area</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\toverflow-y</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies what to do with the top/bottom edges of the content if it overflows the element&#39;s content area</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "display: inline-block": {
            "content": "<h2>\r\n\tThe display: inline-block Value</h2>\r\n<p>\r\n\tCompared to <code>display: inline</code>, the major difference is that <code>display: inline-block</code> allows to set a width and height on the element.</p>\r\n<p>\r\n\tAlso, with <code> display: inline-block</code>, the top and bottom margins/paddings are respected, but with <code>display: inline</code> they are not.</p>\r\n<p>\r\n\tCompared to <code>display: block</code>, the major difference is that <code>display: inline-block</code> does not add a line-break after the element, so the element can sit next to other elements.</p>\r\n<p>\r\n\tThe following example shows the different behavior of <code>display: inline</code>, <code>display: inline-block</code> and <code>display: block</code>:</p>\r\n<pre>\r\n<code>span.a {\r\n  display: inline; /* the default for span */\r\n  width: 100px;\r\n  height: 100px;\r\n  padding: 5px;\r\n  border: 1px solid blue; \r\n  background-color: yellow; \r\n}\r\n\r\nspan.b {\r\n  display: inline-block;\r\n  width: 100px;\r\n  height: 100px;\r\n  padding: 5px;\r\n  border: 1px solid blue; \r\n  background-color: yellow; \r\n}\r\n\r\nspan.c {\r\n  display: block;\r\n  width: 100px;\r\n  height: 100px;\r\n  padding: 5px;\r\n  border: 1px solid blue; \r\n  background-color: yellow; \r\n}\r\n</code></pre>\r\n<h2>\r\n\tUsing inline-block to Create Navigation Links</h2>\r\n<p>\r\n\tOne common use for <code>display: inline-block</code> is to display list items horizontally instead of vertically. The following example creates horizontal navigation links:</p>\r\n<pre>\r\n<code>.nav {\r\n  background-color: yellow; \r\n  list-style-type: none;\r\n  text-align: center; \r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.nav li {\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  padding: 20px;\r\n}</code></pre>"
          }
        },
        {
          "Horizontal & Vertical Align": {
            "content": "<h2>\r\n\tCenter Align Elements</h2>\r\n<p>\r\n\tTo horizontally center a block element (like &lt;div&gt;), use <code>margin: auto;</code></p>\r\n<p>\r\n\tSetting the width of the element will prevent it from stretching out to the edges of its container.</p>\r\n<p>\r\n\tThe element will then take up the specified width, and the remaining space will be split equally between the two margins:</p>\r\n<pre>\r\n<code>.center {\r\n  margin: auto;\r\n  width: 50%;\r\n  border: 3px solid green;\r\n  padding: 10px;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Center aligning has no effect if the <code>width</code> property is not set (or set to 100%).</p>\r\n</blockquote>\r\n<h2>\r\n\tCenter Align Text</h2>\r\n<p>\r\n\tTo just center the text inside an element, use <code>text-align: center;</code></p>\r\n<pre>\r\n<code>.center {\r\n  text-align: center;\r\n  border: 3px solid green;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip:<span>&nbsp;For more examples on how to align text, see the&nbsp;</span><a href=\"https://www.w3schools.com/css/css_text.asp\" target=\"_blank\">CSS Text</a><span>&nbsp;chapter.</span></p>\r\n</blockquote>\r\n<h2>\r\n\tCenter an Image</h2>\r\n<p>\r\n\tTo center an image, set left and right margin to <code>auto</code> and make it into a <code>block</code> element:</p>\r\n<pre>\r\n<code>img {\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 40%;\r\n}</code></pre>\r\n<h2>\r\n\tLeft and Right Align - Using position</h2>\r\n<p>\r\n\tOne method for aligning elements is to use <code>position: absolute;</code>:</p>\r\n<pre>\r\n<code>.right {\r\n  position: absolute;\r\n  right: 0px;\r\n  width: 300px;\r\n  border: 3px solid #73AD21;\r\n  padding: 10px;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Absolute positioned elements are removed from the normal flow, and can overlap elements.</p>\r\n</blockquote>\r\n<h2>\r\n\tLeft and Right Align - Using float</h2>\r\n<p>\r\n\tAnother method for aligning elements is to use the <code>float</code> property:</p>\r\n<pre>\r\n<code>.right {\r\n  float: right;\r\n  width: 300px;\r\n  border: 3px solid #73AD21;\r\n  padding: 10px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tNote: If an element is taller than the element containing it, and it is floated, it will overflow outside of its container. You can use the &quot;clearfix&quot; hack to fix this (see example below).</p>\r\n<h2>\r\n\tThe clearfix Hack</h2>\r\n<p>\r\n\tThen we can add <code>overflow: auto;</code> to the containing element to fix this problem:</p>\r\n<pre>\r\n<code>.clearfix {\r\n  overflow: auto;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCenter Vertically - Using padding</h2>\r\n<p>\r\n\tThere are many ways to center an element vertically in CSS. A simple solution is to use top and bottom <code>padding</code>:</p>\r\n<pre>\r\n<code>.center {\r\n  padding: 70px 0;\r\n  border: 3px solid green;\r\n}\r\n</code></pre>\r\n<p>\r\n\tTo center both vertically and horizontally, use <code>padding</code> and <code>text-align: center</code>:</p>\r\n<pre>\r\n<code>.center {\r\n  padding: 70px 0;\r\n  border: 3px solid green;\r\n  text-align: center;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCenter Vertically - Using line-height</h2>\r\n<p>\r\n\tAnother trick is to use the <code>line-height</code> property with a value that is equal to the <code>height</code> property.</p>\r\n<pre>\r\n<code>.center {\r\n  line-height: 200px;\r\n  height: 200px;\r\n  border: 3px solid green;\r\n  text-align: center;\r\n}\r\n\r\n/* If the text has multiple lines, add the following: */\r\n.center p {\r\n  line-height: 1.5;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCenter Vertically - Using position &amp; transform</h2>\r\n<p>\r\n\tIf <code>padding</code> and <code>line-height</code> are not options, a third solution is to use positioning and the <code>transform</code> property:</p>\r\n<pre>\r\n<code>.center { \r\n  height: 200px;\r\n  position: relative;\r\n  border: 3px solid green; \r\n}\r\n\r\n.center p {\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n</code></pre>\r\n<p>\r\n\tTip: You will learn more about the transform property in our <a href=\"css3_2dtransforms.asp\" target=\"_blank\">2D Transforms Chapter</a>.</p>"
          }
        },
        {
          "Combinators": {
            "content": "<h2>\r\n\tCSS Combinators</h2>\r\n<p>\r\n\tA combinator is something that explains the relationship between the selectors.</p>\r\n<p>\r\n\tA CSS selector can contain more than one simple selector. Between the simple selectors, we can include a combinator.</p>\r\n<p>\r\n\tThere are four different combinators in CSS:</p>\r\n<ul>\r\n\t<li>\r\n\t\tdescendant selector (space)</li>\r\n\t<li>\r\n\t\tchild selector (&gt;)</li>\r\n\t<li>\r\n\t\tadjacent sibling selector (+)</li>\r\n\t<li>\r\n\t\tgeneral sibling selector (~)</li>\r\n</ul>\r\n<hr />\r\n<h2>\r\n\tDescendant Selector</h2>\r\n<p>\r\n\tThe descendant selector matches all elements that are descendants of a specified element.</p>\r\n<p>\r\n\tThe following example selects all &lt;p&gt; elements inside &lt;div&gt; elements:&nbsp;</p>\r\n<pre>\r\n<code>div p {\r\n  background-color: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tChild Selector</h2>\r\n<p>\r\n\tThe child selector selects all elements that are the immediate children of a specified element.</p>\r\n<p>\r\n\tThe following example selects all &lt;p&gt; elements that are immediate children of a &lt;div&gt; element:</p>\r\n<pre>\r\n<code>div &gt; p {\r\n  background-color: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tAdjacent Sibling Selector</h2>\r\n<p>\r\n\tThe adjacent sibling selector selects all elements that are the adjacent siblings of a specified element.</p>\r\n<p>\r\n\tSibling elements must have the same parent element, and &quot;adjacent&quot; means &quot;immediately following&quot;.</p>\r\n<p>\r\n\tThe following example selects all &lt;p&gt; elements that are placed immediately after &lt;div&gt; elements:</p>\r\n<pre>\r\n<code>div + p {\r\n  background-color: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tGeneral Sibling Selector</h2>\r\n<p>\r\n\tThe general sibling selector selects all elements that are siblings of a specified element.</p>\r\n<p>\r\n\tThe following example selects all &lt;p&gt; elements that are siblings of &lt;div&gt; elements:&nbsp;</p>\r\n<pre>\r\n<code>div ~ p {\r\n  background-color: yellow;\r\n}</code></pre>"
          }
        },
        {
          "Pseudo-classes": {
            "content": "<h2>\r\n\tWhat are Pseudo-classes?</h2>\r\n<p>\r\n\tA pseudo-class is used to define a special state of an element.</p>\r\n<p>\r\n\tFor example, it can be used to:</p>\r\n<ul>\r\n\t<li>\r\n\t\tStyle an element when a user mouses over it</li>\r\n\t<li>\r\n\t\tStyle visited and unvisited links differently</li>\r\n\t<li>\r\n\t\tStyle an element when it gets focus</li>\r\n</ul>\r\n<h2>\r\n\tSyntax</h2>\r\n<p>\r\n\tThe syntax of pseudo-classes:</p>\r\n<pre>\r\n<code>selector:pseudo-class {\r\n  property:value;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tAnchor Pseudo-classes</h2>\r\n<p>\r\n\tLinks can be displayed in different ways:</p>\r\n<pre>\r\n<code>/* unvisited link */\r\na:link {\r\n  color: #FF0000;\r\n}\r\n\r\n/* visited link */\r\na:visited {\r\n  color: #00FF00;\r\n}\r\n\r\n/* mouse over link */\r\na:hover {\r\n  color: #FF00FF;\r\n}\r\n\r\n/* selected link */\r\na:active {\r\n  color: #0000FF;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: <code>a:hover</code> MUST come after <code>a:link</code> and <code>a:visited</code> in the CSS definition in order to be effective! <code>a:active</code> MUST come after <code>a:hover</code> in the CSS definition in order to be effective! Pseudo-class names are not case-sensitive.</p>\r\n</blockquote>\r\n<h2>\r\n\tPseudo-classes and CSS Classes</h2>\r\n<p>\r\n\tPseudo-classes can be combined with CSS classes:</p>\r\n<p>\r\n\tWhen you hover over the link in the example, it will change color:</p>\r\n<pre>\r\n<code>a.highlight:hover {\r\n  color: #ff0000;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tHover on &lt;div&gt;</h2>\r\n<p>\r\n\tAn example of using the <code>:hover</code> pseudo-class on a &lt;div&gt; element:</p>\r\n<pre>\r\n<code>div:hover {\r\n  background-color: blue;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tSimple Tooltip Hover</h2>\r\n<p>\r\n\tHover over a &lt;div&gt; element to show a &lt;p&gt; element (like a tooltip):</p>\r\n<pre>\r\n<code>p {\r\n  display: none;\r\n  background-color: yellow;\r\n  padding: 20px;\r\n}\r\n\r\ndiv:hover p {\r\n  display: block;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS - The :first-child Pseudo-class</h2>\r\n<p>\r\n\tThe <code>:first-child</code> pseudo-class matches a specified element that is the first child of another element.</p>\r\n<h2>\r\n\tMatch the first &lt;p&gt; element</h2>\r\n<p>\r\n\tIn the following example, the selector matches any &lt;p&gt; element that is the first child of any element:</p>\r\n<pre>\r\n<code>p:first-child {\r\n  color: blue;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMatch the first &lt;i&gt; element in all &lt;p&gt; elements</h2>\r\n<p>\r\n\tIn the following example, the selector matches the first &lt;i&gt; element in all &lt;p&gt; elements:</p>\r\n<pre>\r\n<code>p i:first-child {\r\n  color: blue;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMatch all &lt;i&gt; elements in all first child &lt;p&gt; elements</h2>\r\n<p>\r\n\tIn the following example, the selector matches all &lt;i&gt; elements in &lt;p&gt; elements that are the first child of another element:</p>\r\n<pre>\r\n<code>p:first-child i {\r\n  color: blue;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS - The :lang Pseudo-class</h2>\r\n<p>\r\n\tThe <code>:lang</code> pseudo-class allows you to define special rules for different languages.</p>\r\n<p>\r\n\tIn the example below, <code>:lang</code> defines the quotation marks for &lt;q&gt; elements with lang=&quot;no&quot;:</p>\r\n<pre>\r\n<code>&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;style&gt;\r\nq:lang(no) {\r\n  quotes: &quot;~&quot; &quot;~&quot;;\r\n}\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;p&gt;Some text &lt;q lang=&quot;no&quot;&gt;A quote in a paragraph&lt;/q&gt; Some text.&lt;/p&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\r\n<h2>\r\n\tMore Examples</h2>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_link2\" target=\"_blank\">Add different styles to hyperlinks</a><br />\r\n\tThis example demonstrates how to add other styles to hyperlinks.</p>\r\n<p>\r\n\t<a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_link_focus\" target=\"_blank\">Use of :focus</a><br />\r\n\tThis example demonstrates how to use the :focus pseudo-class.</p>\r\n<h2>\r\n\tAll CSS Pseudo Classes</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tSelector</th>\r\n\t\t\t<th>\r\n\t\t\t\tExample</th>\r\n\t\t\t<th>\r\n\t\t\t\tExample description</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:active</td>\r\n\t\t\t<td>\r\n\t\t\t\ta:active</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the active link</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:checked</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:checked</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every checked &lt;input&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:disabled</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:disabled</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every disabled &lt;input&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:empty</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:empty</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that has no children</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:enabled</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:enabled</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every enabled &lt;input&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:first-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:first-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; elements that is the first child of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:first-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:first-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the first &lt;p&gt; element of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:focus</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:focus</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the &lt;input&gt; element that has focus</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:hover</td>\r\n\t\t\t<td>\r\n\t\t\t\ta:hover</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects links on mouse over</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:in-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:in-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with a value within a specified range</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:invalid</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:invalid</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects all &lt;input&gt; elements with an invalid value</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:lang(language)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:lang(it)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element with a lang attribute value starting with &quot;it&quot;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:last-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:last-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; elements that is the last child of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:last-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:last-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the last &lt;p&gt; element of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:link</td>\r\n\t\t\t<td>\r\n\t\t\t\ta:link</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects all unvisited links</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:not(selector)</td>\r\n\t\t\t<td>\r\n\t\t\t\t:not(p)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every element that is not a &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:nth-child(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:nth-child(2)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the second child of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:nth-last-child(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:nth-last-child(2)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the second child of its parent, counting from the last child</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:nth-last-of-type(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:nth-last-of-type(2)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the second &lt;p&gt; element of its parent, counting from the last child</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:nth-of-type(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:nth-of-type(2)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the second &lt;p&gt; element of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:only-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:only-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the only &lt;p&gt; element of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:only-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:only-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the only child of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:optional</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:optional</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with no &quot;required&quot; attribute</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:out-of-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:out-of-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with a value outside a specified range</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:read-only</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:read-only</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with a &quot;readonly&quot; attribute specified</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:read-write</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:read-write</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with no &quot;readonly&quot; attribute</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:required</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:required</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with a &quot;required&quot; attribute specified</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:root</td>\r\n\t\t\t<td>\r\n\t\t\t\troot</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the document&#39;s root element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:target</td>\r\n\t\t\t<td>\r\n\t\t\t\t#news:target</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the current active #news element (clicked on a URL containing that anchor name)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:valid</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:valid</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects all &lt;input&gt; elements with a valid value</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:visited</td>\r\n\t\t\t<td>\r\n\t\t\t\ta:visited</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects all visited links</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tAll CSS Pseudo Elements</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tSelector</th>\r\n\t\t\t<th>\r\n\t\t\t\tExample</th>\r\n\t\t\t<th>\r\n\t\t\t\tExample description</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::after</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::after</td>\r\n\t\t\t<td>\r\n\t\t\t\tInsert content after every &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::before</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::before</td>\r\n\t\t\t<td>\r\n\t\t\t\tInsert content before every &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::first-letter</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::first-letter</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the first letter of every &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::first-line</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::first-line</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the first line of every &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::selection</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::selection</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the portion of an element that is selected by a user</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Pseudo-elements": {
            "content": "<h2>\r\n\tWhat are Pseudo-Elements?</h2>\r\n<p>\r\n\tA CSS pseudo-element is used to style specified parts of an element.</p>\r\n<p>\r\n\tFor example, it can be used to:</p>\r\n<ul>\r\n\t<li>\r\n\t\tStyle the first letter, or line, of an element</li>\r\n\t<li>\r\n\t\tInsert content before, or after, the content of an element</li>\r\n</ul>\r\n<h2>\r\n\tSyntax</h2>\r\n<p>\r\n\tThe syntax of pseudo-elements:</p>\r\n<pre>\r\n<code>selector::pseudo-element {\r\n  property:value;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNotice the double colon notation - <code>::first-line</code> versus <code>:first-line</code><br />\r\n\t\t<br />\r\n\t\tThe double colon replaced the single-colon notation for pseudo-elements in CSS3. This was an attempt from W3C to distinguish between pseudo-classes and pseudo-elements.<br />\r\n\t\t<br />\r\n\t\tThe single-colon syntax was used for both pseudo-classes and pseudo-elements in CSS2 and CSS1.<br />\r\n\t\t<br />\r\n\t\tFor backward compatibility, the single-colon syntax is acceptable for CSS2 and CSS1 pseudo-elements.</p>\r\n</blockquote>\r\n<h2>\r\n\tThe ::first-line Pseudo-element</h2>\r\n<p>\r\n\tThe <code>::first-line</code> pseudo-element is used to add a special style to the first line of a text.</p>\r\n<p>\r\n\tThe following example formats the first line of the text in all &lt;p&gt; elements:</p>\r\n<pre>\r\n<code>p::first-line {\r\n  color: #ff0000;\r\n  font-variant: small-caps;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The <code>::first-line</code> pseudo-element can only be applied to block-level elements.</p>\r\n</blockquote>\r\n<p>\r\n\tThe following properties apply to the <code>::first-line</code> pseudo-element:</p>\r\n<ul>\r\n\t<li>\r\n\t\tfont properties</li>\r\n\t<li>\r\n\t\tcolor properties</li>\r\n\t<li>\r\n\t\tbackground properties</li>\r\n\t<li>\r\n\t\tword-spacing</li>\r\n\t<li>\r\n\t\tletter-spacing</li>\r\n\t<li>\r\n\t\ttext-decoration</li>\r\n\t<li>\r\n\t\tvertical-align</li>\r\n\t<li>\r\n\t\ttext-transform</li>\r\n\t<li>\r\n\t\tline-height</li>\r\n\t<li>\r\n\t\tclear</li>\r\n</ul>\r\n<h2>\r\n\tThe ::first-letter Pseudo-element</h2>\r\n<p>\r\n\tThe <code>::first-letter</code> pseudo-element is used to add a special style to the first letter of a text.</p>\r\n<p>\r\n\tThe following example formats the first letter of the text in all &lt;p&gt; elements:&nbsp;</p>\r\n<pre>\r\n<code>p::first-letter {\r\n  color: #ff0000;\r\n  font-size: xx-large;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The <code>::first-letter</code> pseudo-element can only be applied to block-level elements.</p>\r\n</blockquote>\r\n<p>\r\n\tThe following properties apply to the ::first-letter pseudo- element:&nbsp;</p>\r\n<ul>\r\n\t<li>\r\n\t\tfont properties</li>\r\n\t<li>\r\n\t\tcolor properties&nbsp;</li>\r\n\t<li>\r\n\t\tbackground properties</li>\r\n\t<li>\r\n\t\tmargin properties</li>\r\n\t<li>\r\n\t\tpadding properties</li>\r\n\t<li>\r\n\t\tborder properties</li>\r\n\t<li>\r\n\t\ttext-decoration</li>\r\n\t<li>\r\n\t\tvertical-align (only if &quot;float&quot; is &quot;none&quot;)</li>\r\n\t<li>\r\n\t\ttext-transform</li>\r\n\t<li>\r\n\t\tline-height</li>\r\n\t<li>\r\n\t\tfloat</li>\r\n\t<li>\r\n\t\tclear</li>\r\n</ul>\r\n<h2>\r\n\tPseudo-elements and CSS Classes</h2>\r\n<p>\r\n\tPseudo-elements can be combined with CSS classes:&nbsp;</p>\r\n<pre>\r\n<code>p.intro::first-letter {\r\n  color: #ff0000;\r\n  font-size:200%;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe example above will display the first letter of paragraphs with class=&quot;intro&quot;, in red and in a larger size.</p>\r\n<h2>\r\n\tMultiple Pseudo-elements</h2>\r\n<p>\r\n\tSeveral pseudo-elements can also be combined.</p>\r\n<p>\r\n\tIn the following example, the first letter of a paragraph will be red, in an xx-large font size. The rest of the first line will be blue, and in small-caps. The rest of the paragraph will be the default font size and color:</p>\r\n<pre>\r\n<code>p::first-letter {\r\n  color: #ff0000;\r\n  font-size: xx-large;\r\n}\r\n\r\np::first-line {\r\n  color: #0000ff;\r\n  font-variant: small-caps;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS - The ::before Pseudo-element</h2>\r\n<p>\r\n\tThe <code>::before</code> pseudo-element can be used to insert some content before the content of an element.</p>\r\n<p>\r\n\tThe following example inserts an image before the content of each &lt;h1&gt; element:</p>\r\n<pre>\r\n<code>h1::before {\r\n  content: url(smiley.gif);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS - The ::after Pseudo-element</h2>\r\n<p>\r\n\tThe <code>::after</code> pseudo-element can be used to insert some content after the content of an element.</p>\r\n<p>\r\n\tThe following example inserts an image after the content of each &lt;h1&gt; element:</p>\r\n<pre>\r\n<code>h1::after {\r\n  content: url(smiley.gif);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS - The ::selection Pseudo-element</h2>\r\n<p>\r\n\tThe <code>::selection</code> pseudo-element matches the portion of an element that is selected by a user.</p>\r\n<p>\r\n\tThe following CSS properties can be applied to <code>::selection</code>: <code>color</code>, <code>background</code>, <code>cursor</code>, and <code>outline</code>.</p>\r\n<p>\r\n\tThe following example makes the selected text red on a yellow background:</p>\r\n<pre>\r\n<code>::selection {\r\n  color: red; \r\n  background: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tAll CSS Pseudo Elements</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tSelector</th>\r\n\t\t\t<th>\r\n\t\t\t\tExample</th>\r\n\t\t\t<th>\r\n\t\t\t\tExample description</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::after</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::after</td>\r\n\t\t\t<td>\r\n\t\t\t\tInsert something after the content of each &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::before</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::before</td>\r\n\t\t\t<td>\r\n\t\t\t\tInsert something before the content of each &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::first-letter</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::first-letter</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the first letter of each &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::first-line</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::first-line</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the first line of each &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t::selection</td>\r\n\t\t\t<td>\r\n\t\t\t\tp::selection</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the portion of an element that is selected by a user</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tAll CSS Pseudo Classes</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tSelector</th>\r\n\t\t\t<th>\r\n\t\t\t\tExample</th>\r\n\t\t\t<th>\r\n\t\t\t\tExample description</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:active</td>\r\n\t\t\t<td>\r\n\t\t\t\ta:active</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the active link</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:checked</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:checked</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every checked &lt;input&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:disabled</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:disabled</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every disabled &lt;input&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:empty</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:empty</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that has no children</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:enabled</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:enabled</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every enabled &lt;input&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:first-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:first-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; elements that is the first child of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:first-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:first-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the first &lt;p&gt; element of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:focus</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:focus</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the &lt;input&gt; element that has focus</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:hover</td>\r\n\t\t\t<td>\r\n\t\t\t\ta:hover</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects links on mouse over</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:in-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:in-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with a value within a specified range</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:invalid</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:invalid</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects all &lt;input&gt; elements with an invalid value</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:lang(language)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:lang(it)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element with a lang attribute value starting with &quot;it&quot;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:last-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:last-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; elements that is the last child of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:last-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:last-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the last &lt;p&gt; element of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:link</td>\r\n\t\t\t<td>\r\n\t\t\t\ta:link</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects all unvisited links</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:not(selector)</td>\r\n\t\t\t<td>\r\n\t\t\t\t:not(p)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every element that is not a &lt;p&gt; element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:nth-child(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:nth-child(2)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the second child of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:nth-last-child(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:nth-last-child(2)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the second child of its parent, counting from the last child</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:nth-last-of-type(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:nth-last-of-type(2)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the second &lt;p&gt; element of its parent, counting from the last child</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:nth-of-type(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:nth-of-type(2)</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the second &lt;p&gt; element of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:only-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:only-of-type</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the only &lt;p&gt; element of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:only-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tp:only-child</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects every &lt;p&gt; element that is the only child of its parent</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:optional</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:optional</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with no &quot;required&quot; attribute</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:out-of-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:out-of-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with a value outside a specified range</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:read-only</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:read-only</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with a &quot;readonly&quot; attribute specified</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:read-write</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:read-write</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with no &quot;readonly&quot; attribute</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:required</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:required</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects &lt;input&gt; elements with a &quot;required&quot; attribute specified</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:root</td>\r\n\t\t\t<td>\r\n\t\t\t\troot</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the document&#39;s root element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:target</td>\r\n\t\t\t<td>\r\n\t\t\t\t#news:target</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects the current active #news element (clicked on a URL containing that anchor name)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:valid</td>\r\n\t\t\t<td>\r\n\t\t\t\tinput:valid</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects all &lt;input&gt; elements with a valid value</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t:visited</td>\r\n\t\t\t<td>\r\n\t\t\t\ta:visited</td>\r\n\t\t\t<td>\r\n\t\t\t\tSelects all visited links</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Opacity / Transparency": {
            "content": "<p>\r\n\tThe <code>opacity</code> property specifies the opacity/transparency of an element.</p>\r\n<h2>\r\n\tTransparent Image</h2>\r\n<p>\r\n\tThe <code>opacity</code> property can take a value from 0.0 - 1.0. The lower value, the more transparent.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: IE8 and earlier use <code>filter:alpha(opacity=x)</code>. The x can take a value from 0 - 100. A lower value makes the element more transparent.</p>\r\n</blockquote>\r\n<pre>\r\n<code>img {\r\n  opacity: 0.5;\r\n  filter: alpha(opacity=50); /* For IE8 and earlier */\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTransparent Hover Effect</h2>\r\n<p>\r\n\tThe <code>opacity</code> property is often used together with the <code>:hover</code> selector to change the opacity on mouse-over:</p>\r\n<pre>\r\n<code>img {\r\n  opacity: 0.5;\r\n  filter: alpha(opacity=50); /* For IE8 and earlier */\r\n}\r\n\r\nimg:hover {\r\n  opacity: 1.0;\r\n  filter: alpha(opacity=100); /* For IE8 and earlier */\r\n}\r\n</code></pre>\r\n<h3>\r\n\tExample explained</h3>\r\n<p>\r\n\tThe first CSS block is similar to the code in Example 1. In addition, we have added what should happen when a user hovers over one of the images. In this case we want the image to NOT be transparent when the user hovers over it. The CSS for this is <code>opacity:1;</code>.</p>\r\n<p>\r\n\tWhen the mouse pointer moves away from the image, the image will be transparent again.</p>\r\n<p>\r\n\tAn example of reversed hover effect:</p>\r\n<pre>\r\n<code>img:hover {\r\n  opacity: 0.5;\r\n  filter: alpha(opacity=50); /* For IE8 and earlier */\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTransparent Box</h2>\r\n<p>\r\n\tWhen using the <code>opacity</code> property to add transparency to the background of an element, all of its child elements inherit the same transparency. This can make the text inside a fully transparent element hard to read:</p>\r\n<pre>\r\n<code>div {\r\n  opacity: 0.3;\r\n  filter: alpha(opacity=30); /* For IE8 and earlier */\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTransparency using RGBA</h2>\r\n<p>\r\n\tIf you do not want to apply opacity to child elements, like in our example above, use RGBA color values. The following example sets the opacity for the background color and not the text.</p>\r\n<p>\r\n\tYou learned from our <a href=\"css_colors.asp\" target=\"_blank\">CSS Colors Chapter</a>, that you can use RGB as a color value. In addition to RGB, you can use an RGB color value with an alpha channel (RGBA) - which specifies the opacity for a color.</p>\r\n<p>\r\n\tAn RGBA color value is specified with: rgba(red, green, blue, alpha). The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque).</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: You will learn more about RGBA Colors in our <a href=\"css3_colors.asp\" target=\"_blank\">CSS Colors Chapter</a>.</p>\r\n</blockquote>\r\n<pre>\r\n<code>div {\r\n  background: rgba(76, 175, 80, 0.3) /* Green background with 30% opacity */\r\n}\r\n</code></pre>\r\n<h2>\r\n\tText in Transparent Box</h2>\r\n<pre>\r\n<code>&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;style&gt;\r\ndiv.background {\r\n  background: url(klematis.jpg) repeat;\r\n  border: 2px solid black;\r\n}\r\n\r\ndiv.transbox {\r\n  margin: 30px;\r\n  background-color: #ffffff;\r\n  border: 1px solid black;\r\n  opacity: 0.6;\r\n  filter: alpha(opacity=60); /* For IE8 and earlier */\r\n}\r\n\r\ndiv.transbox p {\r\n  margin: 5%;\r\n  font-weight: bold;\r\n  color: #000000;\r\n}\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;div class=&quot;background&quot;&gt;\r\n  &lt;div class=&quot;transbox&quot;&gt;\r\n    &lt;p&gt;This is some text that is placed in the transparent box.&lt;/p&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\r\n<p>\r\n\tFirst, we create a &lt;div&gt; element (class=&quot;background&quot;) with a background image, and a border. Then we create another &lt;div&gt; (class=&quot;transbox&quot;) inside the first &lt;div&gt;. The &lt;div class=&quot;transbox&quot;&gt; have a background color, and a border - the div is transparent. Inside the transparent &lt;div&gt;, we add some text inside a &lt;p&gt; element.</p>"
          }
        },
        {
          "Navigation Bar": {
            "content": "<h2>\r\n\tNavigation Bars</h2>\r\n<p>\r\n\tHaving easy-to-use navigation is important for any web site.</p>\r\n<p>\r\n\tWith CSS you can transform boring HTML menus into good-looking navigation bars.</p>\r\n<h2>\r\n\tNavigation Bar = List of Links</h2>\r\n<p>\r\n\tA navigation bar needs standard HTML as a base.</p>\r\n<p>\r\n\tIn our examples we will build the navigation bar from a standard HTML list.</p>\r\n<p>\r\n\tA navigation bar is basically a list of links, so using the &lt;ul&gt; and &lt;li&gt; elements makes perfect sense:</p>\r\n<pre>\r\n<code>&lt;ul&gt;\r\n  &lt;li&gt;&lt;a href=&quot;default.asp&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;\r\n  &lt;li&gt;&lt;a href=&quot;news.asp&quot;&gt;News&lt;/a&gt;&lt;/li&gt;\r\n  &lt;li&gt;&lt;a href=&quot;contact.asp&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;\r\n  &lt;li&gt;&lt;a href=&quot;about.asp&quot;&gt;About&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</code></pre>\r\n<p>\r\n\tNow let&#39;s remove the bullets and the margins and padding from the list:</p>\r\n<pre>\r\n<code>ul {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n</code></pre>\r\n<p>\r\n\tExample explained:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>list-style-type: none;</code> - Removes the bullets. A navigation bar does not need list markers</li>\r\n\t<li>\r\n\t\tSet <code>margin: 0;</code> and <code>padding: 0;</code> to remove browser default settings</li>\r\n</ul>\r\n<p>\r\n\tThe code in the example above is the standard code used in both vertical, and horizontal navigation bars.</p>\r\n<h2>\r\n\tVertical Navigation Bar</h2>\r\n<p>\r\n\tTo build a vertical navigation bar, you can style the &lt;a&gt; elements inside the list, in addition to the code above:</p>\r\n<pre>\r\n<code>li a {\r\n  display: block;\r\n  width: 60px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tExample explained:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>display: block;</code> - Displaying the links as block elements makes the whole link area clickable (not just the text), and it allows us to specify the width (and padding, margin, height, etc. if you want)</li>\r\n\t<li>\r\n\t\t<code>width: 60px;</code> - Block elements take up the full width available by default. We want to specify a 60 pixels width</li>\r\n</ul>\r\n<p>\r\n\tYou can also set the width of &lt;ul&gt;, and remove the width of &lt;a&gt;, as they will take up the full width available when displayed as block elements. This will produce the same result as our previous example:</p>\r\n<pre>\r\n<code>ul {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 60px;\r\n} \r\n\r\nli a {\r\n  display: block;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tVertical Navigation Bar Examples</h2>\r\n<p>\r\n\tCreate a basic vertical navigation bar with a gray background color and change the background color of the links when the user moves the mouse over them:</p>\r\n<pre>\r\n<code>ul {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 200px;\r\n  background-color: #f1f1f1;\r\n}\r\n\r\nli a {\r\n  display: block;\r\n  color: #000;\r\n  padding: 8px 16px;\r\n  text-decoration: none;\r\n}\r\n\r\n/* Change the link color on hover */\r\nli a:hover {\r\n  background-color: #555;\r\n  color: white;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tActive/Current Navigation Link</h3>\r\n<p>\r\n\tAdd an &quot;active&quot; class to the current link to let the user know which page he/she is on:</p>\r\n<pre>\r\n<code>.active {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tCenter Links &amp; Add Borders</h3>\r\n<p>\r\n\tAdd <code>text-align:center</code> to &lt;li&gt; or &lt;a&gt; to center the links.</p>\r\n<p>\r\n\tAdd the <code>border</code> property to &lt;ul&gt; add a border around the navbar. If you also want borders inside the navbar, add a <code>border-bottom</code> to all &lt;li&gt; elements, except for the last one:</p>\r\n<pre>\r\n<code>ul {\r\n  border: 1px solid #555;\r\n}\r\n\r\nli {\r\n  text-align: center;\r\n  border-bottom: 1px solid #555;\r\n}\r\n\r\nli:last-child {\r\n  border-bottom: none;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tFull-height Fixed Vertical Navbar</h3>\r\n<p>\r\n\tCreate a full-height, &quot;sticky&quot; side navigation:</p>\r\n<pre>\r\n<code>ul {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 25%;\r\n  background-color: #f1f1f1;\r\n  height: 100%; /* Full height */\r\n  position: fixed; /* Make it stick, even on scroll */\r\n  overflow: auto; /* Enable scrolling if the sidenav has too much content */\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: This example might not work properly on mobile devices.</p>\r\n</blockquote>\r\n<h2>\r\n\tHorizontal Navigation Bar</h2>\r\n<p>\r\n\tThere are two ways to create a horizontal navigation bar. Using inline or floating list items.</p>\r\n<h3>\r\n\tInline List Items</h3>\r\n<p>\r\n\tOne way to build a horizontal navigation bar is to specify the &lt;li&gt; elements as inline, in addition to the &quot;standard&quot; code above:</p>\r\n<pre>\r\n<code>li {\r\n  display: inline;\r\n}\r\n</code></pre>\r\n<p>\r\n\tExample explained:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>display: inline;</code> - By default, &lt;li&gt; elements are block elements. Here, we remove the line breaks before and after each list item, to display them on one line</li>\r\n</ul>\r\n<h3>\r\n\tFloating List Items</h3>\r\n<p>\r\n\tAnother way of creating a horizontal navigation bar is to float the &lt;li&gt; elements, and specify a layout for the navigation links:</p>\r\n<pre>\r\n<code>li {\r\n  float: left;\r\n}\r\n\r\na {\r\n  display: block;\r\n  padding: 8px;\r\n  background-color: #dddddd;\r\n}\r\n</code></pre>\r\n<p>\r\n\tExample explained:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>float: left;</code> - use float to get block elements to slide next to each other</li>\r\n\t<li>\r\n\t\t<code>display: block;</code> - Displaying the links as block elements makes the whole link area clickable (not just the text), and it allows us to specify padding (and height, width, margins, etc. if you want)</li>\r\n\t<li>\r\n\t\t<code>padding: 8px;</code> - Since block elements take up the full width available, they cannot float next to each other. Therefore, specify some padding to make them look good</li>\r\n\t<li>\r\n\t\t<code>background-color: #dddddd;</code> - Add a gray background-color to each a element</li>\r\n</ul>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Add the background-color to &lt;ul&gt; instead of each &lt;a&gt; element if you want a full-width background color:</p>\r\n</blockquote>\r\n<pre>\r\n<code>ul {\r\n  background-color: #dddddd;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tHorizontal Navigation Bar Examples</h2>\r\n<p>\r\n\tCreate a basic horizontal navigation bar with a dark background color and change the background color of the links when the user moves the mouse over them:</p>\r\n<pre>\r\n<code>ul {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  background-color: #333;\r\n}\r\n\r\nli {\r\n  float: left;\r\n}\r\n\r\nli a {\r\n  display: block;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 14px 16px;\r\n  text-decoration: none;\r\n}\r\n\r\n/* Change the link color to #111 (black) on hover */\r\nli a:hover {\r\n  background-color: #111;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tActive/Current Navigation Link</h3>\r\n<p>\r\n\tAdd an &quot;active&quot; class to the current link to let the user know which page he/she is on:</p>\r\n<pre>\r\n<code>.active {\r\n  background-color: #4CAF50;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tRight-Align Links</h3>\r\n<p>\r\n\tRight-align links by floating the list items to the right (<code>float:right;</code>):</p>\r\n<pre>\r\n<code>&lt;ul&gt;\r\n  &lt;li&gt;&lt;a href=&quot;#home&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;\r\n  &lt;li&gt;&lt;a href=&quot;#news&quot;&gt;News&lt;/a&gt;&lt;/li&gt;\r\n  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;\r\n  &lt;li style=&quot;float:right&quot;&gt;&lt;a class=&quot;active&quot; href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</code></pre>\r\n<h3>\r\n\tBorder Dividers</h3>\r\n<p>\r\n\tAdd the <code>border-right</code> property to &lt;li&gt; to create link dividers:</p>\r\n<pre>\r\n<code>/* Add a gray right border to all list items, except the last item (last-child) */\r\nli {\r\n  border-right: 1px solid #bbb;\r\n}\r\n\r\nli:last-child {\r\n  border-right: none;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tFixed Navigation Bar</h3>\r\n<p>\r\n\tMake the navigation bar stay at the top or the bottom of the page, even when the user scrolls the page:</p>\r\n<table style=\"width:100%; clear:both;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width:50%; padding-right:10px; vertical-align:top;\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tFixed Top</p>\r\n\t\t\t\t<pre>\r\n\t\t\t\t<code>ul {\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n}\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width:50%;padding-left:10px;vertical-align:top;\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tFixed Bottom</p>\r\n\t\t\t\t<pre>\r\n\t\t\t\t<code>ul {\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n}\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Fixed position might not work properly on mobile devices.</p>\r\n</blockquote>\r\n<h3>\r\n\tGray Horizontal Navbar</h3>\r\n<p>\r\n\tAn example of a gray horizontal navigation bar with a thin gray border:</p>\r\n<pre>\r\n<code>ul {\r\n  border: 1px solid #e7e7e7;\r\n  background-color: #f3f3f3;\r\n}\r\n\r\nli a {\r\n  color: #666;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tSticky Navbar</h3>\r\n<p>\r\n\tUse <code>position: sticky;</code> to &lt;li&gt; to create a sticky navbar.</p>\r\n<p>\r\n\tA sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it &quot;sticks&quot; in place (like position:fixed).</p>\r\n<pre>\r\n<code>ul {\r\n  position: -webkit-sticky; /* Safari */\r\n  position: sticky;\r\n  top: 0;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Internet Explorer, Edge 15 and earlier versions do not support sticky positioning. Safari requires a -webkit- prefix (see example above). You must also specify at least one of <code>top</code>, <code>right</code>, <code>bottom</code> or <code>left</code> for sticky positioning to work.</p>\r\n</blockquote>"
          }
        },
        {
          "Dropdowns": {
            "content": "<h2>\r\n\tBasic Dropdown</h2>\r\n<p>\r\n\tCreate a dropdown box that appears when the user moves the mouse over an element.</p>\r\n<pre>\r\n<code>&lt;style&gt;\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f9f9f9;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  padding: 12px 16px;\r\n  z-index: 1;\r\n}\r\n\r\n.dropdown:hover .dropdown-content {\r\n  display: block;\r\n}\r\n&lt;/style&gt;\r\n\r\n&lt;div class=&quot;dropdown&quot;&gt;\r\n  &lt;span&gt;Mouse over me&lt;/span&gt;\r\n  &lt;div class=&quot;dropdown-content&quot;&gt;\r\n    &lt;p&gt;Hello World!&lt;/p&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n</code></pre>\r\n<h3>\r\n\tExample Explained</h3>\r\n<p>\r\n\tHTML) Use any element to open the dropdown content, e.g. a &lt;span&gt;, or a &lt;button&gt; element.</p>\r\n<p>\r\n\tUse a container element (like &lt;div&gt;) to create the dropdown content and add whatever you want inside of it.</p>\r\n<p>\r\n\tWrap a &lt;div&gt; element around the elements to position the dropdown content correctly with CSS.</p>\r\n<p>\r\n\tCSS) The <code>.dropdown</code> class uses <code>position:relative</code>, which is needed when we want the dropdown content to be placed right below the dropdown button (using <code>position:absolute</code>).</p>\r\n<p>\r\n\tThe <code>.dropdown-content</code> class holds the actual dropdown content. It is hidden by default, and will be displayed on hover (see below). Note the <code>min-width</code> is set to 160px. Feel free to change this. Tip: If you want the width of the dropdown content to be as wide as the dropdown button, set the <code>width</code> to 100% (and <code>overflow:auto</code> to enable scroll on small screens).</p>\r\n<p>\r\n\tInstead of using a border, we have used the CSS <code>box-shadow</code> property to make the dropdown menu look like a &quot;card&quot;.</p>\r\n<p>\r\n\tThe <code>:hover</code> selector is used to show the dropdown menu when the user moves the mouse over the dropdown button.</p>\r\n<h2>\r\n\tDropdown Menu</h2>\r\n<p>\r\n\tCreate a dropdown menu that allows the user to choose an option from a list.</p>\r\n<p>\r\n\tThis example is similar to the previous one, except that we add links inside the dropdown box and style them to fit a styled dropdown button:</p>\r\n<pre>\r\n<code>&lt;style&gt;\r\n/* Style The Dropdown Button */\r\n.dropbtn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n/* The container &lt;div&gt; - needed to position the dropdown content */\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n/* Dropdown Content (Hidden by Default) */\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f9f9f9;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n}\r\n\r\n/* Links inside the dropdown */\r\n.dropdown-content a {\r\n  color: black;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  display: block;\r\n}\r\n\r\n/* Change color of dropdown links on hover */\r\n.dropdown-content a:hover {background-color: #f1f1f1}\r\n\r\n/* Show the dropdown menu on hover */\r\n.dropdown:hover .dropdown-content {\r\n  display: block;\r\n}\r\n\r\n/* Change the background color of the dropdown button when the dropdown content is shown */\r\n.dropdown:hover .dropbtn {\r\n  background-color: #3e8e41;\r\n}\r\n&lt;/style&gt;\r\n\r\n&lt;div class=&quot;dropdown&quot;&gt;\r\n  &lt;button class=&quot;dropbtn&quot;&gt;Dropdown&lt;/button&gt;\r\n  &lt;div class=&quot;dropdown-content&quot;&gt;\r\n    &lt;a href=&quot;#&quot;&gt;Link 1&lt;/a&gt;\r\n    &lt;a href=&quot;#&quot;&gt;Link 2&lt;/a&gt;\r\n    &lt;a href=&quot;#&quot;&gt;Link 3&lt;/a&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n</code></pre>\r\n<h2>\r\n\tRight-aligned Dropdown Content</h2>\r\n<p>\r\n\tIf you want the dropdown menu to go from right to left, instead of left to right, add <code>right: 0;</code></p>\r\n<pre>\r\n<code>.dropdown-content {\r\n  right: 0;\r\n}</code></pre>"
          }
        },
        {
          "Image Gallery": {
            "content": "<p>\r\n\tCSS can be used to create an image gallery.</p>\r\n<p>\r\n\tThe following image gallery is created with CSS:</p>\r\n<pre>\r\n<code>&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;style&gt;\r\ndiv.gallery {\r\n  margin: 5px;\r\n  border: 1px solid #ccc;\r\n  float: left;\r\n  width: 180px;\r\n}\r\n\r\ndiv.gallery:hover {\r\n  border: 1px solid #777;\r\n}\r\n\r\ndiv.gallery img {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\ndiv.desc {\r\n  padding: 15px;\r\n  text-align: center;\r\n}\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;div class=&quot;gallery&quot;&gt;\r\n  &lt;a target=&quot;_blank&quot; href=&quot;img_5terre.jpg&quot;&gt;\r\n    &lt;img src=&quot;img_5terre.jpg&quot; alt=&quot;Cinque Terre&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;\r\n  &lt;/a&gt;\r\n  &lt;div class=&quot;desc&quot;&gt;Add a description of the image here&lt;/div&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;div class=&quot;gallery&quot;&gt;\r\n  &lt;a target=&quot;_blank&quot; href=&quot;img_forest.jpg&quot;&gt;\r\n    &lt;img src=&quot;img_forest.jpg&quot; alt=&quot;Forest&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;\r\n  &lt;/a&gt;\r\n  &lt;div class=&quot;desc&quot;&gt;Add a description of the image here&lt;/div&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;div class=&quot;gallery&quot;&gt;\r\n  &lt;a target=&quot;_blank&quot; href=&quot;img_lights.jpg&quot;&gt;\r\n    &lt;img src=&quot;img_lights.jpg&quot; alt=&quot;Northern Lights&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;\r\n  &lt;/a&gt;\r\n  &lt;div class=&quot;desc&quot;&gt;Add a description of the image here&lt;/div&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;div class=&quot;gallery&quot;&gt;\r\n  &lt;a target=&quot;_blank&quot; href=&quot;img_mountains.jpg&quot;&gt;\r\n    &lt;img src=&quot;img_mountains.jpg&quot; alt=&quot;Mountains&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;\r\n  &lt;/a&gt;\r\n  &lt;div class=&quot;desc&quot;&gt;Add a description of the image here&lt;/div&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>"
          }
        },
        {
          "Image Sprites": {
            "content": "<h2>\r\n\tImage Sprites</h2>\r\n<p>\r\n\tAn image sprite is a collection of images put into a single image.</p>\r\n<p>\r\n\tA web page with many images can take a long time to load and generates multiple server requests.</p>\r\n<p>\r\n\tUsing image sprites will reduce the number of server requests and save bandwidth.</p>\r\n<h2>\r\n\tImage Sprites - Simple Example</h2>\r\n<p>\r\n\tInstead of using three separate images, we use this single image (&quot;img_navsprites.gif&quot;):</p>\r\n<p>\r\n\t[[ image(css-tutorial/img_navsprites.gif, center) ]]</p>\r\n<p>\r\n\tWith CSS, we can show just the part of the image we need.</p>\r\n<p>\r\n\tIn the following example the CSS specifies which part of the &quot;img_navsprites.gif&quot; image to show:</p>\r\n<pre>\r\n<code>#home {\r\n  width: 46px;\r\n  height: 44px;\r\n  background: url(img_navsprites.gif) 0 0;\r\n}\r\n</code></pre>\r\n<p>\r\n\tExample explained:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>&lt;img id=&quot;home&quot; src=&quot;img_trans.gif&quot;&gt;</code> - Only defines a small transparent image because the src attribute cannot be empty. The displayed image will be the background image we specify in CSS</li>\r\n\t<li>\r\n\t\t<code>width: 46px; height: 44px;</code> - Defines the portion of the image we want to use</li>\r\n\t<li>\r\n\t\t<code>background: url(img_navsprites.gif) 0 0;</code> - Defines the background image and its position (left 0px, top 0px)</li>\r\n</ul>\r\n<p>\r\n\tThis is the easiest way to use image sprites, now we want to expand it by using links and hover effects.</p>\r\n<h2>\r\n\tImage Sprites - Create a Navigation List</h2>\r\n<p>\r\n\tWe want to use the sprite image (&quot;img_navsprites.gif&quot;) to create a navigation list.</p>\r\n<p>\r\n\tWe will use an HTML list, because it can be a link and also supports a background image:</p>\r\n<pre>\r\n<code>#navlist {\r\n  position: relative;\r\n}\r\n\r\n#navlist li {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  position: absolute;\r\n  top: 0;\r\n}\r\n\r\n#navlist li, #navlist a {\r\n  height: 44px;\r\n  display: block;\r\n}\r\n\r\n#home {\r\n  left: 0px;\r\n  width: 46px;\r\n  background: url(&#39;img_navsprites.gif&#39;) 0 0;\r\n}\r\n\r\n#prev {\r\n  left: 63px;\r\n  width: 43px;\r\n  background: url(&#39;img_navsprites.gif&#39;) -47px 0;\r\n}\r\n\r\n#next {\r\n  left: 129px;\r\n  width: 43px;\r\n  background: url(&#39;img_navsprites.gif&#39;) -91px 0;\r\n}\r\n</code></pre>\r\n<p>\r\n\tExample explained:</p>\r\n<ul>\r\n\t<li>\r\n\t\t#navlist {position:relative;} - position is set to relative to allow absolute positioning inside it</li>\r\n\t<li>\r\n\t\t#navlist li {margin:0;padding:0;list-style:none;position:absolute;top:0;} - margin and padding are set to 0, list-style is removed, and all list items are absolute positioned</li>\r\n\t<li>\r\n\t\t#navlist li, #navlist a {height:44px;display:block;} - the height of all the images are 44px</li>\r\n</ul>\r\n<p>\r\n\tNow start to position and style for each specific part:</p>\r\n<ul>\r\n\t<li>\r\n\t\t#home {left:0px;width:46px;} - Positioned all the way to the left, and the width of the image is 46px</li>\r\n\t<li>\r\n\t\t#home {background:url(img_navsprites.gif) 0 0;} - Defines the background image and its position (left 0px, top 0px)</li>\r\n\t<li>\r\n\t\t#prev {left:63px;width:43px;} - Positioned 63px to the right (#home width 46px + some extra space between items), and the width is 43px.</li>\r\n\t<li>\r\n\t\t#prev {background:url(&#39;img_navsprites.gif&#39;) -47px 0;} - Defines the background image 47px to the right (#home width 46px + 1px line divider)</li>\r\n\t<li>\r\n\t\t#next {left:129px;width:43px;}- Positioned 129px to the right (start of #prev is 63px + #prev width 43px + extra space), and the width is 43px.</li>\r\n\t<li>\r\n\t\t#next {background:url(&#39;img_navsprites.gif&#39;) -91px 0;} - Defines the background image 91px to the right (#home width 46px + 1px line divider + #prev width 43px + 1px line divider )</li>\r\n</ul>\r\n<h2>\r\n\tImage Sprites - Hover Effect</h2>\r\n<p>\r\n\tNow we want to add a hover effect to our navigation list.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: The <code>:hover</code> selector can be used on all elements, not only on links.</p>\r\n</blockquote>\r\n<p>\r\n\tOur new image (&quot;img_navsprites_hover.gif&quot;) contains three navigation images and three images to use for hover effects:</p>\r\n<p>\r\n\t[[ image(css-tutorial/img_navsprites_hover.gif, center) ]]</p>\r\n<p>\r\n\tBecause this is one single image, and not six separate files, there will be no loading delay when a user hovers over the image.</p>\r\n<p>\r\n\tWe only add three lines of code to add the hover effect:</p>\r\n<pre>\r\n<code>#home a:hover {\r\n  background: url(&#39;img_navsprites_hover.gif&#39;) 0 -45px;\r\n}\r\n\r\n#prev a:hover {\r\n  background: url(&#39;img_navsprites_hover.gif&#39;) -47px -45px;\r\n}\r\n\r\n#next a:hover {\r\n  background: url(&#39;img_navsprites_hover.gif&#39;) -91px -45px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tExample explained:</p>\r\n<ul>\r\n\t<li>\r\n\t\t#home a:hover {background: transparent url(&#39;img_navsprites_hover.gif&#39;) 0 -45px;} - For all three hover images we specify the same background position, only 45px further down</li>\r\n</ul>"
          }
        },
        {
          "Attribute Selectors": {
            "content": "<h2>\r\n\tStyle HTML Elements With Specific Attributes</h2>\r\n<p>\r\n\tIt is possible to style HTML elements that have specific attributes or attribute values.</p>\r\n<h2>\r\n\tCSS [attribute] Selector</h2>\r\n<p>\r\n\tThe <code>[attribute]</code> selector is used to select elements with a specified attribute.</p>\r\n<p>\r\n\tThe following example selects all &lt;a&gt; elements with a target attribute:</p>\r\n<pre>\r\n<code>a[target] {\r\n  background-color: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS [attribute=&quot;value&quot;] Selector</h2>\r\n<p>\r\n\tThe <code>[attribute=&quot;value&quot;]</code> selector is used to select elements with a specified attribute and value.</p>\r\n<p>\r\n\tThe following example selects all &lt;a&gt; elements with a target=&quot;_blank&quot; attribute:</p>\r\n<pre>\r\n<code>a[target=&quot;_blank&quot;] { \r\n  background-color: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS [attribute~=&quot;value&quot;] Selector</h2>\r\n<p>\r\n\tThe <code>[attribute~=&quot;value&quot;]</code> selector is used to select elements with an attribute value containing a specified word.</p>\r\n<p>\r\n\tThe following example selects all elements with a title attribute that contains a space-separated list of words, one of which is &quot;flower&quot;:</p>\r\n<pre>\r\n<code>[title~=&quot;flower&quot;] {\r\n  border: 5px solid yellow;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe example above will match elements with title=&quot;flower&quot;, title=&quot;summer flower&quot;, and title=&quot;flower new&quot;, but not title=&quot;my-flower&quot; or title=&quot;flowers&quot;.</p>\r\n<h2>\r\n\tCSS [attribute|=&quot;value&quot;] Selector</h2>\r\n<p>\r\n\tThe <code>[attribute|=&quot;value&quot;]</code> selector is used to select elements with the specified attribute starting with the specified value.</p>\r\n<p>\r\n\tThe following example selects all elements with a class attribute value that begins with &quot;top&quot;:</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The value has to be a whole word, either alone, like class=&quot;top&quot;, or followed by a hyphen( - ), like class=&quot;top-text&quot;!&nbsp;</p>\r\n</blockquote>\r\n<pre>\r\n<code>[class|=&quot;top&quot;] {\r\n  background: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS [attribute^=&quot;value&quot;] Selector</h2>\r\n<p>\r\n\tThe <code>[attribute^=&quot;value&quot;]</code> selector is used to select elements whose attribute value begins with a specified value.</p>\r\n<p>\r\n\tThe following example selects all elements with a class attribute value that begins with &quot;top&quot;:</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The value does not have to be a whole word!&nbsp;</p>\r\n</blockquote>\r\n<pre>\r\n<code>[class^=&quot;top&quot;] {\r\n  background: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS [attribute$=&quot;value&quot;] Selector</h2>\r\n<p>\r\n\tThe <code>[attribute$=&quot;value&quot;]</code> selector is used to select elements whose attribute value ends with a specified value.</p>\r\n<p>\r\n\tThe following example selects all elements with a class attribute value that ends with &quot;test&quot;:</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The value does not have to be a whole word!&nbsp;&nbsp;</p>\r\n</blockquote>\r\n<pre>\r\n<code>[class$=&quot;test&quot;] {\r\n  background: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS [attribute*=&quot;value&quot;] Selector</h2>\r\n<p>\r\n\tThe <code>[attribute*=&quot;value&quot;]</code> selector is used to select elements whose attribute value contains a specified value.</p>\r\n<p>\r\n\tThe following example selects all elements with a class attribute value that contains &quot;te&quot;:</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The value does not have to be a whole word!&nbsp;&nbsp;</p>\r\n</blockquote>\r\n<pre>\r\n<code>[class*=&quot;te&quot;] {\r\n  background: yellow;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tStyling Forms</h2>\r\n<p>\r\n\tThe attribute selectors can be useful for styling forms without class or ID:</p>\r\n<pre>\r\n<code>input[type=&quot;text&quot;] {\r\n  width: 150px;\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  background-color: yellow;\r\n}\r\n\r\ninput[type=&quot;button&quot;] {\r\n  width: 120px;\r\n  margin-left: 35px;\r\n  display: block;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Visit our <a href=\"css_form.asp\" target=\"_blank\">CSS Forms Tutorial</a> for more examples on how to style forms with CSS.</p>\r\n</blockquote>\r\n<h2>\r\n\tMore Examples of CSS Selectors</h2>\r\n<p>\r\n\tUse our <a href=\"/cssref/trysel.asp\" target=\"_blank\">CSS Selector Tester</a> to demonstrate the different selectors.</p>\r\n<p>\r\n\tFor a complete reference of all the CSS selectors, please go to our <a href=\"/cssref/css_selectors.asp\" target=\"_blank\">CSS Selectors Reference</a>.</p>"
          }
        },
        {
          "Forms": {
            "content": "<p>\r\n\tThe look of an HTML form can be greatly improved with CSS.</p>\r\n<h2>\r\n\tStyling Input Fields</h2>\r\n<p>\r\n\tUse the <code>width</code> property to determine the width of the input field:</p>\r\n<pre>\r\n<code>input {\r\n  width: 100%;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe example above applies to all &lt;input&gt; elements. If you only want to style a specific input type, you can use attribute selectors:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>input[type=text]</code> - will only select text fields</li>\r\n\t<li>\r\n\t\t<code>input[type=password]</code> - will only select password fields</li>\r\n\t<li>\r\n\t\t<code>input[type=number]</code> - will only select number fields</li>\r\n\t<li>\r\n\t\tetc..</li>\r\n</ul>\r\n<h2>\r\n\tPadded Inputs</h2>\r\n<p>\r\n\tUse the <code>padding</code> property to add space inside the text field.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: When you have many inputs after each other, you might also want to add some <code>margin</code>, to add more space outside of them:</p>\r\n</blockquote>\r\n<pre>\r\n<code>input[type=text] {\r\n  width: 100%;\r\n  padding: 12px 20px;\r\n  margin: 8px 0;\r\n  box-sizing: border-box;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote that we have set the <code>box-sizing</code> property to <code>border-box</code>. This makes sure that the padding and eventually borders are included in the total width and height of the elements.<br />\r\n\t\tRead more about the <code>box-sizing</code> property in our <a href=\"css3_box-sizing.asp\" target=\"_blank\">CSS Box Sizing</a> chapter.</p>\r\n</blockquote>\r\n<h2>\r\n\tBordered Inputs</h2>\r\n<p>\r\n\tUse the <code>border</code> property to change the border size and color, and use the <code>border-radius</code> property to add rounded corners:</p>\r\n<pre>\r\n<code>input[type=text] {\r\n  border: 2px solid red;\r\n  border-radius: 4px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf you only want a bottom border, use the <code>border-bottom</code> property:</p>\r\n<pre>\r\n<code>input[type=text] {\r\n  border: none;\r\n  border-bottom: 2px solid red;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tColored Inputs</h2>\r\n<p>\r\n\tUse the <code>background-color</code> property to add a background color to the input, and the <code>color</code> property to change the text color:</p>\r\n<pre>\r\n<code>input[type=text] {\r\n  background-color: #3CBC8D;\r\n  color: white;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tFocused Inputs</h2>\r\n<p>\r\n\tBy default, some browsers will add a blue outline around the input when it gets focus (clicked on). You can remove this behavior by adding <code>outline: none;</code> to the input.</p>\r\n<p>\r\n\tUse the <code>:focus</code> selector to do something with the input field when it gets focus:</p>\r\n<pre>\r\n<code>input[type=text]:focus {\r\n  background-color: lightblue;\r\n}\r\n</code></pre>\r\n<pre>\r\n<code>input[type=text]:focus {\r\n  border: 3px solid #555;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tInput with icon/image</h2>\r\n<p>\r\n\tIf you want an icon inside the input, use the <code>background-image</code> property and position it with the <code>background-position</code> property. Also notice that we add a large left padding to reserve the space of the icon.</p>\r\n<pre>\r\n<code>input[type=text] {\r\n  background-color: white;\r\n  background-image: url(&#39;searchicon.png&#39;);\r\n  background-position: 10px 10px; \r\n  background-repeat: no-repeat;\r\n  padding-left: 40px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tAnimated Search Input</h2>\r\n<p>\r\n\tIn this example we use the CSS <code>transition</code> property to animate the width of the search input when it gets focus. You will learn more about the <code> transition</code> property later, in our <a href=\"css3_transitions.asp\" target=\"_blank\">CSS Transitions</a> chapter.</p>\r\n<pre>\r\n<code>input[type=text] {\r\n  -webkit-transition: width 0.4s ease-in-out;\r\n  transition: width 0.4s ease-in-out;\r\n}\r\n\r\ninput[type=text]:focus {\r\n  width: 100%;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tStyling Textareas</h2>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Use the <code>resize</code> property to prevent textareas from being resized (disable the &quot;grabber&quot; in the bottom right corner):</p>\r\n</blockquote>\r\n<pre>\r\n<code>textarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px 20px;\r\n  box-sizing: border-box;\r\n  border: 2px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: #f8f8f8;\r\n  resize: none;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tStyling Select Menus</h2>\r\n<pre>\r\n<code>select {\r\n  width: 100%;\r\n  padding: 16px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #f1f1f1;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tStyling Input Buttons</h2>\r\n<pre>\r\n<code>input[type=button], input[type=submit], input[type=reset] {\r\n  background-color: #4CAF50;\r\n  border: none;\r\n  color: white;\r\n  padding: 16px 32px;\r\n  text-decoration: none;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Tip: use width: 100% for full-width buttons */\r\n</code></pre>\r\n<p>\r\n\tFor more information about how to style buttons with CSS, read our <a href=\"css3_buttons.asp\" target=\"_blank\">CSS Buttons Tutorial</a>.</p>\r\n<h2>\r\n\tResponsive Form</h2>\r\n<p>\r\n\tResize the browser window to see the effect. When the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tAdvanced: The following example use <a href=\"css3_mediaqueries.asp\" target=\"_blank\">media queries</a> to create a responsive form. You will learn more about this in a later chapter.</p>\r\n</blockquote>"
          }
        },
        {
          "Counters": {
            "content": "<p>\r\n\tCSS counters are &quot;variables&quot; maintained by CSS whose values can be incremented by CSS rules (to track how many times they are used). Counters let you adjust the appearance of content based on its placement in the document.</p>\r\n<h2>\r\n\tAutomatic Numbering With Counters</h2>\r\n<p>\r\n\tCSS counters are like &quot;variables&quot;. The variable values can be incremented by CSS rules (which will track how many times they are used).</p>\r\n<p>\r\n\tTo work with CSS counters we will use the following properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>counter-reset</code> - Creates or resets a counter</li>\r\n\t<li>\r\n\t\t<code>counter-increment</code> - Increments a counter value</li>\r\n\t<li>\r\n\t\t<code>content</code> - Inserts generated content</li>\r\n\t<li>\r\n\t\t<code>counter()</code> or <code>counters()</code> function - Adds the value of a counter to an element</li>\r\n</ul>\r\n<p>\r\n\tTo use a CSS counter, it must first be created with <code>counter-reset</code>.</p>\r\n<p>\r\n\tThe following example creates a counter for the page (in the body selector), then increments the counter value for each &lt;h2&gt; element and adds &quot;Section &lt;value of the counter&gt;:&quot; to the beginning of each &lt;h2&gt; element:</p>\r\n<pre>\r\n<code>body {\r\n  counter-reset: section;\r\n}\r\n\r\nh2::before {\r\n  counter-increment: section;\r\n  content: &quot;Section &quot; counter(section) &quot;: &quot;;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tNesting Counters</h2>\r\n<p>\r\n\tThe following example creates one counter for the page (section) and one counter for each &lt;h1&gt; element (subsection). The &quot;section&quot; counter will be counted for each &lt;h1&gt; element with &quot;Section &lt;value of the section counter&gt;.&quot;, and the &quot;subsection&quot; counter will be counted for each &lt;h2&gt; element with &quot;&lt;value of the section counter&gt;.&lt;value of the subsection counter&gt;&quot;:</p>\r\n<pre>\r\n<code>body {\r\n  counter-reset: section;\r\n}\r\n\r\nh1 {\r\n  counter-reset: subsection;\r\n}\r\n\r\nh1::before {\r\n  counter-increment: section;\r\n  content: &quot;Section &quot; counter(section) &quot;. &quot;;\r\n}\r\n\r\nh2::before {\r\n  counter-increment: subsection;\r\n  content: counter(section) &quot;.&quot; counter(subsection) &quot; &quot;;\r\n}\r\n</code></pre>\r\n<p>\r\n\tA counter can also be useful to make outlined lists because a new instance of a counter is automatically created in child elements. Here we use the <code>counters()</code> function to insert a string between different levels of nested counters:</p>\r\n<pre>\r\n<code>ol {\r\n  counter-reset: section;\r\n  list-style-type: none;\r\n}\r\n\r\nli::before {\r\n  counter-increment: section;\r\n  content: counters(section,&quot;.&quot;) &quot; &quot;;\r\n}\r\n</code></pre>\r\n<h2>\r\n\t&nbsp;CSS Counter Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tcontent</td>\r\n\t\t\t<td>\r\n\t\t\t\tUsed with the ::before and ::after pseudo-elements, to insert generated content</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tcounter-increment</td>\r\n\t\t\t<td>\r\n\t\t\t\tIncrements one or more counter values</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tcounter-reset</td>\r\n\t\t\t<td>\r\n\t\t\t\tCreates or resets one or more counters</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Website Layout": {
            "content": "<h2>\r\n\tWebsite Layout</h2>\r\n<p>\r\n\tA website is often divided into headers, menus, content and a footer:</p>\r\n<p>\r\n\tThere are tons of different layout designs to choose from. However, the structure above, is one of the most common, and we will take a closer look at it in this tutorial.</p>\r\n<h2>\r\n\tHeader</h2>\r\n<p>\r\n\tA header is usually located at the top of the website (or right below a top navigation menu). It often contains a logo or the website name:</p>\r\n<pre>\r\n<code>.header {\r\n  background-color: #F1F1F1;\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tNavigation Bar</h2>\r\n<p>\r\n\tA navigation bar contains a list of links to help visitors navigating through your website:</p>\r\n<pre>\r\n<code>/* The navbar container */\r\n.topnav {\r\n  overflow: hidden;\r\n  background-color: #333;\r\n}\r\n\r\n/* Navbar links */\r\n.topnav a {\r\n  float: left;\r\n  display: block;\r\n  color: #f2f2f2;\r\n  text-align: center;\r\n  padding: 14px 16px;\r\n  text-decoration: none;\r\n}\r\n\r\n/* Links - change color on hover */\r\n.topnav a:hover {\r\n  background-color: #ddd;\r\n  color: black;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tContent</h2>\r\n<p>\r\n\tThe layout in this section, often depends on the target users. The most common layout is one (or combining them) of the following:</p>\r\n<ul>\r\n\t<li>\r\n\t\t1-column (often used for mobile browsers)</li>\r\n\t<li>\r\n\t\t2-column (often used for tablets and laptops)</li>\r\n\t<li>\r\n\t\t3-column layout (only used for desktops)</li>\r\n</ul>\r\n<p>\r\n\tWe will create a 3-column layout, and change it to a 1-column layout on smaller screens:</p>\r\n<pre>\r\n<code>/* Create three equal columns that floats next to each other */\r\n.column {\r\n  float: left;\r\n  width: 33.33%;\r\n}\r\n\r\n/* Clear floats after the columns */\r\n.row:after {\r\n  content: &quot;&quot;;\r\n  display: table;\r\n  clear: both;\r\n}\r\n\r\n/* Responsive layout - makes the three columns stack on top of each other instead of next to each other on smaller screens (600px wide or less) */\r\n@media screen and (max-width: 600px) {\r\n  .column {\r\n    width: 100%;\r\n  }\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: To create a 2-column layout, change the width to 50%. To create a 4-column layout, use 25%, etc.</p>\r\n\t<p>\r\n\t\tTip: Do you wonder how the @media rule works? <a href=\"css3_mediaqueries.asp\" target=\"_blank\">Read more about it in our CSS Media Queries chapter</a>.</p>\r\n\t<p>\r\n\t\tTip: A more modern way of creating column layouts, is to use CSS Flexbox. However, it is not supported in Internet Explorer 10 and earlier versions. If you require IE6-10 support, use floats (as shown above).<br />\r\n\t\t<br />\r\n\t\tTo learn more about the Flexible Box Layout Module, <a href=\"css3_flexbox.asp\" target=\"_blank\"> read our CSS Flexbox chapter</a>.</p>\r\n</blockquote>\r\n<h2>\r\n\tUnequal Columns</h2>\r\n<p>\r\n\tThe main content is the biggest and the most important part of your site.</p>\r\n<p>\r\n\tIt is common with unequal column widths, so that most of the space is reserved for the main content. The side content (if any) is often used as an alternative navigation or to specify information relevant to the main content. Change the widths as you like, only remember that it should add up to 100% in total:</p>\r\n<pre>\r\n<code>.column {\r\n  float: left;\r\n}\r\n\r\n/* Left and right column */\r\n.column.side {\r\n  width: 25%;\r\n}\r\n\r\n/* Middle column */\r\n.column.middle {\r\n  width: 50%;\r\n}\r\n\r\n/* Responsive layout - makes the three columns stack on top of each other instead of next to each other */\r\n@media screen and (max-width: 600px) {\r\n  .column.side, .column.middle {\r\n    width: 100%;\r\n  }\r\n}\r\n</code></pre>\r\n<h2>\r\n\tFooter</h2>\r\n<p>\r\n\tThe footer is placed at the bottom of your page. It often contains information like copyright and contact info:</p>\r\n<pre>\r\n<code>.footer {\r\n  background-color: #F1F1F1;\r\n  text-align: center;\r\n  padding: 10px;\r\n}</code></pre>"
          }
        },
        {
          "Units": {
            "content": "<h2>\r\n\tCSS Units</h2>\r\n<p>\r\n\tCSS has several different units for expressing a length.</p>\r\n<p>\r\n\tMany CSS properties take &quot;length&quot; values, such as <code>width</code>, <code>margin</code>, <code>padding</code>, <code>font-size</code>, etc.</p>\r\n<p>\r\n\tLength is a number followed by a length unit, such as 10px, 2em, etc.</p>\r\n<p>\r\n\tA whitespace cannot appear between the number and the unit. However, if the value is 0, the unit can be omitted.</p>\r\n<p>\r\n\tFor some CSS properties, negative lengths are allowed.</p>\r\n<p>\r\n\tThere are two types of length units: absolute and relative.</p>\r\n<h2>\r\n\tAbsolute Lengths</h2>\r\n<p>\r\n\tThe absolute length units are fixed and a length expressed in any of these will appear as exactly that size.</p>\r\n<p>\r\n\tAbsolute length units are not recommended for use on screen, because screen sizes vary so much. However, they can be used if the output medium is known, such as for print layout.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tUnit</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tcm</td>\r\n\t\t\t<td>\r\n\t\t\t\tcentimeters&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmm</td>\r\n\t\t\t<td>\r\n\t\t\t\tmillimeters</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tin</td>\r\n\t\t\t<td>\r\n\t\t\t\tinches (1in = 96px = 2.54cm)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tpx *</td>\r\n\t\t\t<td>\r\n\t\t\t\tpixels (1px = 1/96th of 1in)&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tpt</td>\r\n\t\t\t<td>\r\n\t\t\t\tpoints (1pt = 1/72 of 1in)&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tpc</td>\r\n\t\t\t<td>\r\n\t\t\t\tpicas (1pc = 12 pt)&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<p>\r\n\t* Pixels (px) are relative to the viewing device. For low-dpi devices, 1px is one device pixel (dot) of the display. For printers and high resolution screens 1px implies multiple device pixels.</p>\r\n<h2>\r\n\tRelative Lengths</h2>\r\n<p>\r\n\tRelative length units specify a length relative to another length property. Relative length units scales better between different rendering mediums.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tUnit</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tem</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to the font-size of the element (2em means 2 times the size of the current font)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tex</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to the x-height of the current font (rarely used)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tch</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to width of the &quot;0&quot; (zero)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\trem</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to font-size of the root element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvw</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to 1% of the width of the viewport*</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvh</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to 1% of the height of the viewport*</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvmin</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to 1% of viewport&#39;s* smaller dimension</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvmax</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to 1% of viewport&#39;s* larger dimension</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t%</td>\r\n\t\t\t<td>\r\n\t\t\t\tRelative to the parent element</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: The em and rem units are practical in creating perfectly scalable layout!<br />\r\n\t\t* Viewport = the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm.</p>\r\n</blockquote>\r\n<h2>\r\n\tBrowser Support</h2>\r\n<p>\r\n\tThe numbers in the table specify the first browser version that fully supports the length unit.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tLength Unit</th>\r\n\t\t\t<th>\r\n\t\t\t\tGoogle Chrome</th>\r\n\t\t\t<th>\r\n\t\t\t\tInternet Explorer</th>\r\n\t\t\t<th>\r\n\t\t\t\tMozilla Firefoks</th>\r\n\t\t\t<th>\r\n\t\t\t\tSafari</th>\r\n\t\t\t<th>\r\n\t\t\t\tOpera</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tem, ex, %, px, cm, mm, in, pt, pc</td>\r\n\t\t\t<td>\r\n\t\t\t\t1.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t3.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t1.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t1.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t3.5</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tch</td>\r\n\t\t\t<td>\r\n\t\t\t\t27.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t1.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t7.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t20.0</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\trem</td>\r\n\t\t\t<td>\r\n\t\t\t\t4.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t3.6</td>\r\n\t\t\t<td>\r\n\t\t\t\t4.1</td>\r\n\t\t\t<td>\r\n\t\t\t\t11.6</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvh, vw</td>\r\n\t\t\t<td>\r\n\t\t\t\t20.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t19.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t6.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t20.0</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvmin</td>\r\n\t\t\t<td>\r\n\t\t\t\t20.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0*</td>\r\n\t\t\t<td>\r\n\t\t\t\t19.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t6.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t20.0</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tvmax</td>\r\n\t\t\t<td>\r\n\t\t\t\t26.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t19.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t7.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t20.0</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Internet Explorer 9 supports vmin with the non-standard name: vm.</p>\r\n</blockquote>"
          }
        },
        {
          "Specificity": {
            "content": "<h2>\r\n\tWhat is Specificity?</h2>\r\n<p>\r\n\tIf there are two or more conflicting CSS rules that point to the same element, the browser follows some rules to determine which one is most specific and therefore wins out.</p>\r\n<p>\r\n\tThink of specificity as a score/rank that determines which style declarations are ultimately applied to an element.</p>\r\n<p>\r\n\tThe universal selector (*) has low specificity, while ID selectors are highly specific!&nbsp;</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: Specificity is a common reason why your CSS-rules don&#39;t apply to some elements, although you think they should.</p>\r\n</blockquote>\r\n<h2>\r\n\tSpecificity Hierarchy</h2>\r\n<p>\r\n\tEvery selector has its place in the specificity hierarchy. There are four categories which define the specificity level of a selector:</p>\r\n<p>\r\n\tInline styles - An inline style is attached directly to the element to be styled. Example: &lt;h1 style=&quot;color: #ffffff;&quot;&gt;.</p>\r\n<p>\r\n\tIDs - An ID is a unique identifier for the page elements, such as #navbar.</p>\r\n<p>\r\n\tClasses, attributes and pseudo-classes - This category includes .classes, [attributes] and pseudo-classes such as :hover, :focus etc.</p>\r\n<p>\r\n\tElements and pseudo-elements - This category includes element names and pseudo-elements, such as h1, div, :before and :after.</p>\r\n<h2>\r\n\tHow to Calculate Specificity?</h2>\r\n<p>\r\n\tMemorize how to calculate specificity!</p>\r\n<p>\r\n\tStart at 0, add 1000 for style attribute, add 100 for each ID, add 10 for each attribute, class or pseudo-class, add 1 for each element name or pseudo-element.</p>\r\n<p>\r\n\tConsider these three code fragments:</p>\r\n<pre>\r\n<code>A: h1\r\nB: #content h1\r\nC: &lt;div id=&quot;content&quot;&gt;&lt;h1 style=&quot;color: #ffffff&quot;&gt;Heading&lt;/h1&gt;&lt;/div&gt;\r\n</code></pre>\r\n<p>\r\n\tThe specificity of A is 1 (one element)<br />\r\n\tThe specificity of B is 101 (one ID reference and one element)<br />\r\n\tThe specificity of C is 1000 (inline styling)</p>\r\n<p>\r\n\tSince 1 &lt; 101 &lt; 1000, the third rule (C) has a greater level of specificity, and therefore will be applied.</p>\r\n<h2>\r\n\tSpecificity Rules</h2>\r\n<p>\r\n\tEqual specificity: the latest rule counts - If the same rule is written twice into the external style sheet, then the lower rule in the style sheet is closer to the element to be styled, and therefore will be applied:</p>\r\n<pre>\r\n<code>h1 {background-color: yellow;}\r\nh1 {background-color: red;}\r\n</code></pre>\r\n<p>\r\n\tID selectors have a higher specificity than attribute selectors - Look at the following three code lines:</p>\r\n<pre>\r\n<code>div#a {background-color: green;}\r\n#a {background-color: yellow;}\r\ndiv[id=a] {background-color: blue;}\r\n</code></pre>\r\n<p>\r\n\tthe first rule is more specific than the other two, and will be applied.</p>\r\n<p>\r\n\tContextual selectors are more specific than a single element selector - The embedded style sheet is closer to the element to be styled. So in the following situation</p>\r\n<pre>\r\n<code>From external CSS file:\r\n#content h1 {background-color: red;}\r\n\r\nIn HTML file:\r\n&lt;style&gt;\r\n#content h1 {\r\n  background-color: yellow;\r\n}\r\n&lt;/style&gt;\r\n</code></pre>\r\n<p>\r\n\tthe latter rule will be applied.</p>\r\n<p>\r\n\tA class selector beats any number of element selectors - a class selector such as .intro beats h1, p, div, etc:</p>\r\n<pre>\r\n<code>.intro {background-color: yellow;}\r\nh1 {background-color: red;}\r\n</code></pre>\r\n<p>\r\n\tThe universal selector and inherited values have a specificity of 0 - *, body * and similar have a zero specificity. Inherited values also have a specificity of 0.</p>"
          }
        },
        {
          "Rounded Corners": {
            "content": "<h2>\r\n\tCSS Rounded Corners</h2>\r\n<p>\r\n\tWith the CSS <code>border-radius</code> property, you can give any element &quot;rounded corners&quot;.</p>\r\n<h2>\r\n\tCSS border-radius Property</h2>\r\n<p>\r\n\tThe CSS <code>border-radius</code> property defines the radius of an element&#39;s corners.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: This property allows you to add rounded corners to elements!</p>\r\n</blockquote>\r\n<p>\r\n\tHere are three examples:</p>\r\n<p>\r\n\t1. Rounded corners for an element with a specified background color:</p>\r\n<p>\r\n\t2. Rounded corners for an element with a border:</p>\r\n<p>\r\n\t3. Rounded corners for an element with a background image:</p>\r\n<p>\r\n\tHere is the code:</p>\r\n<pre>\r\n<code>#rcorners1 {\r\n  border-radius: 25px;\r\n  background: #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n\r\n#rcorners2 {\r\n  border-radius: 25px;\r\n  border: 2px solid #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n\r\n#rcorners3 {\r\n  border-radius: 25px;\r\n  background: url(paper.gif);\r\n  background-position: left top;\r\n  background-repeat: repeat;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: The <code>border-radius</code> property is actually a shorthand property for the <code>border-top-left-radius</code>, <code>border-top-right-radius</code>, <code>border-bottom-right-radius</code> and <code>border-bottom-left-radius</code> properties.</p>\r\n</blockquote>\r\n<h2>\r\n\tCSS border-radius - Specify Each Corner</h2>\r\n<p>\r\n\tThe <code>border-radius</code> property can have from one to four values. Here are the rules:</p>\r\n<p>\r\n\tFour values - border-radius: 15px 50px 30px 5px; (first value applies to top-left corner, second value applies to top-right corner, third value applies to bottom-right corner, and fourth value applies to bottom-left corner).</p>\r\n<p>\r\n\tThree values - border-radius: 15px 50px 30px; (first value applies to top-left corner, second value applies to top-right and bottom-left corners, and third value applies to bottom-right corner).</p>\r\n<p>\r\n\tTwo values - border-radius: 15px 50px; (first value applies to top-left and bottom-right corners, and the second value applies to top-right and bottom-left corners).</p>\r\n<p>\r\n\tOne value - border-radius: 15px; (the value applies to all four corners, which are rounded equally.</p>\r\n<p>\r\n\tHere is the code:</p>\r\n<pre>\r\n<code>#rcorners1 {\r\n  border-radius: 15px 50px 30px 5px;\r\n  background: #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n\r\n#rcorners2 {\r\n  border-radius: 15px 50px 30px;\r\n  background: #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n\r\n#rcorners3 {\r\n  border-radius: 15px 50px;\r\n  background: #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n\r\n#rcorners4 {\r\n  border-radius: 15px;\r\n  background: #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n</code></pre>\r\n<p>\r\n\tYou could also create elliptical corners:</p>\r\n<pre>\r\n<code>#rcorners1 {\r\n  border-radius: 50px / 15px;\r\n  background: #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n\r\n#rcorners2 {\r\n  border-radius: 15px / 50px;\r\n  background: #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px; \r\n}\r\n\r\n#rcorners3 {\r\n  border-radius: 50%;\r\n  background: #73AD21;\r\n  padding: 20px; \r\n  width: 200px;\r\n  height: 150px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Rounded Corners Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-radius</td>\r\n\t\t\t<td>\r\n\t\t\t\tA shorthand property for setting all the four border-*-*-radius properties</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-top-left-radius</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines the shape of the border of the top-left corner</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-top-right-radius</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines the shape of the border of the top-right corner</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-bottom-right-radius</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines the shape of the border of the bottom-right corner</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-bottom-left-radius</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines the shape of the border of the bottom-left corner</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Border Images": {
            "content": "<h2>\r\n\tCSS Border Images</h2>\r\n<p>\r\n\tWith the CSS <code>border-image</code> property, you can set an image to be used as the border around an element.</p>\r\n<h2>\r\n\tCSS border-image Property</h2>\r\n<p>\r\n\tThe CSS <code>border-image</code> property allows you to specify an image to be used instead of the normal border around an element.</p>\r\n<p>\r\n\tThe property has three parts:</p>\r\n<ol>\r\n\t<li>\r\n\t\tThe image to use as the border</li>\r\n\t<li>\r\n\t\tWhere to slice the image</li>\r\n\t<li>\r\n\t\tDefine whether the middle sections should be repeated or stretched</li>\r\n</ol>\r\n<p>\r\n\tWe will use the following image (called &quot;border.png&quot;):</p>\r\n<p>\r\n\t[[ image(css-advanced/border.png, center) ]]</p>\r\n<p>\r\n\tThe <code>border-image</code> property takes the image and slices it into nine sections, like a tic-tac-toe board. It then places the corners at the corners, and the middle sections are repeated or stretched as you specify.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: For <code>border-image</code> to work, the element also needs the <code>border</code> property set!</p>\r\n</blockquote>\r\n<p>\r\n\tHere, the middle sections of the image are repeated to create the border.</p>\r\n<p>\r\n\tHere is the code:</p>\r\n<pre>\r\n<code>#borderimg {\r\n  border: 10px solid transparent;\r\n  padding: 15px;\r\n  border-image: url(border.png) 30 round;\r\n}\r\n</code></pre>\r\n<p>\r\n\tHere, the middle sections of the image are stretched to create the border.</p>\r\n<p>\r\n\tHere is the code:</p>\r\n<pre>\r\n<code>#borderimg {\r\n  border: 10px solid transparent;\r\n  padding: 15px;\r\n  border-image: url(border.png) 30 stretch;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: The <code>border-image</code> property is actually a shorthand property for the <code>border-image-source</code>, <code>border-image-slice</code>, <code>border-image-width</code>, <code>border-image-outset</code> and <code>border-image-repeat</code> properties.</p>\r\n</blockquote>\r\n<h2>\r\n\tCSS border-image - Different Slice Values</h2>\r\n<p>\r\n\tDifferent slice values completely changes the look of the border.</p>\r\n<p>\r\n\tHere is the code:</p>\r\n<pre>\r\n<code>#borderimg1 {\r\n  border: 10px solid transparent;\r\n  padding: 15px;\r\n  border-image: url(border.png) 50 round;\r\n}\r\n\r\n#borderimg2 {\r\n  border: 10px solid transparent;\r\n  padding: 15px;\r\n  border-image: url(border.png) 20% round;\r\n}\r\n\r\n#borderimg3 {\r\n  border: 10px solid transparent;\r\n  padding: 15px;\r\n  border-image: url(border.png) 30% round;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Border Image Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-image</td>\r\n\t\t\t<td>\r\n\t\t\t\tA shorthand property for setting all the border-image-* properties</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-image-source</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the path to the image to be used as a border</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-image-slice</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how to slice the border image</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-image-width</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the widths of the border image</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-image-outset</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the amount by which the border image area extends beyond the border box</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tborder-image-repeat</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies whether the border image should be repeated, rounded or stretched</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Multiple Backgrounds": {
            "content": "<p>\r\n\tIn this chapter you will learn how to add multiple background images to one element.</p>\r\n<p>\r\n\tYou will also learn about the following properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>background-size</code></li>\r\n\t<li>\r\n\t\t<code>background-origin</code></li>\r\n\t<li>\r\n\t\t<code>background-clip</code></li>\r\n</ul>\r\n<h2>\r\n\tCSS Multiple Backgrounds</h2>\r\n<p>\r\n\tCSS allows you to add multiple background images for an element, through the <code>background-image</code> property.</p>\r\n<p>\r\n\tThe different background images are separated by commas, and the images are stacked on top of each other, where the first image is closest to the viewer.</p>\r\n<p>\r\n\tThe following example has two background images, the first image is a flower (aligned to the bottom and right) and the second image is a paper background (aligned to the top-left corner):</p>\r\n<pre>\r\n<code>#example1 {\r\n  background-image: url(img_flwr.gif), url(paper.gif);\r\n  background-position: right bottom, left top;\r\n  background-repeat: no-repeat, repeat;\r\n}\r\n</code></pre>\r\n<p>\r\n\tMultiple background images can be specified using either the individual background properties (as above) or the <code>background</code> shorthand property.</p>\r\n<p>\r\n\tThe following example uses the <code>background</code> shorthand property (same result as example above):</p>\r\n<pre>\r\n<code>#example1 {\r\n  background: url(img_flwr.gif) right bottom no-repeat, url(paper.gif) left top repeat;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Background Size</h2>\r\n<p>\r\n\tThe CSS <code>background-size</code> property allows you to specify the size of background images.</p>\r\n<p>\r\n\tThe size can be specified in lengths, percentages, or by using one of the two keywords: contain or cover.</p>\r\n<p>\r\n\tThe following example resizes a background image to much smaller than the original image (using pixels):</p>\r\n<pre>\r\n<code>#div1 {\r\n  background: url(img_flower.jpg);\r\n  background-size: 100px 80px;\r\n  background-repeat: no-repeat;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe two other possible values for <code>background-size</code> are <code>contain</code> and <code>cover</code>.</p>\r\n<p>\r\n\tThe <code>contain</code> keyword scales the background image to be as large as possible (but both its width and its height must fit inside the content area). As such, depending on the proportions of the background image and the background positioning area, there may be some areas of the background which are not covered by the background image.</p>\r\n<p>\r\n\tThe <code>cover</code> keyword scales the background image so that the content area is completely covered by the background image (both its width and height are equal to or exceed the content area). As such, some parts of the background image may not be visible in the background positioning area.</p>\r\n<p>\r\n\tThe following example illustrates the use of <code>contain</code> and <code>cover</code>:</p>\r\n<pre>\r\n<code>#div1 {\r\n  background: url(img_flower.jpg);\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n}\r\n#div2 {\r\n  background: url(img_flower.jpg);\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tDefine Sizes of Multiple Background Images</h2>\r\n<p>\r\n\tThe <code>background-size</code> property also accepts multiple values for background size (using a comma-separated list), when working with multiple backgrounds.</p>\r\n<p>\r\n\tThe following example has three background images specified, with different background-size value for each image:</p>\r\n<pre>\r\n<code>#example1 {\r\n  background: url(img_tree.gif) left top no-repeat, url(img_flwr.gif) right bottom no-repeat, url(paper.gif) left top repeat;\r\n  background-size: 50px, 130px, auto;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tFull Size Background Image</h2>\r\n<p>\r\n\tNow we want to have a background image on a website that covers the entire browser window at all times.</p>\r\n<p>\r\n\tThe requirements are as follows:</p>\r\n<ul>\r\n\t<li>\r\n\t\tFill the entire page with the image (no white space)</li>\r\n\t<li>\r\n\t\tScale image as needed</li>\r\n\t<li>\r\n\t\tCenter image on page</li>\r\n\t<li>\r\n\t\tDo not cause scrollbars</li>\r\n</ul>\r\n<p>\r\n\tThe following example shows how to do it; Use the &lt;html&gt; element (the &lt;html&gt; element is always at least the height of the browser window). Then set a fixed and centered background on it. Then adjust its size with the background-size property:</p>\r\n<pre>\r\n<code>html {\r\n  background: url(img_man.jpg) no-repeat center fixed; \r\n  background-size: cover;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tHero Image</h2>\r\n<p>\r\n\tYou could also use different background properties on a &lt;div&gt; to create a hero image (a large image with text), and place it where you want.</p>\r\n<pre>\r\n<code>.hero-image {\r\n  background: url(img_man.jpg) no-repeat center; \r\n  background-size: cover;\r\n  height: 500px;\r\n  position: relative;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS background-origin Property</h2>\r\n<p>\r\n\tThe CSS <code>background-origin</code> property specifies where the background image is positioned.</p>\r\n<p>\r\n\tThe property takes three different values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tborder-box - the background image starts from the upper left corner of the border</li>\r\n\t<li>\r\n\t\tpadding-box - (default) the background image starts from the upper left corner of the padding edge</li>\r\n\t<li>\r\n\t\tcontent-box - the background image starts from the upper left corner of the content</li>\r\n</ul>\r\n<p>\r\n\tThe following example illustrates the <code>background-origin</code> property:</p>\r\n<pre>\r\n<code>#example1 {\r\n  border: 10px solid black;\r\n  padding: 35px;\r\n  background: url(img_flwr.gif);\r\n  background-repeat: no-repeat;\r\n  background-origin: content-box;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS background-clip Property</h2>\r\n<p>\r\n\tThe CSS <code>background-clip</code> property specifies the painting area of the background.</p>\r\n<p>\r\n\tThe property takes three different values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tborder-box - (default) the background is painted to the outside edge of the border</li>\r\n\t<li>\r\n\t\tpadding-box - the background is painted to the outside edge of the padding</li>\r\n\t<li>\r\n\t\tcontent-box - the background is painted within the content box</li>\r\n</ul>\r\n<p>\r\n\tThe following example illustrates the <code>background-clip</code> property:</p>\r\n<pre>\r\n<code>#example1 {\r\n  border: 10px dotted black;\r\n  padding: 35px;\r\n  background: yellow;\r\n  background-clip: content-box;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Advanced Background Properties</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbackground</td>\r\n\t\t\t<td>\r\n\t\t\t\tA shorthand property for setting all the background properties in one declaration</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbackground-clip</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the painting area of the background</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbackground-image</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies one or more background images for an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbackground-origin</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies where the background image(s) is/are positioned</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbackground-size</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the size of the background image(s)</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Colors": {
            "content": "<p>\r\n\tCSS supports [[ link | css-tutorial-colors]]140+ color names, HEX values, RGB values[[ endl ]], RGBA values, HSL values, HSLA values, and opacity.</p>\r\n<h2>\r\n\tRGBA Colors</h2>\r\n<p>\r\n\tRGBA color values are an extension of RGB color values with an alpha channel - which specifies the opacity for a color.</p>\r\n<p>\r\n\tAn RGBA color value is specified with: rgba(red, green, blue, alpha). The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque).</p>\r\n<p>\r\n\tThe following example defines different RGBA colors:</p>\r\n<pre>\r\n<code>#p1 {background-color: rgba(255, 0, 0, 0.3);}  /* red with opacity */\r\n#p2 {background-color: rgba(0, 255, 0, 0.3);}  /* green with opacity */\r\n#p3 {background-color: rgba(0, 0, 255, 0.3);}  /* blue with opacity */\r\n</code></pre>\r\n<h2>\r\n\tHSL Colors</h2>\r\n<p>\r\n\tHSL stands for Hue, Saturation and Lightness.</p>\r\n<p>\r\n\tAn HSL color value is specified with: hsl(hue, saturation, lightness).</p>\r\n<ol>\r\n\t<li>\r\n\t\tHue is a degree on the color wheel (from 0 to 360):\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t0 (or 360) is red</li>\r\n\t\t\t<li>\r\n\t\t\t\t120 is green</li>\r\n\t\t\t<li>\r\n\t\t\t\t240 is blue</li>\r\n\t\t</ul>\r\n\t</li>\r\n\t<li>\r\n\t\tSaturation is a percentage value: 100% is the full color.</li>\r\n\t<li>\r\n\t\tLightness is also a percentage; 0% is dark (black) and 100% is white.</li>\r\n</ol>\r\n<p>\r\n\tThe following example defines different HSL colors:</p>\r\n<pre>\r\n<code>#p1 {background-color: hsl(120, 100%, 50%);}  /* green */\r\n#p2 {background-color: hsl(120, 100%, 75%);}  /* light green */\r\n#p3 {background-color: hsl(120, 100%, 25%);}  /* dark green */\r\n#p4 {background-color: hsl(120, 60%, 70%);}   /* pastel green */\r\n</code></pre>\r\n<h2>\r\n\tHSLA Colors</h2>\r\n<p>\r\n\tHSLA color values are an extension of HSL color values with an alpha channel - which specifies the opacity for a color.</p>\r\n<p>\r\n\tAn HSLA color value is specified with: hsla(hue, saturation, lightness, alpha), where the alpha parameter defines the opacity. The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque).</p>\r\n<p>\r\n\tThe following example defines different HSLA colors:</p>\r\n<pre>\r\n<code>#p1 {background-color: hsla(120, 100%, 50%, 0.3);}  /* green with opacity */\r\n#p2 {background-color: hsla(120, 100%, 75%, 0.3);}  /* light green with opacity */\r\n#p3 {background-color: hsla(120, 100%, 25%, 0.3);}  /* dark green with opacity */\r\n#p4 {background-color: hsla(120, 60%, 70%, 0.3);}   /* pastel green with opacity */\r\n</code></pre>\r\n<h2>\r\n\tOpacity</h2>\r\n<p>\r\n\tThe CSS <code>opacity</code> property sets the opacity for the whole element (both background color and text will be opaque/transparent).</p>\r\n<p>\r\n\tThe <code>opacity</code> property value must be a number between 0.0 (fully transparent) and 1.0 (fully opaque).</p>\r\n<p>\r\n\tNotice that the text above will also be transparent/opaque!</p>\r\n<p>\r\n\tThe following example shows different elements with opacity:</p>\r\n<pre>\r\n<code>#p1 {background-color:rgb(255,0,0);opacity:0.6;}  /* red with opacity */\r\n#p2 {background-color:rgb(0,255,0);opacity:0.6;}  /* green with opacity */\r\n#p3 {background-color:rgb(0,0,255);opacity:0.6;}  /* blue with opacity */</code></pre>"
          }
        },
        {
          "Gradients": {
            "content": "<p>\r\n\tCSS gradients let you display smooth transitions between two or more specified colors.</p>\r\n<p>\r\n\tCSS defines two types of gradients:</p>\r\n<ul>\r\n\t<li>\r\n\t\tLinear Gradients (goes down/up/left/right/diagonally)</li>\r\n\t<li>\r\n\t\tRadial Gradients (defined by their center)</li>\r\n</ul>\r\n<h2>\r\n\tCSS Linear Gradients</h2>\r\n<p>\r\n\tTo create a linear gradient you must define at least two color stops. Color stops are the colors you want to render smooth transitions among. You can also set a starting point and a direction (or an angle) along with the gradient effect.</p>\r\n<h3>\r\n\tSyntax</h3>\r\n<pre>\r\n<code>background-image: linear-gradient(direction, color-stop1, color-stop2, ...);\r\n</code></pre>\r\n<h4>\r\n\tLinear Gradient - Top to Bottom (this is default)</h4>\r\n<p>\r\n\tThe following example shows a linear gradient that starts at the top. It starts red, transitioning to yellow:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: linear-gradient(red, yellow);\r\n}\r\n</code></pre>\r\n<h4>\r\n\tLinear Gradient - Left to Right</h4>\r\n<p>\r\n\tThe following example shows a linear gradient that starts from the left. It starts red, transitioning to yellow:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: linear-gradient(to right, red , yellow);\r\n}\r\n</code></pre>\r\n<h4>\r\n\tLinear Gradient - Diagonal</h4>\r\n<p>\r\n\tYou can make a gradient diagonally by specifying both the horizontal and vertical starting positions.</p>\r\n<p>\r\n\tThe following example shows a linear gradient that starts at top left (and goes to bottom right). It starts red, transitioning to yellow:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: linear-gradient(to bottom right, red, yellow);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tUsing Angles</h2>\r\n<p>\r\n\tIf you want more control over the direction of the gradient, you can define an angle, instead of the predefined directions (to bottom, to top, to right, to left, to bottom right, etc.).</p>\r\n<h3>\r\n\tSyntax</h3>\r\n<pre>\r\n<code>background-image: linear-gradient(angle, color-stop1, color-stop2);\r\n</code></pre>\r\n<p>\r\n\tThe angle is specified as an angle between a horizontal line and the gradient line.</p>\r\n<p>\r\n\tThe following example shows how to use angles on linear gradients:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: linear-gradient(-90deg, red, yellow);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tUsing Multiple Color Stops</h2>\r\n<p>\r\n\tThe following example shows a linear gradient (from top to bottom) with multiple color stops:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: linear-gradient(red, yellow, green);\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example shows how to create a linear gradient (from left to right) with the color of the rainbow and some text:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: linear-gradient(to right, red,orange,yellow,green,blue,indigo,violet); \r\n}\r\n</code></pre>\r\n<h2>\r\n\tUsing Transparency</h2>\r\n<p>\r\n\tCSS gradients also support transparency, which can be used to create fading effects.</p>\r\n<p>\r\n\tTo add transparency, we use the rgba() function to define the color stops. The last parameter in the rgba() function can be a value from 0 to 1, and it defines the transparency of the color: 0 indicates full transparency, 1 indicates full color (no transparency).</p>\r\n<p>\r\n\tThe following example shows a linear gradient that starts from the left. It starts fully transparent, transitioning to full color red:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: linear-gradient(to right, rgba(255,0,0,0), rgba(255,0,0,1));\r\n}\r\n</code></pre>\r\n<h2>\r\n\tRepeating a linear-gradient</h2>\r\n<p>\r\n\tThe repeating-linear-gradient() function is used to repeat linear gradients:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: repeating-linear-gradient(red, yellow 10%, green 20%);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Radial Gradients</h2>\r\n<p>\r\n\tA radial gradient is defined by its center.</p>\r\n<p>\r\n\tTo create a radial gradient you must also define at least two color stops.</p>\r\n<h3>\r\n\tSyntax</h3>\r\n<pre>\r\n<code>background-image: radial-gradient(shape size at position, start-color, ..., last-color);\r\n</code></pre>\r\n<p>\r\n\tbackground-image: radial-gradient(shape size at position, start-color, ..., last-color);</p>\r\n<p>\r\n\tBy default, shape is ellipse, size is farthest-corner, and position is center.</p>\r\n<h4>\r\n\tRadial Gradient - Evenly Spaced Color Stops (this is default)</h4>\r\n<p>\r\n\tThe following example shows a radial gradient with evenly spaced color stops:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: radial-gradient(red, yellow, green);\r\n}\r\n</code></pre>\r\n<h4>\r\n\tRadial Gradient - Differently Spaced Color Stops</h4>\r\n<p>\r\n\tThe following example shows a radial gradient with differently spaced color stops:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: radial-gradient(red 5%, yellow 15%, green 60%);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tSet Shape</h2>\r\n<p>\r\n\tThe shape parameter defines the shape. It can take the value circle or ellipse. The default value is ellipse.</p>\r\n<p>\r\n\tThe following example shows a radial gradient with the shape of a circle:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: radial-gradient(circle, red, yellow, green);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tUse of Different Size Keywords</h2>\r\n<p>\r\n\tThe size parameter defines the size of the gradient. It can take four values:</p>\r\n<ul>\r\n\t<li>\r\n\t\tclosest-side</li>\r\n\t<li>\r\n\t\tfarthest-side</li>\r\n\t<li>\r\n\t\tclosest-corner</li>\r\n\t<li>\r\n\t\tfarthest-corner</li>\r\n</ul>\r\n<p>\r\n\tA radial gradient with different size keywords:</p>\r\n<pre>\r\n<code>#grad1 {\r\n  background-image: radial-gradient(closest-side at 60% 55%, red, yellow, black);\r\n}\r\n\r\n#grad2 {\r\n  background-image: radial-gradient(farthest-side at 60% 55%, red, yellow, black);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tRepeating a radial-gradient</h2>\r\n<p>\r\n\tThe repeating-radial-gradient() function is used to repeat radial gradients:</p>\r\n<pre>\r\n<code>#grad {\r\n  background-image: repeating-radial-gradient(red, yellow 10%, green 15%);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Gradient Properties</h2>\r\n<p>\r\n\tThe following table lists the CSS gradient properties:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbackground-image</td>\r\n\t\t\t<td>\r\n\t\t\t\tSets one or more background images for an element</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Shadow Effects": {
            "content": "<h2>\r\n\tCSS Shadow Effects</h2>\r\n<p>\r\n\tWith CSS you can add shadow to text and to elements.</p>\r\n<p>\r\n\tIn this chapter you will learn about the following properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>text-shadow</code></li>\r\n\t<li>\r\n\t\t<code>box-shadow</code></li>\r\n</ul>\r\n<h2>\r\n\tCSS Text Shadow</h2>\r\n<p>\r\n\tThe CSS <code>text-shadow</code> property applies shadow to text.</p>\r\n<p>\r\n\tIn its simplest use, you only specify the horizontal shadow (2px) and the vertical shadow (2px):</p>\r\n<pre>\r\n<code>h1 {\r\n  text-shadow: 2px 2px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tNext, add a color to the shadow:</p>\r\n<pre>\r\n<code>h1 {\r\n  text-shadow: 2px 2px red;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThen, add a blur effect to the shadow:</p>\r\n<pre>\r\n<code>h1 {\r\n  text-shadow: 2px 2px 5px red;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example shows a white text with black shadow:</p>\r\n<pre>\r\n<code>h1 {\r\n  color: white;\r\n  text-shadow: 2px 2px 4px #000000;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example shows a red neon glow shadow:</p>\r\n<pre>\r\n<code>h1 {\r\n  text-shadow: 0 0 3px #FF0000;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMultiple Shadows</h2>\r\n<p>\r\n\tTo add more than one shadow to the text, you can add a comma-separated list of shadows.</p>\r\n<p>\r\n\tThe following example shows a red and blue neon glow shadow:</p>\r\n<pre>\r\n<code>h1 {\r\n  text-shadow: 0 0 3px #FF0000, 0 0 5px #0000FF;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example shows a white text with black, blue, and darkblue shadow:</p>\r\n<pre>\r\n<code>h1 {\r\n  color: white;\r\n  text-shadow: 1px 1px 2px black, 0 0 25px blue, 0 0 5px darkblue;\r\n}\r\n</code></pre>\r\n<p>\r\n\tYou can also use the text-shadow property to create a plain border around some text (without shadows):</p>\r\n<pre>\r\n<code>h1 {\r\n  color: yellow;\r\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS box-shadow Property</h2>\r\n<p>\r\n\tThe CSS <code>box-shadow</code> property applies shadow to elements.</p>\r\n<p>\r\n\tIn its simplest use, you only specify the horizontal shadow and the vertical shadow:</p>\r\n<pre>\r\n<code>div {\r\n  box-shadow: 10px 10px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tNext, add a color to the shadow:</p>\r\n<pre>\r\n<code>div {\r\n  box-shadow: 10px 10px grey;\r\n}\r\n</code></pre>\r\n<p>\r\n\tNext, add a blur effect to the shadow:</p>\r\n<pre>\r\n<code>div {\r\n  box-shadow: 10px 10px 5px grey;\r\n}\r\n</code></pre>\r\n<p>\r\n\tYou can also add shadows to the ::before and ::after pseudo-elements, to create an interesting effect:</p>\r\n<pre>\r\n<code>#boxshadow {\r\n  position: relative;\r\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\r\n  padding: 10px;\r\n  background: white;\r\n}\r\n\r\n#boxshadow img {\r\n  width: 100%;\r\n  border: 1px solid #8a4419;\r\n  border-style: inset;\r\n}\r\n\r\n#boxshadow::after {\r\n  content: &#39;&#39;;\r\n  position: absolute;\r\n  z-index: -1; /* hide shadow behind image */\r\n  box-shadow: 0 15px 20px rgba(0, 0, 0, 0.3); \r\n  width: 70%; \r\n  left: 15%; /* one half of the remaining 30% */\r\n  height: 100px;\r\n  bottom: 0;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCards</h2>\r\n<p>\r\n\tAn example of using the <code>box-shadow</code> property to create paper-like cards:</p>\r\n<pre>\r\n<code>div.card {\r\n  width: 250px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  text-align: center;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Shadow Properties</h2>\r\n<p>\r\n\tThe following table lists the CSS shadow properties:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbox-shadow</td>\r\n\t\t\t<td>\r\n\t\t\t\tAdds one or more shadows to an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-shadow</td>\r\n\t\t\t<td>\r\n\t\t\t\tAdds one or more shadows to a text</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Text Effects": {
            "content": "<h2>\r\n\tCSS Text<span> Overflow, Word Wrap, Line Breaking Rules, and Writing Modes</span></h2>\r\n<p>\r\n\tIn this chapter you will learn about the following properties:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>text-overflow</code></li>\r\n\t<li>\r\n\t\t<code>word-wrap</code></li>\r\n\t<li>\r\n\t\t<code>word-break</code></li>\r\n\t<li>\r\n\t\t<code>writing-mode</code></li>\r\n</ul>\r\n<h2>\r\n\tCSS Text Overflow</h2>\r\n<p>\r\n\tThe CSS <code>text-overflow</code> property specifies how overflowed content that is not displayed should be signaled to the user.</p>\r\n<p>\r\n\tThe CSS code is as follows:</p>\r\n<pre>\r\n<code>p.test1 {\r\n  white-space: nowrap; \r\n  width: 200px; \r\n  border: 1px solid #000000;\r\n  overflow: hidden;\r\n  text-overflow: clip; \r\n}\r\n\r\np.test2 {\r\n    white-space: nowrap; \r\n    width: 200px; \r\n    border: 1px solid #000000;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis; \r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example shows how you can display the overflowed content when hovering over the element:</p>\r\n<pre>\r\n<code>div.test:hover {\r\n  overflow: visible;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Word Wrapping</h2>\r\n<p>\r\n\tThe CSS <code>word-wrap</code> property allows long words to be able to be broken and wrap onto the next line.&nbsp;</p>\r\n<p>\r\n\tThe CSS code is as follows:</p>\r\n<p>\r\n\tAllow long words to be able to be broken and wrap onto the next line:</p>\r\n<pre>\r\n<code>p {\r\n  word-wrap: break-word;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Word Breaking</h2>\r\n<p>\r\n\tThe CSS <code>word-break</code> property specifies line breaking rules.</p>\r\n<p>\r\n\tThe CSS code is as follows:</p>\r\n<pre>\r\n<code>p.test1 {\r\n  word-break: keep-all;\r\n}\r\n\r\np.test2 {\r\n  word-break: break-all;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Writing Mode</h2>\r\n<p>\r\n\tThe CSS <code>writing-mode</code> property specifies whether lines of text are laid out horizontally or vertically.</p>\r\n<p>\r\n\tThe following example shows some different writing modes:</p>\r\n<pre>\r\n<code>p.test1 {\r\n  writing-mode: horizontal-tb; \r\n}\r\n\r\nspan.test2 {\r\n  writing-mode: vertical-rl; \r\n}\r\n\r\np.test2 {\r\n  writing-mode: vertical-rl; \r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Text Effect Properties</h2>\r\n<p>\r\n\tThe following table lists the CSS text effect properties:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-align-last</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how to align the last line of a text</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-justify</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how justified text should be aligned and spaced</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttext-overflow</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how overflowed content that is not displayed should be signaled to the user</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tword-break</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies line breaking rules for non-CJK scripts</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tword-wrap</td>\r\n\t\t\t<td>\r\n\t\t\t\tAllows long words to be able to be broken and wrap onto the next line</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\twriting-mode</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies whether lines of text are laid out horizontally or vertically</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Web Fonts": {
            "content": "<h2>\r\n\tThe CSS @font-face Rule</h2>\r\n<p>\r\n\tWeb fonts allow Web designers to use fonts that are not installed on the user&#39;s computer.</p>\r\n<p>\r\n\tWhen you have found/bought the font you wish to use, just include the font file on your web server, and it will be automatically downloaded to the user when needed.</p>\r\n<p>\r\n\tYour &quot;own&quot; fonts are defined within the CSS <code>@font-face</code> rule.</p>\r\n<h2>\r\n\tDifferent Font Formats</h2>\r\n<h3>\r\n\tTrueType Fonts (TTF)</h3>\r\n<p>\r\n\tTrueType is a font standard developed in the late 1980s, by Apple and Microsoft. TrueType is the most common font format for both the Mac OS and Microsoft Windows operating systems.</p>\r\n<h3>\r\n\tOpenType Fonts (OTF)</h3>\r\n<p>\r\n\tOpenType is a format for scalable computer fonts. It was built on TrueType, and is a registered trademark of Microsoft. OpenType fonts are used commonly today on the major computer platforms.</p>\r\n<h3>\r\n\tThe Web Open Font Format (WOFF)</h3>\r\n<p>\r\n\tWOFF is a font format for use in web pages. It was developed in 2009, and is now a W3C Recommendation. WOFF is essentially OpenType or TrueType with compression and additional metadata. The goal is to support font distribution from a server to a client over a network with bandwidth constraints.</p>\r\n<h3>\r\n\tThe Web Open Font Format (WOFF 2.0)</h3>\r\n<p>\r\n\tTrueType/OpenType font that provides better compression than WOFF 1.0.</p>\r\n<h3>\r\n\tSVG Fonts/Shapes</h3>\r\n<p>\r\n\tSVG fonts allow SVG to be used as glyphs when displaying text. The SVG 1.1 specification define a font module that allows the creation of fonts within an SVG document. You can also apply CSS to SVG documents, and the @font-face rule can be applied to text in SVG documents.</p>\r\n<h3>\r\n\tEmbedded OpenType Fonts (EOT)</h3>\r\n<p>\r\n\tEOT fonts are a compact form of OpenType fonts designed by Microsoft for use as embedded fonts on web pages.</p>\r\n<h2>\r\n\tBrowser Support for Font Formats</h2>\r\n<p>\r\n\tThe numbers in the table specifies the first browser version that fully supports the font format.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tFont format</th>\r\n\t\t\t<th>\r\n\t\t\t\tInternet Explorer/Edge</th>\r\n\t\t\t<th>\r\n\t\t\t\tChrome</th>\r\n\t\t\t<th>\r\n\t\t\t\tFirefox</th>\r\n\t\t\t<th>\r\n\t\t\t\tSafari</th>\r\n\t\t\t<th>\r\n\t\t\t\tOpera</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tTTF/OTF</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0*</td>\r\n\t\t\t<td>\r\n\t\t\t\t4.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t3.5</td>\r\n\t\t\t<td>\r\n\t\t\t\t3.1</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tWOFF</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t5.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t3.6</td>\r\n\t\t\t<td>\r\n\t\t\t\t5.1</td>\r\n\t\t\t<td>\r\n\t\t\t\t11.1</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tWOFF2</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t35.0*</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t26.0</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tSVG</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t4.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t3.2</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tEOT</td>\r\n\t\t\t<td>\r\n\t\t\t\t6.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t\t<td>\r\n\t\t\t\t<span>Not supported</span></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<p>\r\n\t*IE: The font format only works when set to be &quot;installable&quot;.</p>\r\n<p>\r\n\t*Firefox: Not supported by default, but can be enabled (need to set a flag to &quot;true&quot; to use WOFF2).</p>\r\n<h2>\r\n\tUsing The Font You Want</h2>\r\n<p>\r\n\tIn the <code>@font-face</code> rule; first define a name for the font (e.g. myFirstFont) and then point to the font file.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Always use lowercase letters for the font URL. Uppercase letters can give unexpected results in IE.</p>\r\n</blockquote>\r\n<p>\r\n\tTo use the font for an HTML element, refer to the name of the font (myFirstFont) through the <code>font-family</code> property:</p>\r\n<pre>\r\n<code>@font-face {\r\n  font-family: myFirstFont;\r\n  src: url(sansation_light.woff);\r\n}\r\n\r\ndiv {\r\n  font-family: myFirstFont;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tUsing Bold Text</h2>\r\n<p>\r\n\tYou must add another <code>@font-face</code> rule containing descriptors for bold text:</p>\r\n<pre>\r\n<code>@font-face {\r\n  font-family: myFirstFont;\r\n  src: url(sansation_bold.woff);\r\n  font-weight: bold;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Font Descriptors</h2>\r\n<p>\r\n\tThe following table lists all the font descriptors that can be defined inside the <code>@font-face</code> rule:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tDescriptor</th>\r\n\t\t\t<th>\r\n\t\t\t\tValues</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-family</td>\r\n\t\t\t<td>\r\n\t\t\t\tname</td>\r\n\t\t\t<td>\r\n\t\t\t\tRequired. Defines a name for the font</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tsrc</td>\r\n\t\t\t<td>\r\n\t\t\t\tURL</td>\r\n\t\t\t<td>\r\n\t\t\t\tRequired. Defines the URL of the font file</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-stretch</td>\r\n\t\t\t<td>\r\n\t\t\t\tnormal<br />\r\n\t\t\t\tcondensed<br />\r\n\t\t\t\tultra-condensed<br />\r\n\t\t\t\textra-condensed<br />\r\n\t\t\t\tsemi-condensed<br />\r\n\t\t\t\texpanded<br />\r\n\t\t\t\tsemi-expanded<br />\r\n\t\t\t\textra-expanded<br />\r\n\t\t\t\tultra-expanded</td>\r\n\t\t\t<td>\r\n\t\t\t\tOptional. Defines how the font should be stretched. Default is &quot;normal&quot;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tnormal<br />\r\n\t\t\t\titalic<br />\r\n\t\t\t\toblique</td>\r\n\t\t\t<td>\r\n\t\t\t\tOptional. Defines how the font should be styled. Default is &quot;normal&quot;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tfont-weight</td>\r\n\t\t\t<td>\r\n\t\t\t\tnormal<br />\r\n\t\t\t\tbold<br />\r\n\t\t\t\t100<br />\r\n\t\t\t\t200<br />\r\n\t\t\t\t300<br />\r\n\t\t\t\t400<br />\r\n\t\t\t\t500<br />\r\n\t\t\t\t600<br />\r\n\t\t\t\t700<br />\r\n\t\t\t\t800<br />\r\n\t\t\t\t900</td>\r\n\t\t\t<td>\r\n\t\t\t\tOptional. Defines the boldness of the font. Default is &quot;normal&quot;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tunicode-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tunicode-range</td>\r\n\t\t\t<td>\r\n\t\t\t\tOptional. Defines the range of UNICODE characters the font supports. Default is &quot;U+0-10FFFF&quot;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "2D Transforms": {
            "content": "<h2>\r\n\tCSS Transforms</h2>\r\n<p>\r\n\tCSS transforms allow you to translate, rotate, scale, and skew elements.</p>\r\n<p>\r\n\tA transformation is an effect that lets an element change shape, size and position.</p>\r\n<p>\r\n\tCSS supports 2D and 3D transformations.</p>\r\n<h2>\r\n\tBrowser Support for 2D Transforms</h2>\r\n<p>\r\n\tThe numbers in the table specify the first browser version that fully supports the property.</p>\r\n<p>\r\n\tNumbers followed by -ms-, -webkit-, -moz-, or -o- specify the first version that worked with a prefix.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tChrome</th>\r\n\t\t\t<th>\r\n\t\t\t\tInternet Explorer / Edge</th>\r\n\t\t\t<th>\r\n\t\t\t\tFirefix</th>\r\n\t\t\t<th>\r\n\t\t\t\tSafari</th>\r\n\t\t\t<th>\r\n\t\t\t\tOpera</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0<br />\r\n\t\t\t\t9.0&nbsp;-ms-</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t3.5&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t3.2&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t23.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-<br />\r\n\t\t\t\t12.1<br />\r\n\t\t\t\t10.5&nbsp;-o-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform-origin<br />\r\n\t\t\t\t(two-value syntax)</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0<br />\r\n\t\t\t\t9.0&nbsp;-ms-</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t3.5&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t3.2&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t23.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-<br />\r\n\t\t\t\t12.1<br />\r\n\t\t\t\t10.5&nbsp;-o-</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tCSS 2D Transforms</h2>\r\n<p>\r\n\tIn this chapter you will learn about the following 2D transformation methods:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>translate()</code></li>\r\n\t<li>\r\n\t\t<code>rotate()</code></li>\r\n\t<li>\r\n\t\t<code>scale()</code></li>\r\n\t<li>\r\n\t\t<code>skewX()</code></li>\r\n\t<li>\r\n\t\t<code>skewY()</code></li>\r\n\t<li>\r\n\t\t<code>matrix()</code></li>\r\n</ul>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: You will learn about 3D transformations in the next chapter.</p>\r\n</blockquote>\r\n<h2>\r\n\tThe translate() Method</h2>\r\n<p>\r\n\t[[ image(css-advanced/transform_translate.gif, center) ]]</p>\r\n<p>\r\n\tThe <code>translate()</code> method moves an element from its current position (according to the parameters given for the X-axis and the Y-axis).</p>\r\n<p>\r\n\tThe following example moves the &lt;div&gt; element 50 pixels to the right, and 100 pixels down from its current position:</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: translate(50px, 100px); /* IE 9 */\r\n  -webkit-transform: translate(50px, 100px); /* Safari */\r\n  transform: translate(50px, 100px);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe rotate() Method</h2>\r\n<p>\r\n\t[[ image(css-advanced/transform_rotate.gif, center) ]]</p>\r\n<p>\r\n\tThe <code>rotate()</code> method rotates an element clockwise or counter-clockwise according to a given degree.</p>\r\n<p>\r\n\tThe following example rotates the &lt;div&gt; element clockwise with 20 degrees:</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: rotate(20deg); /* IE 9 */\r\n  -webkit-transform: rotate(20deg); /* Safari */\r\n  transform: rotate(20deg);\r\n}\r\n</code></pre>\r\n<p>\r\n\tUsing negative values will rotate the element counter-clockwise.</p>\r\n<p>\r\n\tThe following example rotates the &lt;div&gt; element counter-clockwise with 20 degrees:</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: rotate(-20deg); /* IE 9 */\r\n  -webkit-transform: rotate(-20deg); /* Safari */\r\n  transform: rotate(-20deg);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe scale() Method</h2>\r\n<p>\r\n\t[[ image(css-advanced/transform_scale.gif, center) ]]</p>\r\n<p>\r\n\tThe <code>scale()</code> method increases or decreases the size of an element (according to the parameters given for the width and height).</p>\r\n<p>\r\n\tThe following example increases the &lt;div&gt; element to be two times of its original width, and three times of its original height:&nbsp;</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: scale(2, 3); /* IE 9 */\r\n  -webkit-transform: scale(2, 3); /* Safari */\r\n  transform: scale(2, 3);\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example decreases the &lt;div&gt; element to be half of its original width and height:&nbsp;</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: scale(0.5, 0.5); /* IE 9 */\r\n  -webkit-transform: scale(0.5, 0.5); /* Safari */\r\n  transform: scale(0.5, 0.5);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe skewX() Method</h2>\r\n<p>\r\n\tThe <code>skewX()</code> method skews an element along the X-axis by the given angle.</p>\r\n<p>\r\n\tThe following example skews the &lt;div&gt; element 20 degrees along the X-axis:</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: skewX(20deg); /* IE 9 */\r\n  -webkit-transform: skewX(20deg); /* Safari */\r\n  transform: skewX(20deg);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe skewY() Method</h2>\r\n<p>\r\n\tThe <code>skewY()</code> method skews an element along the Y-axis by the given angle.</p>\r\n<p>\r\n\tThe following example skews the &lt;div&gt; element 20 degrees along the Y-axis:</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: skewY(20deg); /* IE 9 */\r\n  -webkit-transform: skewY(20deg); /* Safari */\r\n  transform: skewY(20deg);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe skew() Method</h2>\r\n<p>\r\n\tThe <code>skew()</code> method skews an element along the X and Y-axis by the given angles.</p>\r\n<p>\r\n\tThe following example skews the &lt;div&gt; element 20 degrees along the X-axis, and 10 degrees along the Y-axis:</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: skew(20deg, 10deg); /* IE 9 */\r\n  -webkit-transform: skew(20deg, 10deg); /* Safari */\r\n  transform: skew(20deg, 10deg);\r\n}\r\n</code></pre>\r\n<p>\r\n\tIf the second parameter is not specified, it has a zero value. So, the following example skews the &lt;div&gt; element 20 degrees along the X-axis:</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: skew(20deg); /* IE 9 */\r\n  -webkit-transform: skew(20deg); /* Safari */\r\n  transform: skew(20deg);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe matrix() Method</h2>\r\n<p>\r\n\t[[ image(css-advanced/transform_rotate.gif, center) ]]</p>\r\n<p>\r\n\tThe <code>matrix()</code> method combines all the 2D transform methods into one.</p>\r\n<p>\r\n\tThe matrix() method take six parameters, containing mathematic functions, which allows you to rotate, scale, move (translate), and skew elements.</p>\r\n<p>\r\n\tThe parameters are as follow: matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())</p>\r\n<pre>\r\n<code>div {\r\n  -ms-transform: matrix(1, -0.3, 0, 1, 0, 0); /* IE 9 */\r\n  -webkit-transform: matrix(1, -0.3, 0, 1, 0, 0); /* Safari */\r\n  transform: matrix(1, -0.3, 0, 1, 0, 0);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Transform Properties</h2>\r\n<p>\r\n\tThe following table lists all the 2D transform properties:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform</td>\r\n\t\t\t<td>\r\n\t\t\t\tApplies a 2D or 3D transformation to an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform-origin</td>\r\n\t\t\t<td>\r\n\t\t\t\tAllows you to change the position on transformed elements</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\t2D Transform Methods</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tFunction</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmatrix(n,n,n,n,n,n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D transformation, using a matrix of six values</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttranslate(x,y)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D translation, moving the element along the X- and the Y-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttranslateX(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D translation, moving the element along the X-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttranslateY(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D translation, moving the element along the Y-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tscale(x,y)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D scale transformation, changing the elements width and height</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tscaleX(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D scale transformation, changing the element&#39;s width</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tscaleY(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D scale transformation, changing the element&#39;s height</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\trotate(angle)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D rotation, the angle is specified in the parameter</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tskew(x-angle,y-angle)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D skew transformation along the X- and the Y-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tskewX(angle)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D skew transformation along the X-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tskewY(angle)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 2D skew transformation along the Y-axis</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "3D Transforms": {
            "content": "<h2>\r\n\tCSS 3D Transforms</h2>\r\n<p>\r\n\tCSS allows you to format your elements using 3D transformations.</p>\r\n<h2>\r\n\tBrowser Support for 3D Transforms</h2>\r\n<p>\r\n\tThe numbers in the table specify the first browser version that fully supports the property.</p>\r\n<p>\r\n\tNumbers followed by -webkit-, -moz-, or -o- specify the first version that worked with a prefix.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tChrome</th>\r\n\t\t\t<th>\r\n\t\t\t\tInternet Explorer / Edge</th>\r\n\t\t\t<th>\r\n\t\t\t\tFirefox</th>\r\n\t\t\t<th>\r\n\t\t\t\tSafari</th>\r\n\t\t\t<th>\r\n\t\t\t\tOpera</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0<br />\r\n\t\t\t\t12.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t10.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t23.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform-origin<br />\r\n\t\t\t\t(three-value syntax)</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0<br />\r\n\t\t\t\t12.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t10.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t23.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform-style</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0<br />\r\n\t\t\t\t12.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t11.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t10.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t23.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tperspective</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0<br />\r\n\t\t\t\t12.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t10.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t23.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tperspective-origin</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0<br />\r\n\t\t\t\t12.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t10.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t23.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbackface-visibility</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0<br />\r\n\t\t\t\t12.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t10.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t23.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tCSS 3D Transforms</h2>\r\n<p>\r\n\tIn this chapter you will learn about the following 3D transformation methods:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>rotateX()</code></li>\r\n\t<li>\r\n\t\t<code>rotateY()</code></li>\r\n\t<li>\r\n\t\t<code>rotateZ()</code></li>\r\n</ul>\r\n<h2>\r\n\tThe rotateX() Method</h2>\r\n<p>\r\n\t[[ image(css-advanced/transform_rotatex.gif, center) ]]</p>\r\n<p>\r\n\tThe <code>rotateX()</code> method rotates an element around its X-axis at a given degree:</p>\r\n<pre>\r\n<code>#myDiv {\r\n  -webkit-transform: rotateX(150deg); /* Safari */\r\n  transform: rotateX(150deg);\r\n}</code></pre>\r\n<h2>\r\n\tThe rotateY() Method</h2>\r\n<p>\r\n\t[[ image(css-advanced/transform_rotatey.gif, center) ]]</p>\r\n<p>\r\n\tThe <code>rotateY()</code> method rotates an element around its Y-axis at a given degree:</p>\r\n<pre>\r\n<code>#myDiv {\r\n  -webkit-transform: rotateY(130deg); /* Safari */\r\n  transform: rotateY(130deg);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tThe rotateZ() Method</h2>\r\n<p>\r\n\tThe <code>rotateZ()</code> method rotates an element around its Z-axis at a given degree:</p>\r\n<pre>\r\n<code>#myDiv {\r\n  -webkit-transform: rotateZ(90deg); /* Safari */\r\n  transform: rotateZ(90deg);\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Transform Properties</h2>\r\n<p>\r\n\tThe following table lists all the 3D transform properties:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform</td>\r\n\t\t\t<td>\r\n\t\t\t\tApplies a 2D or 3D transformation to an element</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform-origin</td>\r\n\t\t\t<td>\r\n\t\t\t\tAllows you to change the position on transformed elements</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransform-style</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how nested elements are rendered in 3D space</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tperspective</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the perspective on how 3D elements are viewed</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tperspective-origin</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the bottom position of 3D elements</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tbackface-visibility</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines whether or not an element should be visible when not facing the screen</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\t3D Transform Methods</h2>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tFunction</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tmatrix3d<br />\r\n\t\t\t\t(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D transformation, using a 4x4 matrix of 16 values</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttranslate3d(x,y,z)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D translation</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttranslateX(x)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D translation, using only the value for the X-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttranslateY(y)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D translation, using only the value for the Y-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttranslateZ(z)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D translation, using only the value for the Z-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tscale3d(x,y,z)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D scale transformation</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tscaleX(x)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D scale transformation by giving a value for the X-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tscaleY(y)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D scale transformation by giving a value for the Y-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tscaleZ(z)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D scale transformation by giving a value for the Z-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\trotate3d(x,y,z,angle)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D rotation</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\trotateX(angle)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D rotation along the X-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\trotateY(angle)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D rotation along the Y-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\trotateZ(angle)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a 3D rotation along the Z-axis</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tperspective(n)</td>\r\n\t\t\t<td>\r\n\t\t\t\tDefines a perspective view for a 3D transformed element</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Transitions": {
            "content": "<h2>\r\n\tCSS Transitions</h2>\r\n<p>\r\n\tCSS transitions allows you to change property values smoothly (from one value to another), over a given duration.</p>\r\n<h2>\r\n\tBrowser Support for Transitions</h2>\r\n<p>\r\n\tThe numbers in the table specify the first browser version that fully supports the property.</p>\r\n<p>\r\n\tNumbers followed by -webkit-, -moz-, or -o- specify the first version that worked with a prefix.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tChrome</th>\r\n\t\t\t<th>\r\n\t\t\t\tInternet Explorer / Edge</th>\r\n\t\t\t<th>\r\n\t\t\t\tFirefox</th>\r\n\t\t\t<th>\r\n\t\t\t\tSafari</th>\r\n\t\t\t<th>\r\n\t\t\t\tOpera</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition</td>\r\n\t\t\t<td>\r\n\t\t\t\t26.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t4.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t6.1<br />\r\n\t\t\t\t3.1&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t12.1<br />\r\n\t\t\t\t10.5&nbsp;-o-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition-delay</td>\r\n\t\t\t<td>\r\n\t\t\t\t26.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t4.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t6.1<br />\r\n\t\t\t\t3.1&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t12.1<br />\r\n\t\t\t\t10.5&nbsp;-o-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition-duration</td>\r\n\t\t\t<td>\r\n\t\t\t\t26.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t4.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t6.1<br />\r\n\t\t\t\t3.1&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t12.1<br />\r\n\t\t\t\t10.5&nbsp;-o-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition-property</td>\r\n\t\t\t<td>\r\n\t\t\t\t26.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t4.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t6.1<br />\r\n\t\t\t\t3.1&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t12.1<br />\r\n\t\t\t\t10.5&nbsp;-o-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition-timing-function</td>\r\n\t\t\t<td>\r\n\t\t\t\t26.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t4.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t6.1<br />\r\n\t\t\t\t3.1&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t12.1<br />\r\n\t\t\t\t10.5&nbsp;-o-</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tHow to Use CSS Transitions?</h2>\r\n<p>\r\n\tTo create a transition effect, you must specify two things:</p>\r\n<ul>\r\n\t<li>\r\n\t\tthe CSS property you want to add an effect to</li>\r\n\t<li>\r\n\t\tthe duration of the effect</li>\r\n</ul>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: If the duration part is not specified, the transition will have no effect, because the default value is 0.</p>\r\n</blockquote>\r\n<p>\r\n\tThe following example shows a 100px * 100px red &lt;div&gt; element. The &lt;div&gt; element has also specified a transition effect for the width property, with a duration of 2 seconds:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  background: red;\r\n  -webkit-transition: width 2s; /* Safari */\r\n  transition: width 2s;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe transition effect will start when the specified CSS property (width) changes value.</p>\r\n<p>\r\n\tNow, let us specify a new value for the width property when a user mouses over the &lt;div&gt; element:</p>\r\n<pre>\r\n<code>div:hover {\r\n  width: 300px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tNotice that when the cursor mouses out of the element, it will gradually change back to its original style.</p>\r\n<h2>\r\n\tChange Several Property Values</h2>\r\n<p>\r\n\tThe following example adds a transition effect for both the width and height property, with a duration of 2 seconds for the width and 4 seconds for the height:</p>\r\n<pre>\r\n<code>div {\r\n  -webkit-transition: width 2s, height 4s; /* Safari */\r\n  transition: width 2s, height 4s;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tSpecify the Speed Curve of the Transition</h2>\r\n<p>\r\n\tThe <code>transition-timing-function</code> property specifies the speed curve of the transition effect.</p>\r\n<p>\r\n\tThe transition-timing-function property can have the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>ease</code> - specifies a transition effect with a slow start, then fast, then end slowly (this is default)</li>\r\n\t<li>\r\n\t\t<code>linear</code> - specifies a transition effect with the same speed from start to end</li>\r\n\t<li>\r\n\t\t<code>ease-in</code> - specifies a transition effect with a slow start</li>\r\n\t<li>\r\n\t\t<code>ease-out</code> - specifies a transition effect with a slow end</li>\r\n\t<li>\r\n\t\t<code>ease-in-out</code> - specifies a transition effect with a slow start and end</li>\r\n\t<li>\r\n\t\t<code>cubic-bezier(n,n,n,n)</code> - lets you define your own values in a cubic-bezier function</li>\r\n</ul>\r\n<p>\r\n\tThe following example shows the some of the different speed curves that can be used:</p>\r\n<pre>\r\n<code>#div1 {transition-timing-function: linear;}\r\n#div2 {transition-timing-function: ease;}\r\n#div3 {transition-timing-function: ease-in;}\r\n#div4 {transition-timing-function: ease-out;}\r\n#div5 {transition-timing-function: ease-in-out;}\r\n</code></pre>\r\n<h2>\r\n\tDelay the Transition Effect</h2>\r\n<p>\r\n\tThe <code>transition-delay</code> property specifies a delay (in seconds) for the transition effect.</p>\r\n<p>\r\n\tThe following example has a 1 second delay before starting:</p>\r\n<pre>\r\n<code>div {\r\n  -webkit-transition-delay: 1s; /* Safari */\r\n  transition-delay: 1s;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTransition + Transformation</h2>\r\n<p>\r\n\tThe following example adds a transition effect to the transformation:</p>\r\n<pre>\r\n<code>div {\r\n  -webkit-transition: width 2s, height 2s, -webkit-transform 2s; /* Safari */\r\n  transition: width 2s, height 2s, transform 2s;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tMore Transition Examples</h2>\r\n<p>\r\n\tThe CSS transition properties can be specified one by one, like this:</p>\r\n<pre>\r\n<code>div {\r\n  transition-property: width;\r\n  transition-duration: 2s;\r\n  transition-timing-function: linear;\r\n  transition-delay: 1s;\r\n}\r\n</code></pre>\r\n<p>\r\n\tor by using the shorthand property <code>transition</code>:</p>\r\n<pre>\r\n<code>div {\r\n  transition: width 2s linear 1s;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Transition Properties</h2>\r\n<p>\r\n\tThe following table lists all the CSS transition properties:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition</td>\r\n\t\t\t<td>\r\n\t\t\t\tA shorthand property for setting the four transition properties into a single property</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition-delay</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies a delay (in seconds) for the transition effect</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition-duration</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how many seconds or milliseconds a transition effect takes to complete</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition-property</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the name of the CSS property the transition effect is for</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\ttransition-timing-function</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the speed curve of the transition effect</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Animations": {
            "content": "<h2>\r\n\tCSS Animations</h2>\r\n<p>\r\n\tCSS animations allows animation of most HTML elements without using JavaScript or Flash!</p>\r\n<h2>\r\n\tBrowser Support for Animations</h2>\r\n<p>\r\n\tThe numbers in the table specify the first browser version that fully supports the property.</p>\r\n<p>\r\n\tNumbers followed by -webkit-, -moz-, or -o- specify the first version that worked with a prefix.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tChrome</th>\r\n\t\t\t<th>\r\n\t\t\t\tInternet Explorer / Edge</th>\r\n\t\t\t<th>\r\n\t\t\t\tFirefox</th>\r\n\t\t\t<th>\r\n\t\t\t\tSafari</th>\r\n\t\t\t<th>\r\n\t\t\t\tOpera</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t@keyframes</td>\r\n\t\t\t<td>\r\n\t\t\t\t43.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t5.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t30.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-<br />\r\n\t\t\t\t12.0 -o-</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation</td>\r\n\t\t\t<td>\r\n\t\t\t\t43.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t10.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0<br />\r\n\t\t\t\t5.0&nbsp;-moz-</td>\r\n\t\t\t<td>\r\n\t\t\t\t9.0<br />\r\n\t\t\t\t4.0&nbsp;-webkit-</td>\r\n\t\t\t<td>\r\n\t\t\t\t30.0<br />\r\n\t\t\t\t15.0&nbsp;-webkit-<br />\r\n\t\t\t\t12.0&nbsp;-o-</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tWhat are CSS Animations?</h2>\r\n<p>\r\n\tAn animation lets an element gradually change from one style to another.</p>\r\n<p>\r\n\tYou can change as many CSS properties you want, as many times you want.</p>\r\n<p>\r\n\tTo use CSS animation, you must first specify some keyframes for the animation.</p>\r\n<p>\r\n\tKeyframes hold what styles the element will have at certain times.</p>\r\n<h2>\r\n\tThe @keyframes Rule</h2>\r\n<p>\r\n\tWhen you specify CSS styles inside the <code>@keyframes</code> rule, the animation will gradually change from the current style to the new style at certain times.</p>\r\n<p>\r\n\tTo get an animation to work, you must bind the animation to an element.</p>\r\n<p>\r\n\tThe following example binds the &quot;example&quot; animation to the &lt;div&gt; element. The animation will last for 4 seconds, and it will gradually change the background-color of the &lt;div&gt; element from &quot;red&quot; to &quot;yellow&quot;:</p>\r\n<pre>\r\n<code>/* The animation code */\r\n@keyframes example {\r\n  from {background-color: red;}\r\n  to {background-color: yellow;}\r\n}\r\n\r\n/* The element to apply the animation to */\r\ndiv {\r\n  width: 100px;\r\n  height: 100px;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The <code>animation-duration</code> property defines how long time an animation should take to complete. If the <code>animation-duration</code> property is not specified, no animation will occur, because the default value is 0s (0 seconds).&nbsp;</p>\r\n</blockquote>\r\n<p>\r\n\tIn the example above we have specified when the style will change by using the keywords &quot;from&quot; and &quot;to&quot; (which represents 0% (start) and 100% (complete)).</p>\r\n<p>\r\n\tIt is also possible to use percent. By using percent, you can add as many style changes as you like.</p>\r\n<p>\r\n\tThe following example will change the background-color of the &lt;div&gt; element when the animation is 25% complete, 50% complete, and again when the animation is 100% complete:</p>\r\n<pre>\r\n<code>/* The animation code */\r\n@keyframes example {\r\n  0%   {background-color: red;}\r\n  25%  {background-color: yellow;}\r\n  50%  {background-color: blue;}\r\n  100% {background-color: green;}\r\n}\r\n\r\n/* The element to apply the animation to */\r\ndiv {\r\n  width: 100px;\r\n  height: 100px;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example will change both the background-color and the position of the &lt;div&gt; element when the animation is 25% complete, 50% complete, and again when the animation is 100% complete:</p>\r\n<pre>\r\n<code>/* The animation code */\r\n@keyframes example {\r\n  0%   {background-color:red; left:0px; top:0px;}\r\n  25%  {background-color:yellow; left:200px; top:0px;}\r\n  50%  {background-color:blue; left:200px; top:200px;}\r\n  75%  {background-color:green; left:0px; top:200px;}\r\n  100% {background-color:red; left:0px; top:0px;}\r\n}\r\n\r\n/* The element to apply the animation to */\r\ndiv {\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tDelay an Animation</h2>\r\n<p>\r\n\tThe <code>animation-delay</code> property specifies a delay for the start of an animation.</p>\r\n<p>\r\n\tThe following example has a 2 seconds delay before starting the animation:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n  animation-delay: 2s;\r\n}\r\n</code></pre>\r\n<p>\r\n\tNegative values are also allowed. If using negative values, the animation will start as if it had already been playing for N seconds.</p>\r\n<p>\r\n\tIn the following example, the animation will start as if it had already been playing for 2 seconds:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n  animation-delay: -2s;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tSet How Many Times an Animation Should Run</h2>\r\n<p>\r\n\tThe <code>animation-iteration-count</code> property specifies the number of times an animation should run.</p>\r\n<p>\r\n\tThe following example will run the animation 3 times before it stops:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n  animation-iteration-count: 3;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example uses the value &quot;infinite&quot; to make the animation continue for ever:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n  animation-iteration-count: infinite;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tRun Animation in Reverse Direction or Alternate Cycles</h2>\r\n<p>\r\n\tThe <code>animation-direction</code> property specifies whether an animation should be played forwards, backwards or in alternate cycles.</p>\r\n<p>\r\n\tThe animation-direction property can have the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>normal</code> - The animation is played as normal (forwards). This is default</li>\r\n\t<li>\r\n\t\t<code>reverse</code> - The animation is played in reverse direction (backwards)</li>\r\n\t<li>\r\n\t\t<code>alternate </code>- The animation is played forwards first, then backwards</li>\r\n\t<li>\r\n\t\t<code>alternate-reverse</code> - The animation is played backwards first, then forwards</li>\r\n</ul>\r\n<p>\r\n\tThe following example will run the animation in reverse direction (backwards):</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n  animation-direction: reverse;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example uses the value &quot;alternate&quot; to make the animation run forwards first, then backwards:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n  animation-iteration-count: 2;\r\n  animation-direction: alternate;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example uses the value &quot;alternate-reverse&quot; to make the animation run backwards first, then forwards:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  background-color: red;\r\n  animation-name: example;\r\n  animation-duration: 4s;\r\n  animation-iteration-count: 2;\r\n  animation-direction: alternate-reverse;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tSpecify the Speed Curve of the Animation</h2>\r\n<p>\r\n\tThe <code>animation-timing-function</code> property specifies the speed curve of the animation.</p>\r\n<p>\r\n\tThe animation-timing-function property can have the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>ease</code> - Specifies an animation with a slow start, then fast, then end slowly (this is default)</li>\r\n\t<li>\r\n\t\t<code>linear</code> - Specifies an animation with the same speed from start to end</li>\r\n\t<li>\r\n\t\t<code>ease-in</code> - Specifies an animation with a slow start</li>\r\n\t<li>\r\n\t\t<code>ease-out</code> - Specifies an animation with a slow end</li>\r\n\t<li>\r\n\t\t<code>ease-in-out</code> - Specifies an animation with a slow start and end</li>\r\n\t<li>\r\n\t\t<code>cubic-bezier(n,n,n,n)</code> - Lets you define your own values in a cubic-bezier function</li>\r\n</ul>\r\n<p>\r\n\tThe following example shows the some of the different speed curves that can be used:</p>\r\n<pre>\r\n<code>#div1 {animation-timing-function: linear;}\r\n#div2 {animation-timing-function: ease;}\r\n#div3 {animation-timing-function: ease-in;}\r\n#div4 {animation-timing-function: ease-out;}\r\n#div5 {animation-timing-function: ease-in-out;}\r\n</code></pre>\r\n<h2>\r\n\tSpecify the fill-mode For an Animation</h2>\r\n<p>\r\n\tCSS animations do not affect an element before the first keyframe is played or after the last keyframe is played. The animation-fill-mode property can override this behavior.</p>\r\n<p>\r\n\tThe <code>animation-fill-mode</code> property specifies a style for the target element when the animation is not playing (before it starts, after it ends, or both).</p>\r\n<p>\r\n\tThe animation-fill-mode property can have the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>none</code> - Default value. Animation will not apply any styles to the element before or after it is executing</li>\r\n\t<li>\r\n\t\t<code>forwards</code> - The element will retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count)</li>\r\n\t<li>\r\n\t\t<code>backwards</code> - The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period</li>\r\n\t<li>\r\n\t\t<code>both</code> - The animation will follow the rules for both forwards and backwards, extending the animation properties in both directions</li>\r\n</ul>\r\n<p>\r\n\tThe following example lets the &lt;div&gt; element retain the style values from the last keyframe when the animation ends:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  background: red;\r\n  position: relative;\r\n  animation-name: example;\r\n  animation-duration: 3s;\r\n  animation-fill-mode: forwards;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example lets the &lt;div&gt; element get the style values set by the first keyframe before the animation starts (during the animation-delay period):</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  background: red;\r\n  position: relative;\r\n  animation-name: example;\r\n  animation-duration: 3s;\r\n  animation-delay: 2s;\r\n  animation-fill-mode: backwards;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe following example lets the &lt;div&gt; element get the style values set by the first keyframe before the animation starts, and retain the style values from the last keyframe when the animation ends:</p>\r\n<pre>\r\n<code>div {\r\n  width: 100px;\r\n  height: 100px;\r\n  background: red;\r\n  position: relative;\r\n  animation-name: example;\r\n  animation-duration: 3s;\r\n  animation-delay: 2s;\r\n  animation-fill-mode: both;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tAnimation Shorthand Property</h2>\r\n<p>\r\n\tThe example below uses six of the animation properties:</p>\r\n<pre>\r\n<code>div {\r\n  animation-name: example;\r\n  animation-duration: 5s;\r\n  animation-timing-function: linear;\r\n  animation-delay: 2s;\r\n  animation-iteration-count: infinite;\r\n  animation-direction: alternate;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThe same animation effect as above can be achieved by using the shorthand <code>animation</code> property:</p>\r\n<pre>\r\n<code>div {\r\n  animation: example 5s linear 2s infinite alternate;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tCSS Animation Properties</h2>\r\n<p>\r\n\tThe following table lists the @keyframes rule and all the CSS animation properties:</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tDescription</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t@keyframes</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the animation code</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation</td>\r\n\t\t\t<td>\r\n\t\t\t\tA shorthand property for setting all the animation properties</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation-delay</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies a delay for the start of an animation</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation-direction</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies whether an animation should be played forwards, backwards or in alternate cycles</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation-duration</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies how long time an animation should take to complete one cycle</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation-fill-mode</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies a style for the element when the animation is not playing (before it starts, after it ends, or both)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation-iteration-count</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the number of times an animation should be played</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation-name</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the name of the @keyframes animation</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation-play-state</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies whether the animation is running or paused</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tanimation-timing-function</td>\r\n\t\t\t<td>\r\n\t\t\t\tSpecifies the speed curve of the animation</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>"
          }
        },
        {
          "Tooltip": {
            "content": "<h2>\r\n\tDemo: Tooltip Examples</h2>\r\n<p>\r\n\tA tooltip is often used to specify extra information about something when the user moves the mouse pointer over an element.</p>\r\n<h2>\r\n\tBasic Tooltip</h2>\r\n<p>\r\n\tCreate a tooltip that appears when the user moves the mouse over an element:</p>\r\n<pre>\r\n<code>&lt;style&gt;\r\n/* Tooltip container */\r\n.tooltip {\r\n  position: relative;\r\n  display: inline-block;\r\n  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */\r\n}\r\n\r\n/* Tooltip text */\r\n.tooltip .tooltiptext {\r\n  visibility: hidden;\r\n  width: 120px;\r\n  background-color: black;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 5px 0;\r\n  border-radius: 6px;\r\n \r\n  /* Position the tooltip text - see examples below! */\r\n  position: absolute;\r\n  z-index: 1;\r\n}\r\n\r\n/* Show the tooltip text when you mouse over the tooltip container */\r\n.tooltip:hover .tooltiptext {\r\n  visibility: visible;\r\n}\r\n&lt;/style&gt;\r\n\r\n&lt;div class=&quot;tooltip&quot;&gt;Hover over me\r\n  &lt;span class=&quot;tooltiptext&quot;&gt;Tooltip text&lt;/span&gt;\r\n&lt;/div&gt;\r\n</code></pre>\r\n<h3>\r\n\tExample Explained</h3>\r\n<p>\r\n\tHTML: Use a container element (like &lt;div&gt;) and add the <code>&quot;tooltip&quot;</code> class to it. When the user mouse over this &lt;div&gt;, it will show the tooltip text.</p>\r\n<p>\r\n\tThe tooltip text is placed inside an inline element (like &lt;span&gt;) with <code>class=&quot;tooltiptext&quot;</code>.</p>\r\n<p>\r\n\tCSS: The <code>tooltip</code> class use <code>position:relative</code>, which is needed to position the tooltip text (<code>position:absolute</code>). Note: See examples below on how to position the tooltip.</p>\r\n<p>\r\n\tThe <code>tooltiptext</code> class holds the actual tooltip text. It is hidden by default, and will be visible on hover (see below). We have also added some basic styles to it: 120px width, black background color, white text color, centered text, and 5px top and bottom padding.</p>\r\n<p>\r\n\tThe CSS <code>border-radius</code> property is used to add rounded corners to the tooltip text.</p>\r\n<p>\r\n\tThe <code>:hover</code> selector is used to show the tooltip text when the user moves the mouse over the &lt;div&gt; with <code>class=&quot;tooltip&quot;</code>.</p>\r\n<h2>\r\n\tPositioning Tooltips</h2>\r\n<p>\r\n\tIn this example, the tooltip is placed to the right (<code>left:105%</code>) of the &quot;hoverable&quot; text (&lt;div&gt;). Also note that <code>top:-5px</code> is used to place it in the middle of its container element. We use the number 5 because the tooltip text has a top and bottom padding of 5px. If you increase its padding, also increase the value of the <code>top</code> property to ensure that it stays in the middle (if this is something you want). The same applies if you want the tooltip placed to the left.</p>\r\n<h3>\r\n\tRight Tooltip</h3>\r\n<pre>\r\n<code>.tooltip .tooltiptext {\r\n  top: -5px;\r\n  left: 105%; \r\n}\r\n</code></pre>\r\n<h3>\r\n\tLeft Tooltip</h3>\r\n<pre>\r\n<code>.tooltip .tooltiptext {\r\n  top: -5px;\r\n  right: 105%; \r\n}\r\n</code></pre>\r\n<p>\r\n\tIf you want the tooltip to appear on top or on the bottom, see examples below. Note that we use the <code>margin-left</code> property with a value of minus 60 pixels. This is to center the tooltip above/below the hoverable text. It is set to the half of the tooltip&#39;s width (120/2 = 60).</p>\r\n<h3>\r\n\tTop Tooltip</h3>\r\n<pre>\r\n<code>.tooltip .tooltiptext {\r\n  width: 120px;\r\n  bottom: 100%;\r\n  left: 50%; \r\n  margin-left: -60px; /* Use half of the width (120/2 = 60), to center the tooltip */\r\n}\r\n</code></pre>\r\n<h3>\r\n\tBottom Tooltip</h3>\r\n<pre>\r\n<code>.tooltip .tooltiptext {\r\n  width: 120px;\r\n  top: 100%;\r\n  left: 50%; \r\n  margin-left: -60px; /* Use half of the width (120/2 = 60), to center the tooltip */\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTooltip Arrows</h2>\r\n<p>\r\n\tTo create an arrow that should appear from a specific side of the tooltip, add &quot;empty&quot; content after tooltip, with the pseudo-element class <code>::after</code> together with the <code>content</code> property. The arrow itself is created using borders. This will make the tooltip look like a speech bubble.</p>\r\n<p>\r\n\tThis example demonstrates how to add an arrow to the bottom of the tooltip:</p>\r\n<h3>\r\n\tBottom Arrow</h3>\r\n<pre>\r\n<code>.tooltip .tooltiptext::after {\r\n  content: &quot; &quot;;\r\n  position: absolute;\r\n  top: 100%; /* At the bottom of the tooltip */\r\n  left: 50%;\r\n  margin-left: -5px;\r\n  border-width: 5px;\r\n  border-style: solid;\r\n  border-color: black transparent transparent transparent;\r\n}\r\n</code></pre>\r\n<h3>\r\n\tExample Explained</h3>\r\n<p>\r\n\tPosition the arrow inside the tooltip: <code>top: 100%</code> will place the arrow at the bottom of the tooltip. <code>left: 50%</code> will center the arrow.</p>\r\n<p>\r\n\tNote: The <code>border-width</code> property specifies the size of the arrow. If you change this, also change the <code>margin-left</code> value to the same. This will keep the arrow centered.</p>\r\n<p>\r\n\tThe <code>border-color</code> is used to transform the content into an arrow. We set the top border to black, and the rest to transparent. If all sides were black, you would end up with a black square box.</p>\r\n<p>\r\n\tThis example demonstrates how to add an arrow to the top of the tooltip. Notice that we set the bottom border color this time:</p>\r\n<h3>\r\n\tTop Arrow</h3>\r\n<pre>\r\n<code>.tooltip .tooltiptext::after {\r\n  content: &quot; &quot;;\r\n  position: absolute;\r\n  bottom: 100%;  /* At the top of the tooltip */\r\n  left: 50%;\r\n  margin-left: -5px;\r\n  border-width: 5px;\r\n  border-style: solid;\r\n  border-color: transparent transparent black transparent;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThis example demonstrates how to add an arrow to the left of the tooltip:</p>\r\n<h3>\r\n\tLeft Arrow</h3>\r\n<pre>\r\n<code>.tooltip .tooltiptext::after {\r\n  content: &quot; &quot;;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 100%; /* To the left of the tooltip */\r\n  margin-top: -5px;\r\n  border-width: 5px;\r\n  border-style: solid;\r\n  border-color: transparent black transparent transparent;\r\n}\r\n</code></pre>\r\n<p>\r\n\tThis example demonstrates how to add an arrow to the right of the tooltip:</p>\r\n<h3>\r\n\tRight Arrow</h3>\r\n<pre>\r\n<code>.tooltip .tooltiptext::after {\r\n  content: &quot; &quot;;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 100%; /* To the right of the tooltip */\r\n  margin-top: -5px;\r\n  border-width: 5px;\r\n  border-style: solid;\r\n  border-color: transparent transparent transparent black;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tFade In Tooltips (Animation)</h2>\r\n<p>\r\n\tIf you want to fade in the tooltip text when it is about to be visible, you can use the CSS <code>transition</code> property together with the <code>opacity</code> property, and go from being completely invisible to 100% visible, in a number of specified seconds (1 second in our example):</p>\r\n<pre>\r\n<code>.tooltip .tooltiptext {\r\n  opacity: 0;\r\n  transition: opacity 1s;\r\n}\r\n\r\n.tooltip:hover .tooltiptext {\r\n  opacity: 1;\r\n}</code></pre>"
          }
        },
        {
          "Styling Images": {
            "content": "<p>\r\n\tLearn how to style images using CSS.</p>\r\n<h2>\r\n\tRounded Images</h2>\r\n<p>\r\n\tUse the <code>border-radius</code> property to create rounded images:</p>\r\n<table style=\"width:100%; clear:both;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width:50%; padding-right:10px; vertical-align:top;\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tRounded Image:</h3>\r\n\t\t\t\t<pre>\r\n\t\t\t\t<code>img {\r\n  border-radius: 8px;\r\n}\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width:50%;padding-left:10px;vertical-align:top;\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tCircled Image:</h3>\r\n\t\t\t\t<pre>\r\n\t\t\t\t<code>img {\r\n  border-radius: 50%;\r\n}\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tThumbnail Images</h2>\r\n<p>\r\n\tUse the <code>border</code> property to create thumbnail images.</p>\r\n<table style=\"width:100%; clear:both;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width:50%; padding-right:10px; vertical-align:top;\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tThumbnail Image:</h3>\r\n\t\t\t\t<pre>\r\n\t\t\t\t<code>img {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n  width: 150px;\r\n}\r\n\r\n&lt;img src=&quot;paris.jpg&quot; alt=&quot;Paris&quot;&gt;\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width:50%;padding-left:10px;vertical-align:top;\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tThumbnail Image as Link:</h3>\r\n\t\t\t\t<pre>\r\n\t\t\t\t<code>img {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n  width: 150px;\r\n}\r\n\r\nimg:hover {\r\n  box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);\r\n}\r\n\r\n&lt;a href=&quot;paris.jpg&quot;&gt;\r\n  &lt;img src=&quot;paris.jpg&quot; alt=&quot;Paris&quot;&gt;\r\n&lt;/a&gt;\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tResponsive Images</h2>\r\n<p>\r\n\tResponsive images will automatically adjust to fit the size of the screen.</p>\r\n<p>\r\n\tIf you want an image to scale down if it has to, but never scale up to be larger than its original size, add the following:</p>\r\n<pre>\r\n<code>img {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Read more about Responsive Web Design in our <a href=\"css_rwd_intro.asp\" target=\"_blank\">CSS RWD Tutorial</a>.</p>\r\n</blockquote>\r\n<h2>\r\n\tCenter an Image</h2>\r\n<p>\r\n\tTo center an image, set left and right margin to <code>auto</code> and make it into a <code>block</code> element:</p>\r\n<pre>\r\n<code>img {\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 50%;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tPolaroid Images / Cards</h2>\r\n<pre>\r\n<code>div.polaroid {\r\n  width: 80%;\r\n  background-color: white;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n}\r\n\r\nimg {width: 100%}\r\n\r\ndiv.container {\r\n  text-align: center;\r\n  padding: 10px 20px;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tTransparent Image</h2>\r\n<p>\r\n\tThe <code>opacity</code> property can take a value from 0.0 - 1.0. The lower value, the more transparent.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: IE8 and earlier use <code>filter:alpha(opacity=x)</code>. The x can take a value from 0 - 100. A lower value makes the element more transparent.</p>\r\n</blockquote>\r\n<pre>\r\n<code>img {\r\n  opacity: 0.5;\r\n  filter: alpha(opacity=50); /* For IE8 and earlier */\r\n}</code></pre>\r\n<h2>\r\n\tImage Filters</h2>\r\n<p>\r\n\tThe CSS <code>filter</code> property adds visual effects (like blur and saturation) to an element.</p>\r\n<blockquote>\r\n\t<p>\r\n\t\tNote: The filter property is not supported in Internet Explorer, Edge 12, or Safari 5.1 and earlier.</p>\r\n</blockquote>\r\n<h3>\r\n\tExample</h3>\r\n<p>\r\n\tChange the color of all images to black and white (100% gray):</p>\r\n<pre>\r\n<code>img {\r\n  -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */\r\n  filter: grayscale(100%);\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Go to our <a href=\"/cssref/css3_pr_filter.asp\" target=\"_blank\">CSS filter Reference</a> to learn more about CSS filters.</p>\r\n</blockquote>\r\n<h2>\r\n\tFlip an Image</h2>\r\n<pre>\r\n<code>img:hover {\r\n  -webkit-transform: scaleX(-1);\r\n  transform: scaleX(-1);\r\n}</code></pre>\r\n<h2>\r\n\tResponsive Image Gallery</h2>\r\n<p>\r\n\tCSS can be used to create image galleries. This example use media queries to re-arrange the images on different screen sizes.</p>\r\n<pre>\r\n<code>.responsive {\r\n  padding: 0 6px;\r\n  float: left;\r\n  width: 24.99999%;\r\n}\r\n\r\n@media only screen and (max-width: 700px){\r\n  .responsive {\r\n    width: 49.99999%;\r\n    margin: 6px 0;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 500px){\r\n  .responsive {\r\n    width: 100%;\r\n  }\r\n}\r\n</code></pre>\r\n<blockquote>\r\n\t<p>\r\n\t\tTip: Read more about Responsive Web Design in our <a href=\"css_rwd_intro.asp\" target=\"_blank\">CSS RWD Tutorial</a>.</p>\r\n</blockquote>\r\n<h2>\r\n\tImage Modal (Advanced)</h2>\r\n<p>\r\n\tThis is an example to demonstrate how CSS and JavaScript can work together.</p>\r\n<p>\r\n\tFirst, use CSS to create a modal window (dialog box), and hide it by default.</p>\r\n<p>\r\n\tThen, use a JavaScript to show the modal window and to display the image inside the modal, when a user clicks on the image:</p>\r\n<pre>\r\n<code>// Get the modal\r\nvar modal = document.getElementById(&#39;myModal&#39;);\r\n\r\n// Get the image and insert it inside the modal - use its &quot;alt&quot; text as a caption\r\nvar img = document.getElementById(&#39;myImg&#39;);\r\nvar modalImg = document.getElementById(&quot;img01&quot;);\r\nvar captionText = document.getElementById(&quot;caption&quot;);\r\nimg.onclick = function(){\r\n  modal.style.display = &quot;block&quot;;\r\n  modalImg.src = this.src;\r\n  captionText.innerHTML = this.alt;\r\n}\r\n\r\n// Get the &lt;span&gt; element that closes the modal\r\nvar span = document.getElementsByClassName(&quot;close&quot;)[0];\r\n\r\n// When the user clicks on &lt;span&gt; (x), close the modal\r\nspan.onclick = function() { \r\n  modal.style.display = &quot;none&quot;;\r\n}</code></pre>"
          }
        },
        {
          "The object-fit Property": {
            "content": "<p>\r\n\tThe CSS <code>object-fit</code> property is used to specify how an &lt;img&gt; or &lt;video&gt; should be resized to fit its container.</p>\r\n<h2>\r\n\tBrowser Support</h2>\r\n<p>\r\n\tThe numbers in the table specify the first browser version that fully supports the property.</p>\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t\tProperty</th>\r\n\t\t\t<th>\r\n\t\t\t\tChrome</th>\r\n\t\t\t<th>\r\n\t\t\t\tInternet Explorer / Edge</th>\r\n\t\t\t<th>\r\n\t\t\t\tFirefox</th>\r\n\t\t\t<th>\r\n\t\t\t\tSafari</th>\r\n\t\t\t<th>\r\n\t\t\t\tOpera</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\tobject-fit</td>\r\n\t\t\t<td>\r\n\t\t\t\t31.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t16.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t36.0</td>\r\n\t\t\t<td>\r\n\t\t\t\t7.1</td>\r\n\t\t\t<td>\r\n\t\t\t\t19.0</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<h2>\r\n\tThe CSS object-fit Property</h2>\r\n<p>\r\n\tThe CSS <code>object-fit</code> property is used to specify how an &lt;img&gt; or &lt;video&gt; should be resized to fit its container.</p>\r\n<p>\r\n\tThis property tells the content to fill the container in a variety of ways; such as &quot;preserve that aspect ratio&quot; or &quot;stretch up and take up as much space as possible&quot;.</p>\r\n<pre>\r\n<code>img {\r\n  width: 200px;\r\n  height: 400px;\r\n}\r\n</code></pre>\r\n<p>\r\n\tWe see that the image is being squeezed to fit the container of 200x400 pixels, and its original aspect ratio is destroyed.</p>\r\n<p>\r\n\tIf we use <code>object-fit: cover;</code> it will cut off the sides of the image, preserving the aspect ratio, and also filling in the space.</p>\r\n<pre>\r\n<code>img {\r\n  width: 200px;\r\n  height: 400px;\r\n  object-fit: cover;\r\n}\r\n</code></pre>\r\n<h2>\r\n\tAnother Example</h2>\r\n<p>\r\n\tHere we have two images and we want them to fill the width of 50% of the browser window and 100% of the height.</p>\r\n<p>\r\n\tIn the following example we do NOT use <code>object-fit</code>, so when we resize the browser window, the aspect ratio of the images will be destroyed:</p>\r\n<pre>\r\n<code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;body&gt;\r\n\r\n&lt;h2&gt;Not Using object-fit&lt;/h2&gt;\r\n&lt;p&gt;Here we use do not use &quot;object-fit&quot;, so when we resize the browser window, the aspect ratio of the images will be destroyed:&lt;/p&gt;\r\n\r\n&lt;div style=&quot;width:100%;height:400px;&quot;&gt;\r\n  &lt;img src=&quot;rock600x400.jpg&quot; alt=&quot;Norway&quot; style=&quot;float:left;width:50%;height:100%;&quot;&gt;\r\n  &lt;img src=&quot;paris.jpg&quot; alt=&quot;Paris&quot; style=&quot;float:left;width:50%;height:100%;&quot;&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\r\n<p>\r\n\tIn the next example, we use <code>object-fit: cover;</code>, so when we resize the browser window, the aspect ratio of the images is preserved:</p>\r\n<pre>\r\n<code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;body&gt;\r\n\r\n&lt;h2&gt;Using object-fit&lt;/h2&gt;\r\n&lt;p&gt;Here we use &quot;object-fit: cover;&quot;, so when we resize the browser window, the aspect ratio of the images is preserved:&lt;/p&gt;\r\n\r\n&lt;div style=&quot;width:100%;height:400px;&quot;&gt;\r\n  &lt;img src=&quot;rock600x400.jpg&quot; alt=&quot;Norway&quot; style=&quot;float:left;width:50%;height:100%;object-fit:cover;&quot;&gt;\r\n  &lt;img src=&quot;paris.jpg&quot; alt=&quot;Paris&quot; style=&quot;float:left;width:50%;height:100%;object-fit:cover;&quot;&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\r\n<h2>\r\n\tAll Values of The CSS object-fit Property</h2>\r\n<p>\r\n\tThe <code>object-fit</code> property can have the following values:</p>\r\n<ul>\r\n\t<li>\r\n\t\t<code>fill</code> - This is default. The replaced content is sized to fill the element&#39;s content box. If necessary, the object will be stretched or squished to fit</li>\r\n\t<li>\r\n\t\t<code>contain</code> - The replaced content is scaled to maintain its aspect ratio while fitting within the element&#39;s content box</li>\r\n\t<li>\r\n\t\t<code>cover</code> - The replaced content is sized to maintain its aspect ratio while filling the element&#39;s entire content box. The object will be clipped to fit</li>\r\n\t<li>\r\n\t\t<code>none</code> - The replaced content is not resized</li>\r\n\t<li>\r\n\t\t<code>scale-down</code> - The content is sized as if none or contain were specified (would result in a smaller concrete object size)</li>\r\n</ul>\r\n<p>\r\n\tThe following example demonstrates all the possible values of the <code>object-fit</code> property:</p>\r\n<pre>\r\n<code>.fill {object-fit: fill;}\r\n.contain {object-fit: contain;}\r\n.cover {object-fit: cover;}\r\n.scale-down {object-fit: scale-down;}\r\n.none {object-fit: none;}</code></pre>"
          }
        }
      ]
    }
  }
]